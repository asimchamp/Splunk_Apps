# api-metrics-collector
#
# This saved search is used to calculate data volumes by sourcetype.
# Please update the
#   "splunk_app_servicenow-apimetricscollector_index_volume_filter"
# macro in macros.conf to get the right data.

[splunk_app_servicenow.apimetricscollector: calculate indexed data volume]
description = Calculate the amount of data indexed in Splunk by sourcetype
enableSched = 1
cron_schedule = 20 0 * * *
realtime_schedule = 0
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
action.summary_index = 1
action.summary_index.report = ui_metrics_collector_indexed_data_volumes
alert.digest_mode = True
search = | search index=_internal sourcetype=splunkd source=*metrics.log splunk_server="*" group="per_sourcetype_thruput" (`splunk_app_servicenow-apimetricscollector_index_volume_filter`) \
         | stats sum(kb) as sum_kb by series | eval sum_mb=sum_kb/1024

[CMDB CI List Appender]
run_on_startup = true
enableSched = 1
cron_schedule = 0 * * * *
search= [| inputlookup cmdb_ci_list_checkpoint.csv | rename latestTimestamp as _index_earliest | return _index_earliest] \
        eventtype=snow_cmdb_ci_list NOT [ search index=`snow_cmdb_ci_list_index`  \
        | append [search [| inputlookup cmdb_ci_list_checkpoint.csv | rename latestTimestamp as _index_earliest | return _index_earliest] \
         eventtype=snow_cmdb_ci_list | dedup sys_id ] | stats count by sys_id | search count > 1 | table sys_id] \
        | dedup sys_id | table sys_id,name | collect index=`snow_cmdb_ci_list_index` \
        | append [| makeresults | eval latestTimestamp=floor(now()/3600)*3600 \
        | table latestTimestamp | outputlookup cmdb_ci_list_checkpoint.csv]

[Incident State Appender]
run_on_startup = true
enableSched = 1
cron_schedule = 10 * * * *
search= [| inputlookup incident_state_checkpoint.csv | rename latestTimestamp as _index_earliest | return _index_earliest] \
        eventtype=snow_sys_choice_list name="incident" element="state" \
        NOT [search index=`snow_incident_state_index`  \
        | append [search [| inputlookup incident_state_checkpoint.csv | rename latestTimestamp as _index_earliest | return _index_earliest] \
        eventtype=snow_sys_choice_list name="incident" element="state" | dedup value] | stats count by value | search count > 1 | table value] \
        | dedup label,value | table label,value | collect index=`snow_incident_state_index` \
        | append [| makeresults| eval latestTimestamp=floor(now()/3600)*3600 \
        | table latestTimestamp | outputlookup incident_state_checkpoint.csv]

[Sys User Group List Appender]
run_on_startup = true
enableSched = 1
cron_schedule = 40 * * * *
search= [| inputlookup sys_user_group_list_checkpoint.csv | rename latestTimestamp as _index_earliest | return _index_earliest] \
        eventtype=snow_sys_user_group_list sys_id=* \
        NOT [search index=`snow_sys_user_group_list_index` \
        | append [search [| inputlookup sys_user_group_list_checkpoint.csv | rename latestTimestamp as _index_earliest | return _index_earliest] \
        eventtype=snow_sys_user_group_list | dedup sys_id ] | stats count by sys_id | search count > 1 | table sys_id ]  \
        | dedup sys_id | table sys_id,name | collect index=`snow_sys_user_group_list_index` \
        | append [| makeresults | eval latestTimestamp=floor(now()/3600)*3600 \
        | table latestTimestamp | outputlookup sys_user_group_list_checkpoint.csv]