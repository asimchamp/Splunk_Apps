<dashboard>
 <label>Sentiment Overview</label>
<row>
 <html>

    <h1>Sentiment App</h1>
     <h2>Intro</h2>
     Now you can analyze user opinion, converting text into ratings.
     For example, how do twitter users feel about your company over
     time?  How do people in California vs Texas feel about various
     issues?  How is your marketing or tech support performing?  The
     sentiment analysis app allow you to analyze user opinion,
     converting text to numerical ratings.
  <br></br>
    <ul>
      <li>How do twitter users feel about your company over time?</li>
      <li>How do people in California vs Texas feel about various issues?</li>
      <li>How is your marketing or tech support performing against competitors?</li>
      <li>This app includes:</li>
      <ul>
	    <li>two trained datasets (twitter and imdb)</li>
	    <li>three search commands: sentiment, language, tokens</li>
      </ul>
    </ul>
  
  <h2>App Details</h2>
  <b>This app comes with several dashboards, which you can select from the upper left of this page.</b>
     <br/><br/>To get the full power of the sentiment app, build your own searches and dashboards, using the three commands this app adds:
    <ul>
	<li><b>sentiment</b> to predict user sentiment</li>
	<li><b>language</b> to predict what language an event is written in</li>
	<li><b>tokens</b> to make it easier to tokenize terms and phrases for analyzing text</li>
    </ul>
    For details on the parameters for each of these commands, typeahead will provide all the defaults.  Make sure to click More on the typeahead instructions.


    <h2>Training Models</h2>
      From a command shell, you can train it on your own data.  The training produces a (naive bayes classifier) model file used for the sentiment command, but training also outputs a lookup table of a few thousand terms and their expected sentiment rating, so the vocabulary can be tweaked and used with lookup commands to also do some basic sentiment analysis.
    <h2>Accuracy</h2>
      Over the twitter data, assuming 50-50 positive and negative tweets, it's about 70% accurate.  Assuming the actual distribution of tweets, which seems to be about 75% positive, it's about 85% accurate. The most important part is not the accuracy on any given text but on the aggregate -- to see how sentiment trend over time, or how  phone X compares with phone Y.  The IMDB model is based on more reliable training data and may yield better results.

  
  
  </html>    
</row>
</dashboard>
