<?xml version='1.0' encoding='utf-8'?>
<form version="1.1" script="main.js" stylesheet="main.css">

   <label>Boot Duration</label>
   <description>This dashboard displays information about the duration of system boots. A boot process starts when Windows is loading and is finished when the desktop is displayed and the load has dropped to 20%.</description>

   <fieldset autoRun="true">
      <input type="time" searchWhenChanged="true">
         <label>Time range:</label>
         <default>
            <earliest>-1h</earliest>
            <latest>now</latest>
         </default>
         <change>
            <eval token="TimeRangePickerSpan">relative_time(now(), latest) - relative_time(now(), earliest)</eval>
            <eval token="PivotPeriodAutoSolo">case('TimeRangePickerSpan' &lt; 350000, "auto", 'TimeRangePickerSpan' &lt; 610000, "hour", 1=1, "auto")</eval>
            <eval token="PivotPeriodAutoTimechart">case('TimeRangePickerSpan' &lt; 1200, "second", 'TimeRangePickerSpan' &lt; 300000, "minute", 'TimeRangePickerSpan' &lt; 700000, "hour", 1=1, "day")</eval>
         </change>
      </input>
      <input type="dropdown" token="FilterField" id="Input_FilterField">
         <label>Filter field:</label>
      </input>
      <input type="dropdown" token="FilterOperator" id="Input_FilterOperator">
         <label>Filter operator:</label>
      </input>
      <input type="text" token="FilterExpression" id="Input_FilterExpression">
         <label>Filter expression:</label>
         <default>*</default>
      </input>
      <input type="dropdown" token="FilterField2" id="Input_FilterField2" depends="$FilterLevel2$">
      </input>
      <input type="dropdown" token="FilterOperator2" id="Input_FilterOperator2" depends="$FilterLevel2$">
      </input>
      <input type="text" token="FilterExpression2" id="Input_FilterExpression2" depends="$FilterLevel2$">
      </input>
      <input type="dropdown" token="FilterField3" id="Input_FilterField3" depends="$FilterLevel3$">
      </input>
      <input type="dropdown" token="FilterOperator3" id="Input_FilterOperator3" depends="$FilterLevel3$">
      </input>
      <input type="text" token="FilterExpression3" id="Input_FilterExpression3" depends="$FilterLevel3$">
      </input>
      <input type="dropdown" token="FilterField4" id="Input_FilterField4" depends="$FilterLevel4$">
      </input>
      <input type="dropdown" token="FilterOperator4" id="Input_FilterOperator4" depends="$FilterLevel4$">
      </input>
      <input type="text" token="FilterExpression4" id="Input_FilterExpression4" depends="$FilterLevel4$">
      </input>
      <input type="dropdown" token="FilterField5" id="Input_FilterField5" depends="$FilterLevel5$">
      </input>
      <input type="dropdown" token="FilterOperator5" id="Input_FilterOperator5" depends="$FilterLevel5$">
      </input>
      <input type="text" token="FilterExpression5" id="Input_FilterExpression5" depends="$FilterLevel5$">
      </input>
      <input type="dropdown" token="FilterField6" id="Input_FilterField6" depends="$FilterLevel6$">
      </input>
      <input type="dropdown" token="FilterOperator6" id="Input_FilterOperator6" depends="$FilterLevel6$">
      </input>
      <input type="text" token="FilterExpression6" id="Input_FilterExpression6" depends="$FilterLevel6$">
      </input>
      <input type="text" token="FilterLevels" id="Input_FilterLevels" depends="$FilterLevels_Hidden$">
      </input>
      <input type="text" token="FilterDatamodel" id="Input_FilterDatamodel" depends="$FilterDatamodel_Hidden$">
         <default>OnOffTransition_BootDetail</default>
      </input>
   </fieldset>

   <search id="Search_Single">
      <query>
         | pivot `uA_DM_OnOffTransition_BootDetail` OnOffTransition_BootDetail
            avg(TotalBootTimeMs) as AvgTotalBootTimeMs
            avg(PostBootTimeMs) as AvgPostBootTimeMs
            avg(MainPathBootTimeMs) as AvgMainPathBootTimeMs
            avg(ComputerStartupMs) as AvgComputerStartupMs
            count(OnOffTransition_BootDetail) as BootCount
            dc(host) as HostCount
            $SearchFilter$
         | eval AvgTotalBootTimeSRounded = round (AvgTotalBootTimeMs/1000,2)
         | eval AvgPostBootTimeSRounded = round (AvgPostBootTimeMs/1000,2)
         | eval AvgMainPathBootTimeSRounded = round (AvgMainPathBootTimeMs/1000,2)
         | eval AvgComputerStartupSRounded = round (AvgComputerStartupMs/1000,2)
      </query>
   </search>
   
   <!-- Row 1 -->
   <row>
      <panel>
         <title>Overview</title>
         <viz type="uberAgent.uberagent-singlevalue">
            <search base="Search_Single" />
            <option name="uberAgent.uberagent-singlevalue.1-field">AvgTotalBootTimeSRounded</option>
            <option name="uberAgent.uberagent-singlevalue.1-title">Avg. total boot:</option>
            <option name="uberAgent.uberagent-singlevalue.1-afterLabel">s</option>
            <option name="uberAgent.uberagent-singlevalue.2-field">AvgPostBootTimeSRounded</option>
            <option name="uberAgent.uberagent-singlevalue.2-title">Avg. post boot:</option>
            <option name="uberAgent.uberagent-singlevalue.2-afterLabel">s</option>
            <option name="uberAgent.uberagent-singlevalue.3-field">AvgMainPathBootTimeSRounded</option>
            <option name="uberAgent.uberagent-singlevalue.3-title">Avg. main path:</option>
            <option name="uberAgent.uberagent-singlevalue.3-afterLabel">s</option>
            <option name="uberAgent.uberagent-singlevalue.4-field">AvgComputerStartupSRounded</option>
            <option name="uberAgent.uberagent-singlevalue.4-title">Avg. computer startup:</option>
            <option name="uberAgent.uberagent-singlevalue.4-afterLabel">s</option>
            <option name="uberAgent.uberagent-singlevalue.5-field">BootCount</option>
            <option name="uberAgent.uberagent-singlevalue.5-title">Boot count:</option>
            <option name="uberAgent.uberagent-singlevalue.5-afterLabel"></option>
            <option name="uberAgent.uberagent-singlevalue.6-field">HostCount</option>
            <option name="uberAgent.uberagent-singlevalue.6-title">#Hosts:</option>
            <option name="uberAgent.uberagent-singlevalue.6-afterLabel"></option>
         </viz>

      </panel>
   </row>
   
   <!-- Row 2 -->
   <row>
      <panel>
         <title>Boot duration over time</title>
         <chart>
            <search>
               <query>
                  | pivot `uA_DM_OnOffTransition_BootDetail` OnOffTransition_BootDetail
                     count(OnOffTransition_BootDetail) as EventCount
                     sum(MainPathBootTimeMs) as SumMainPathBootTimeMs
                     sum(PostBootTimeMs) as SumPostBootTimeMs
                     splitrow
                        _time
                        period $PivotPeriodAutoTimechart$
                     $SearchFilter$
                  | timechart
                     `uberAgent_dynamic_span`
                     eval(round(sum(SumPostBootTimeMs)/sum(EventCount)/1000,2)) as "Post boot (s)"
                     eval(round(sum(SumMainPathBootTimeMs)/sum(EventCount)/1000,2)) as "Main path (s)"
               </query>
            </search>
            <option name="height">250</option>
            <option name="charting.chart">column</option>
            <option name="charting.chart.stackMode">stacked</option>
            <option name="charting.legend.placement">right</option>
            <option name="charting.axisY.includeZero">true</option>
            <option name="charting.axisTitleX.visibility">collapsed</option>
            <option name="charting.axisTitleY.visibility">collapsed</option>
            <option name="charting.drilldown">none</option>
         </chart>
      </panel>
   </row>

   <!-- Row 3 -->
   <row>
      <panel>
         <title>Boot duration grouped</title>
         <input type="dropdown" token="Panel31GroupBy" searchWhenChanged="true">
            <choice value="AdDomainDns">AD domain DNS</choice>
            <choice value="AdOu">AD OU</choice>
            <choice value="AdSite">AD site</choice>
            <choice value="CtxDeliveryGroupName">Citrix delivery group</choice>
            <choice value="CtxFarmName">Citrix site</choice>
            <choice value="CtxMachineCatalogName">Citrix machine catalog</choice>
            <choice value="HwManufacturer">Hardware manufacturer</choice>
            <choice value="HwModel">Hardware model</choice>
            <choice value="host">Host</choice>
            <choice value="OsBuild">OS build number</choice>
            <choice value="OsType">OS type</choice>
            <choice value="OsVersion">OS version number</choice>
            <choice value="TargetStateDisplayName">Target state</choice>
            <choice value="WakeSourceTypeDisplayName">Wake source type</choice>
            <choice value="WakeSourceText">Wake source text</choice>
            <default>HwModel</default>
            <label>Group by:</label>
            <change>
               <condition value="*">
                  <set token="Panel31GroupByDisplay">$label$</set>
                  <unset token="DrilldownFilterBy31"></unset>
               </condition>
            </change>
         </input>
         <table>
            <search>
               <query>
                  | pivot `uA_DM_OnOffTransition_BootDetail` OnOffTransition_BootDetail
                     dc(host) as "#Hosts"
                     count(host) as "#Boot"
                     avg(TotalBootTimeMs) as AvgTotalBootTimeMs
                     avg(MainPathBootTimeMs) as AvgMainPathBootTimeMs
                     avg(KernelInitTimeMs) as AvgKernelInitTimeMs
                     avg(SmssInitTimeMs) as AvgSmssInitTimeMs
                     avg(AutoCheckTimeMs) as AvgAutoCheckTimeMs
                     avg(Session0InitDurationMs) as AvgSession0InitDurationMs
                     avg(Session1InitDurationMs) as AvgSession1InitDurationMs
                     avg(WininitInitDurationMs) as AvgWininitInitDurationMs
                     avg(WinlogonInitDurationMs) as AvgWinlogonInitDurationMs
                     avg(AutostartServicesMs) as AvgAutostartServicesMs
                     avg(ComputerStartupMs) as AvgComputerStartupMs
                     avg(PostBootTimeMs) as AvgPostBootTimeMs
                     splitrow
                        $Panel31GroupBy$
                     $SearchFilter$
                  | eval "Total boot (s)" = round (AvgTotalBootTimeMs/1000,2)
                  | eval "Main path (s)" = round (AvgMainPathBootTimeMs/1000,2)
                  | eval "Kernel init (s)" = round (AvgKernelInitTimeMs/1000,2)
                  | eval "Smss init (s)" = round (AvgSmssInitTimeMs/1000,2)
                  | eval "Autocheck (s)" = round (AvgAutoCheckTimeMs/1000,2)
                  | eval "Session 0 init (s)" = round (AvgSession0InitDurationMs/1000,2)
                  | eval "Session 1 init (s)" = round (AvgSession1InitDurationMs/1000,2)
                  | eval "Wininit init (s)" = round (AvgWininitInitDurationMs/1000,2)
                  | eval "Winlogon init (s)" = round (AvgWinlogonInitDurationMs/1000,2)
                  | eval "Autostart services (s)" = round (AvgAutostartServicesMs/1000,2)
                  | eval "Computer startup (s)" = round (AvgComputerStartupMs/1000,2)
                  | eval "Post boot (s)" = round (AvgPostBootTimeMs/1000,2)
                  | rename "$Panel31GroupBy$" as "$Panel31GroupByDisplay$"
                  | table
                     "$Panel31GroupByDisplay$"
                     "#Hosts"
                     "#Boot"
                     "Total boot (s)"
                     "Main path (s)"
                     "Kernel init (s)"
                     "Smss init (s)"
                     "Autocheck (s)"
                     "Session 0 init (s)"
                     "Session 1 init (s)"
                     "Wininit init (s)"
                     "Winlogon init (s)"
                     "Autostart services (s)"
                     "Computer startup (s)"
                     "Post boot (s)"
               </query>
            </search>
            <option name="count">20</option>
            <option name="drilldown">row</option>
            <drilldown>
                <set token="DrilldownFilterBy31">$click.value$</set>
            </drilldown>
         </table>
         
         <html src="boot_duration_explanation.html">
         </html>
      </panel>
   </row>


   <!-- Row 4 -->
   <row depends="$DrilldownFilterBy31$">
      <panel>
         <title>Detail: $Panel31GroupByDisplay$ = $DrilldownFilterBy31$</title>
         <table>
            <search>
               <query>
                  | pivot `uA_DM_OnOffTransition_BootDetail` OnOffTransition_BootDetail
                     latest(_time) as Time
                     latest(host) as Host
                     latest(TotalBootTimeMs) as TotalBootTimeMs
                     latest(MainPathBootTimeMs) as MainPathBootTimeMs
                     latest(KernelInitTimeMs) as KernelInitTimeMs
                     latest(SmssInitTimeMs) as SmssInitTimeMs
                     latest(AutoCheckTimeMs) as AutoCheckTimeMs
                     latest(Session0InitDurationMs) as Session0InitDurationMs
                     latest(Session1InitDurationMs) as Session1InitDurationMs
                     latest(WininitInitDurationMs) as WininitInitDurationMs
                     latest(WinlogonInitDurationMs) as WinlogonInitDurationMs
                     latest(AutostartServicesMs) as AutostartServicesMs
                     latest(ComputerStartupMs) as ComputerStartupMs
                     latest(PostBootTimeMs) as PostBootTimeMs
                     splitrow
                        BootUID
                     filter $Panel31GroupBy$ is $DrilldownFilterBy31|s$
                     $SearchFilter$
                  | eval "Total boot (s)" = round (TotalBootTimeMs/1000,2)
                  | eval "Main path (s)" = round (MainPathBootTimeMs/1000,2)
                  | eval "Kernel init (s)" = round (KernelInitTimeMs/1000,2)
                  | eval "Smss init (s)" = round (SmssInitTimeMs/1000,2)
                  | eval "Autocheck (s)" = round (AutoCheckTimeMs/1000,2)
                  | eval "Session 0 init (s)" = round (Session0InitDurationMs/1000,2)
                  | eval "Session 1 init (s)" = round (Session1InitDurationMs/1000,2)
                  | eval "Wininit init (s)" = round (WininitInitDurationMs/1000,2)
                  | eval "Winlogon init (s)" = round (WinlogonInitDurationMs/1000,2)
                  | eval "Autostart services (s)" = round (AutostartServicesMs/1000,2)
                  | eval "Computer startup (s)" = round (ComputerStartupMs/1000,2)
                  | eval "Post boot (s)" = round (PostBootTimeMs/1000,2)
                  | eval Time = strftime (strptime (Time, "%Y-%m-%dT%H:%M:%S.%Q%z"), "%Y-%m-%d %H:%M:%S")
                  | sort - Time
                  | table
                     BootUID
                     Time
                     Host
                     "Total boot (s)"
                     "Main path (s)"
                     "Kernel init (s)"
                     "Smss init (s)"
                     "Autocheck (s)"
                     "Session 0 init (s)"
                     "Session 1 init (s)"
                     "Wininit init (s)"
                     "Winlogon init (s)"
                     "Autostart services (s)"
                     "Computer startup (s)"
                     "Post boot (s)"
               </query>
            </search>
            <fields>Time,Host,"Total boot (s)","Main path (s)","Kernel init (s)","Smss init (s)","Autocheck (s)","Session 0 init (s)","Session 1 init (s)","Wininit init (s)","Winlogon init (s)","Autostart services (s)","Computer startup (s)","Post boot (s)"</fields>
            <option name="count">50</option>
            <option name="drilldown">row</option>
            <drilldown>
               <link>
                  <![CDATA[
                     single_boot_duration?earliest=$earliest$&latest=$latest$&form.FilterField=sBootUID&form.FilterOperator=in&form.FilterExpression=$row.BootUID$
                  ]]>
               </link>
            </drilldown>
         </table>

         <html src="boot_duration_explanation_2.html">
         </html>
      </panel>
   </row>

</form>
