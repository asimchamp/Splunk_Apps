[Search]
action.email.inline = 1
alert.suppress = 0
alert.track = 1
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1h
search = index=servervirt

[Lister - SourceTypes]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
cron_schedule = 0 23 * * *
description = Gets all host source types for listers that let the end user choose which type of hypervisor information to show
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
search = eventtype=servervirt:host earliest=-1h | fields sourcetype product | dedup product | rex field=sourcetype "(?i)^hypervisor:(?<product_value>[^:]+):" | table product product_value | outputlookup hv_type.csv

[Update Object IDs]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
cron_schedule = 45 * * * *
description = Refreshes all object IDs for easy lookup when you do not know which type of object you have
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
search = `updateObjectIDs`

[Update Host Sourcetypes]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
cron_schedule = 45 * * * *
description = Refreshes all host sourcetypes for faster lookup used in summary indexing
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
search = `updateHostSourcetypes`

#############################################
#
# Summary Indexing
#
#############################################

[Summary - Hosts]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = servervirt_summary
alert.suppress = 0
alert.track = 0
cron_schedule = */10 * * * *
description = Collects host information for faster reporting
dispatch.earliest_time = -15m@m
dispatch.latest_time = -5m@m
enableSched = 1
realtime_schedule = 0
search = eventtype=servervirt:host:* | fields hyp_hostname sourcetype | dedup hyp_hostname | sistats count by hyp_hostname sourcetype

[Summary - Host Performance Processor]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = servervirt_summary
alert.suppress = 0
alert.track = 0
cron_schedule = */10 * * * *
description = Collects host performance information for faster reporting
dispatch.earliest_time = -15m@m
dispatch.latest_time = -5m@m
enableSched = 1
realtime_schedule = 0
search = eventtype=servervirt:performance:*:host:processor counter="% Processor Time" | fields _time counter hyp_hostname Value | sitimechart max(Value) by hyp_hostname

[Summary - Host Performance Memory]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = servervirt_summary
alert.suppress = 0
alert.track = 0
cron_schedule = */10 * * * *
description = Collects host performance information for faster reporting
dispatch.earliest_time = -15m@m
dispatch.latest_time = -5m@m
enableSched = 1
realtime_schedule = 0
search = eventtype=servervirt:performance:*:host:memory counter="Available Bytes" | fields _time counter hyp_hostname Value | eval MB=`toMB(Value)` | sitimechart min(MB) by hyp_hostname

[Summary - VMs]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = servervirt_summary
alert.suppress = 0
alert.track = 0
cron_schedule = */10 * * * *
description = Collects VM information for faster reporting
dispatch.earliest_time = -15m@m
dispatch.latest_time = -5m@m
enableSched = 1
realtime_schedule = 0
search = eventtype=servervirt:vm:* | fields vm_id sourcetype | dedup vm_id | sistats count by vm_id sourcetype

#############################################
#
# Alerts
#
#############################################
[Alerts - High vCPU per pCPU]
action.email.reportServerEnabled = 0
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Searhes for hosts with a high vCPU to pCPU ratio and stores results in the alerts index
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_view = flashtimeline
search = eventtype=servervirt:host:* cpu_count="*" | fields hyp_hostname cpu_count eventtype | rename hyp_hostname AS vm_host cpu_count as pCPU | join type=inner vm_host [search eventtype=servervirt:vm:* | dedup vm_id | fields vm_cpu_count, vm_host | stats sum(vm_cpu_count) as vCPU by vm_host ] | eval vCPU_pCPU_ratio=round(vCPU/pCPU,2) | eval "Alert Name"="High vCPU/pCPU Ratio" | search vCPU_pCPU_ratio > `alerts-high_vCPU_to_pCPU` | rename vm_host AS obj_name | eval obj_type="host" | eval alert_name="High vCPU per pCPU" | rename vCPU_pCPU_ratio AS value | eval severity="Critical" | table _time obj_name obj_type alert_name value severity eventtype | rename eventtype AS orig_eventtype | collect index=servervirt_alerts

[Alerts - CPU Host]
action.email.inline = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Searhes for hosts with high CPU utilization and stores results in the alerts index
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = eventtype=servervirt:performance:*:host:processor instance=_Total Value >= `alerts-CPU_host_warn` | eval severity=if(Value >= `alerts-CPU_host_critical`, "Critical", "Warning") | rename hyp_hostname AS obj_name | eval alert_name=if(severity=="Critical", "High Host CPU Utilization - Critical", "High Host CPU Utilization - Warning") | eval obj_type="host" | rename Value AS value | table _time obj_name obj_type alert_name value severity eventtype | rename eventtype AS orig_eventtype | collect index=servervirt_alerts

[Alerts - RAM Host]
action.email.inline = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Searhes for hosts with low available RAM and stores results in the alerts index
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = eventtype=servervirt:performance:*:host:memory Value <= `alerts-RAM_host_warn` | eval severity=if(Value <= `alerts-RAM_host_critical`, "Critical", "Warning") | rename hyp_hostname AS obj_name | eval alert_name=if(severity=="Critical", "Low Available Host RAM - Critical", "Low Available Host RAM - Warning") | eval obj_type="host" | eval value=`formatBytes(Value)` | table _time obj_name obj_type alert_name value severity eventtype | rename eventtype AS orig_eventtype | collect index=servervirt_alerts

[Alerts - CPU VM]
action.email.inline = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Searhes for VMs with critical CPU utilization and stores results in the alerts index
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = eventtype=servervirt:performance:*:vm:processor counter="% Total Run Time" Value >= `alerts-CPU_vm_warn` | eval severity=if(Value >= `alerts-CPU_vm_critical`, "Critical", "Warning") | rename instance AS obj_name | eval obj_type="vm" | eval alert_name=if(severity=="Critical", "High VM CPU Utilization - Critical", "High VM CPU Utilization - Warning")  | rename Value AS value | table _time obj_name obj_type alert_name value severity eventtype | rename eventtype AS orig_eventtype | collect index=servervirt_alerts

[Alerts - RAM VM]
action.email.inline = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Searhes for VMs with low available RAM and stores results in the alerts index
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = eventtype=servervirt:performance:*:vm:memory Value <= `alerts-RAM_vm_warn` | eval severity=if(Value <= `alerts-RAM_vm_critical`, "Critical", "Warning") | rename vm_name AS obj_name | eval alert_name=if(severity=="Critical", "Low Available VM RAM - Critical", "Low Available VM RAM - Warning") | eval obj_type="host" | eval value=`formatBytes(Value)` | table _time obj_name obj_type alert_name value severity eventtype | rename eventtype AS orig_eventtype | collect index=servervirt_alerts

[Alerts - No VM Tools Installed]
action.email.inline = 1
alert.severity = 5
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Searhes for VMs without VM tools installed and stores results in the alerts index
dispatch.earliest_time = -1h@h
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = eventtype=servervirt:vm vm_toolstack_version="" | eval severity="Warning" | rename vm_name AS obj_name | eval obj_type="VM" | eval alert_name="No Virtual Machine Tools Installed" | eval value="Null" | table _time obj_name obj_type alert_name value severity eventtype | rename eventtype AS orig_eventtype | collect index=servervirt_alerts
