[Config_Tracker: Indexes]
action.email.inline = 1
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = _audit
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 31 23 * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | rest splunk_server=local /servicesNS/-/-/configs/conf-indexes | rename eai:appName as app eai:acl.sharing as sharing | table app sharing author title homePath coldPath thawedPath frozenTimePeriodInSecs maxDataSize maxHotBuckets maxTotalDataSizeMB | foreach * [eval <<FIELD>> = if(len(<<FIELD>>)>0, '<<FIELD>>', "-")] | join app type=left [| rest splunk_server=local /servicesNS/-/-/apps/local | rename title as app label as app_label | table app app_label] | eval app_label = if(isnotnull(app_label), app_label, app)

[Config_Tracker: Macros]
action.email.inline = 1
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = _audit
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 32 23 * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | rest splunk_server=local /servicesNS/-/-/configs/conf-macros | rename eai:appName as app eai:acl.sharing as sharing | eval status = if(disabled=0, "Enabled" , "Disabled")| table app author title definition args sharing status | foreach * [eval <<FIELD>> = if(len(<<FIELD>>)>0, '<<FIELD>>', "-")]| join app type=left [| rest splunk_server=local /servicesNS/-/-/apps/local | rename title as app label as app_label | table app app_label] | eval app_label = if(isnotnull(app_label), app_label, app)

[Config_Tracker: SavedSearches]
action.email.inline = 1
action.email.reportServerEnabled = 0
action.summary_index = 1
action.summary_index._name = _audit
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 23 * * *
dispatch.earliest_time = -15m
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | rest splunk_server=local /servicesNS/-/-/configs/conf-savedsearches | rename eai:appName as app eai:acl.sharing as sharing | eval status = if(disabled=0, "Enabled" , "Disabled")  | fields app title author search cron_schedule action.email action.email.subject action.email.to splunk_server sharing status | foreach * [eval <<FIELD>> = if(len('<<FIELD>>') > 0,'<<FIELD>>', "-")]| join app type=left [| rest splunk_server=local /servicesNS/-/-/apps/local | rename title as app label as app_label | table app app_label] | eval app_label = if(isnotnull(app_label), app_label, app)

[Config_Tracker: Props]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = _audit
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 32 23 * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = | rest splunk_server=local /servicesNS/-/-/configs/conf-props | eval title = if(isnull(sourcetype), title, sourcetype) | rename eai:appName as app eai:acl.sharing as sharing | table app author sharing title DATETIME_CONFIG TIME_FORMAT TIME_PREFIX MAX_TIMESTAMP_LOOKAHEAD LINE_BREAKER TZ SHOULD_LINEMERGE MAX_DAYS_AGO TRUNCATE BREAK_ONLY_BEFORE MUST_BREAK_AFTER MUST_NOT_BREAK_BEFORE MUST_NOT_BREAK_AFTER | foreach * [eval <<FIELD>> = if(len(<<FIELD>>)>0, '<<FIELD>>', "-")] | join app type=left [| rest splunk_server=local /servicesNS/-/-/apps/local | rename title as app label as app_label | table app app_label] | eval app_label = if(isnotnull(app_label), app_label, app)

[Config_Tracker: Transforms]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = _audit
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 33 23 * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = | rest splunk_server=local /servicesNS/-/-/configs/conf-transforms | eval title = if(isnull(sourcetype), title, sourcetype) | rename eai:appName as app eai:acl.sharing as sharing | table app author sharing title SOURCE_KEY DEST_KEY REGEX FORMAT DELIMS FIELDS MV_ADD | foreach * [eval <<FIELD>> = if(len(<<FIELD>>)>0, '<<FIELD>>', "-")] | join app type=left [| rest splunk_server=local /servicesNS/-/-/apps/local | rename title as app label as app_label | table app app_label] | eval app_label = if(isnotnull(app_label), app_label, app)

[Config_Tracker: Serverclass]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = _audit
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 33 23 * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = | rest splunk_server=local /servicesNS/-/-/configs/conf-serverclass | rename eai:appName as app eai:acl.sharing as sharing | where title!="global" | rex field=title ":app:(?<apps>\S+)" | rex field=title "serverClass:(?<title>[^:]+)"  | table author sharing app title apps stateOnClient restartSplunkd restartSplunkWeb machineTypesFilter blacklist* whitelist* | stats values() as * by title | join app type=left [| rest splunk_server=local /servicesNS/-/-/apps/local | rename title as app label as app_label | table app app_label] | eval app_label = if(isnotnull(app_label), app_label, app) | eval blacklist = "-" | foreach black* [eval blacklist = if('<<FIELD>>' != "-", blacklist . " " .'<<FIELD>>', blacklist)] | eval whitelist = "-" | foreach white* [eval whitelist = if('<<FIELD>>' != "-", whitelist . " " .'<<FIELD>>', whitelist)] | table author sharing app title apps stateOnClient restartSplunkd restartSplunkWeb machineTypesFilter blacklist whitelist app_label | foreach stateOnClient restartSplunkd restartSplunkWeb machineTypesFilter [eval <<FIELD>> = if(len('<<FIELD>>') > 0,'<<FIELD>>', "-")] | foreach blacklist whitelist [eval <<FIELD>> = if(match(<<FIELD>>,"^- \w"), replace(<<FIELD>>, "^- ", ""), <<FIELD>>)]

[Config_Tracker: Eventtypes]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = _audit
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 31 23 * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = | rest splunk_server=local /servicesNS/-/-/configs/conf-eventtypes | rename eai:appName as app eai:acl.sharing as sharing  | eval status = if(disabled=0, "Enabled" , "Disabled") | table author app title search status sharing | foreach * [eval <<FIELD>> = if(len(<<FIELD>>)>0, '<<FIELD>>', "-")] | join app type=left [| rest splunk_server=local /servicesNS/-/-/apps/local | rename title as app label as app_label | table app app_label] | eval app_label = if(isnotnull(app_label), app_label, app)

[Config_Tracker: Roles]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = _audit
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 31 23 * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = | rest splunk_server=local /servicesNS/-/-/authorization/roles | rename eai:acl.sharing as sharing | eval app = "" | eval app_label = "" | table title author app app_label sharing capabilities srchFilter srchJobsQuota srchDiskQuota srchIndexesAllowed srchIndexesDefault defaultApp imported_roles imported_srchJobsQuota imported_srchFilter imported_srchDiskQuota imported_srchIndexesAllowed imported_srchIndexesDefault | makemv capabilities | makemv srchIndexesAllowed | makemv srchIndexesDefault | makemv imported_roles | makemv imported_srchIndexesAllowed | makemv imported_srchIndexesDefault | foreach * [eval <<FIELD>> = if(len('<<FIELD>>')>0, '<<FIELD>>', "-")] | eval title = replace(title, " ", "_")

[Config_Tracker: Users]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = _audit
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 31 23 * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = | rest splunk_server=local /servicesNS/-/-/authentication/users | eval app= "" | eval app_label = "" | rename eai:acl.sharing as sharing | table author app app_label sharing title capabilities email realname roles | makemv roles delim="\n" | eval roles = replace(roles, " ", "_") | makemv capabilities | foreach * [eval <<FIELD>> = if(len('<<FIELD>>')>0, '<<FIELD>>', "-")]

[Config_Tracker: Apps]
action.email.inline = 1
action.summary_index = 1
action.summary_index._name = _audit
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 23 * * *
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = | rest splunk_server=local /servicesNS/-/-/apps/local | rename eai:acl.app as app eai:acl.sharing as sharing eai:acl.perms.read as read_permissions eai:acl.perms.write as write_permissions | eval status = if(disabled=0, "Enabled" , "Disabled") | makemv read_permissions delim="\n" | makemv write_permissions delim="\n" | foreach read_permissions write_permissions [eval <<FIELD>> = replace('<<FIELD>>', " ", "_")] | table app author check_for_updates description details status read_permissions write_permissions sharing label title version visible | foreach * [eval <<FIELD>> = if(len('<<FIELD>>')>0, '<<FIELD>>', "-")] | rename label as app_label
