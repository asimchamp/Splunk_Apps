
==========Author: Nima Kaveh===============

This application is an example of how you can use Splunk to generate blocking IP rules based on SSH attacks. 

This code gets connected to Splunk, runs a search and gets back 10 most attacking IPs from SSH logs (at any time). This code reads the iptable files and generate a new iptable file including rules to block attacking IPs.

Note: Java should be installed on the server. You should run the Splunk deamon first.  

Note: This App will analyze syslogs. The best way of gathering all of your syslogs from your own network/cloud in one place would be using "Splunk Forwarder" to forward all of your logs into a folder on your server. If you need more information on how to install "Spunk Forwarder" visit http://splunk-base.splunk.com/answers/50082/how-do-i-configure-a-splunk-forwarder-on-linux

 
Usage & Installation:

Source files are located in (spunk folder)/etc/apps/splunk_for_ssh/bin

You need to do the following before running the application through CLI:

In "SplunkForSSH.java" you need to define your own credential in order to login to Splunk through Splunk API

public static Service connectAndLoginToSplunkExample() {
		Map<String, Object> connectionArgs = new HashMap<String, Object>();
		connectionArgs.put("host", "SERVERNAME");
		connectionArgs.put("username", "YOUR USERNAME");
		connectionArgs.put("password", "YOUR PASSWORD");
		connectionArgs.put("port", 8089);
		connectionArgs.put("scheme", "https");
		Service splunkService = Service.connect(connectionArgs);
		return splunkService;
	}  

In "ReadWriteIPTable.java" you need to change the path to your IPTable file on your machine

File file = new File("PATH TO YOUR IPTABLE FILE");
File resultFile = new File("PATH TO YOUR NEW IPTABLE FILE");

After changing the above you only need to run ReadWriteIPTABLE.java to get a new IPtable file. Or you can create a JAR file and just run it through command line.

Note: This program writes blocking rules between the following comments:

# SPLUNKSSH_INSERT_START_LINE

# SPLUNKSSH_INSERT_END_LINE

Every-time you run the program, it generates new rules between the above comments right after the pre-existing rules. Just make sure you always replace the IPTable file with new IPTable file before running the app for the second time and remove ".new" extension.    

With the generated IPTABLE file either you can use Puppet to apply rules to vms or directly by running a command from command line like below. Puppet is better suited to less-dynamic setups, because on a large network, puppet will take between 10-30 mins to reevaluate rules and apply them to VMs.

iptables -A INPUT -m state --state NEW -m tcp -p tcp -s (Attacking IP generated by this app) --dport -j ACCEPT

Note: In most Linux installs iptables has become a standard option, especially Red Hat. There is a very good chance that iptables is already installed on your machine. To check if this is installed or not refer to this link: http://www.cae.wisc.edu/iptables-installing


========License and Terms of Use================

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY.
 
    
 