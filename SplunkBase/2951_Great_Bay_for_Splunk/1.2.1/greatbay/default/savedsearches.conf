[Beacon Events by Session]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Beacon events grouped by session
dispatch.earliest_time = 0
display.visualizations.show = 0
request.ui_dispatch_app = greatbay
request.ui_dispatch_view = search
search = `greatbay_index` sourcetype=greatbay:beacon | transaction mac_address startswith=beacon_type="Profile Entering Event" endswith=beacon_type="Profile Exiting Event"

[Beacon Audit Events Search (table)]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
display.general.type = statistics
search = `greatbay_index` sourcetype=greatbay:audit user=* src_ip=* | table _time user src_ip mode action  object object_attrs

[Beacon Audit Events Search (details)]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
alert.track = 0
description = Audit search with attributes extracted
display.events.fields = ["host","source","sourcetype","beacon_type"]
display.visualizations.show = 0
request.ui_dispatch_app = greatbay
request.ui_dispatch_view = search
search = `greatbay_index` sourcetype=greatbay:audit | rex  field=object_attrs  "\((?<json_field>{[^}]+})" | spath input=json_field

[Sponsorship without Timeout]
action.email.useNSSubject = 1
action.keyindicator.invert = 0
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 * * * *
description = Work in progress
disabled = 1
dispatch.earliest_time = -1h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","beacon_type","mac","sponsor_enabled","timeout"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = greatbay
request.ui_dispatch_view = search
# Try to use this if you want...
#search = `greatbay_index` sourcetype=greatbay:audit | rex field=object_attrs  "\((?<json_field>{[^}]+})" | spath input=json_field | eval mac=mvdedup(mac) | search  timeout=f sponsor_enabled=f | table _time host src_ip mac user category timeout
search = `greatbay_index` sourcetype=greatbay:audit | where (object_attrs LIKE "sponsorship.set%null])") OR (object_attrs LIKE "%\"timeoutSelect\",\"\",\"0\"%")
description = Alert if timeout has not been set

# Population of new mac addresses lookup
# Search run every hour

[Search for New MAC Address]
action.email.inline = 1
action.email.reportServerEnabled = 0
cron_schedule = 3 * * * *
description = Search for new mac addresses. Automatically run every hour !
dispatch.earliest_time = -1h@h-3m
dispatch.latest_time = @h-3m
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = `greatbay_index` sourcetype=greatbay:beacon | table _time  mac_address | dedup mac_address | rename _time AS first_seen  |lookup mac_address mac_address OUTPUT first_seen AS lookup_first_seen | where NOT lookup_first_seen LIKE "%" | table first_seen mac_address | outputlookup append=t mac_address


