[EMC-Isilon-Cluster-Stats-lookup]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0-59/5 * * * *
dispatch.earliest_time = -2h
dispatch.latest_time = now
enableSched = 1
run_on_startup = true
search = `isilon_index` sourcetype="emc:isilon:rest" namespace="statistics" (stats.key = "node.health") | stats latest(stats.value) AS "Health" by stats.devid,Cluster_Name,lnn | append [ search `isilon_index` namespace="statistics" (stats.key = "node.ifs.bytes.in.rate") | stats latest(stats.value) AS "In b/s" by stats.devid,Cluster_Name,lnn ] | append [ search `isilon_index` namespace="statistics" (stats.key = "node.ifs.bytes.out.rate") | stats latest(stats.value) AS "Out b/s" by stats.devid,Cluster_Name,lnn] | append [ search `isilon_index` namespace="statistics" (stats.key = "node.ifs.bytes.total") | stats latest(stats.value) AS "HDD Size" by stats.devid,Cluster_Name,lnn] | append [ search `isilon_index` namespace="statistics" (stats.key = "node.ifs.bytes.used") | stats latest(stats.value) AS "HDD Used" by stats.devid,Cluster_Name,lnn] | append [ search `isilon_index` namespace="statistics" (stats.key = "node.ifs.ssd.bytes.total") | stats latest(stats.value) AS "SSD Size" by stats.devid,Cluster_Name,lnn] | append [ search `isilon_index` namespace="statistics" (stats.key = "node.ifs.ssd.bytes.used") | stats latest(stats.value) AS "SSD Used" by stats.devid,Cluster_Name,lnn] | append [ search `isilon_index` namespace="statistics" ("stats.key"="node.uptime") | stats latest(stats.value) as Uptime by stats.devid,Cluster_Name,lnn] | rename stats.devid AS "Device ID" | stats first("Health") as "Health", first("In b/s") as "In b/s", first("Out b/s") as "Out b/s", first("HDD Size") as "HDD Size", first("HDD Used") as "HDD Used", first("SSD Size") as "SSD Size", first("SSD Used") as "SSD Used", first(Uptime) as Uptime by Cluster_Name, "Device ID", lnn | eval "In b/s" =case (isnull('In b/s'),0,'In b/s'!="null",'In b/s') | eval "Out b/s" =case(isnull('Out b/s'),0,'Out b/s'!="null",'Out b/s') | eval "Total b/s" = ('In b/s' + 'Out b/s') | eval "HDD Used %" = ifnull(round(('HDD Used' * 100)/'HDD Size',2),0) | eval "SSD Used %" = ifnull(round(('SSD Used' * 100)/'SSD Size',2),0) | `seconds_to_time(Uptime)` | rename Time as Uptime | table "Cluster_Name","Device ID","lnn","Health","Uptime","In b/s","Out b/s","Total b/s","HDD Size","HDD Used","HDD Used %","SSD Size","SSD Used","SSD Used %" | outputlookup ClusterStatsLookup

[EMC-Isilon-Cluster-lookup]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0-59/5 * * * *
dispatch.earliest_time = -2h
dispatch.latest_time = now
enableSched = 1
run_on_startup = true
search = `isilon_index` sourcetype="emc:isilon:rest" namespace="cluster" name=* | stats latest(name) as Cluster_Name by node | rename node AS Master_Node | OUTPUTLOOKUP ClusterNameLookup

[EMC-Isilon-Disk-lookup]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */5 * * * *
dispatch.earliest_time = -2h
dispatch.latest_time = now
enableSched = 1
run_on_startup = true
search = `isilon_index` sourcetype=emc:isilon:rest namespace=statistics stats.key = "node.disk.name.*" Cluster_Name=* lnn=* | stats latest(stats.value) as disk_bay by lnn, Cluster_Name, DiskIndex | append [ search `isilon_index` sourcetype=emc:isilon:rest namespace=statistics Cluster_Name = * lnn=* stats.key = "node.disk.type.*" | stats latest(stats.value) as disk_type by lnn, Cluster_Name, DiskIndex] | append [ search `isilon_index` sourcetype=emc:isilon:rest namespace=statistics Cluster_Name=* lnn=* stats.key = "node.disk.lnum.*" | stats latest(stats.value) as disk_lnum by lnn, Cluster_Name, DiskIndex] | append [ search `isilon_index` sourcetype=emc:isilon:rest namespace=statistics Cluster_Name = * lnn= * stats.key = "node.disk.health.*" | stats latest(stats.value) as disk_health by lnn, Cluster_Name, DiskIndex] | stats first(disk_bay) as disk_bay, first(disk_lnum) as disk_lnum, first(disk_type) as disk_type, first(disk_health) as disk_health by Cluster_Name, lnn, DiskIndex | rename DiskIndex as "Disk Index" disk_bay as "Bay" disk_lnum as "Logical Number" disk_health as "Health" lnn AS Node_ID disk_type as "Type" | sort "Disk Index" | outputlookup NodeDiskLookup

[EMC-Isilon-NodeMapping-lookup]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0-59/5 * * * *
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
run_on_startup = true
search = `isilon_index` sourcetype="emc:isilon:rest" namespace=cluster | dedup Cluster_Name,devices{}.devid | spath output=devId path=devices{}.devid   | spath output=lnn path=devices{}.lnn  | table Cluster_Name devId lnn | eval x=mvzip(devId,lnn)  | table Cluster_Name devId lnn x  | mvexpand x  | eval x = split(x,",")  | eval devId=mvindex(x,0)  | eval lnn=mvindex(x,1) | table Cluster_Name lnn devId | OUTPUTLookup NodeMappingLookup

[EMC-Isilon-Users-Sid-lookup]
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
alert.digest_mode = True
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 * * * *
dispatch.earliest_time = -2h
dispatch.latest_time = now
enableSched = 1
run_on_startup = true
search = `isilon_index` sourcetype="emc:isilon:rest" namespace=auth |dedup node sid | table Users sid Cluster_Name | outputlookup UsersSidLookup


[EMC-Isilon-Cluster-Summary]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -2h
dispatch.latest_time = now
run_on_startup = true
search = `isilon_index` sourcetype=emc:isilon:rest namespace=statistics Cluster_Name=* (stats.key="cluster.node.list.all" OR stats.key = "cluster.node.count.down" OR stats.key="cluster.node.list.diskless" OR stats.key="cluster.node.list.readonly") | stats latest(node_count) as "# of Nodes" latest(node_down_count) as "# of Nodes Down" latest(node_diskless_count) as "# of Accelerators" latest(node_readonly_count) as "# of Read-Only Nodes" by Cluster_Name | append [ search `isilon_index` sourcetype=emc:isilon:rest namespace=statistics Cluster_Name=* stats.key = "node.disk.type.*" | dedup stats.key, lnn, Cluster_Name | search stats.value != "unknown" AND stats.value != "ssd" AND stats.value != "null" | stats count as "# of Disks" by Cluster_Name ] | append [ search `isilon_index` sourcetype=emc:isilon:rest namespace=statistics Cluster_Name=* stats.key = "node.disk.type.*" | dedup stats.key, lnn,Cluster_Name | search stats.value = "ssd" | stats count as "# of SSDs" by Cluster_Name] | append [ search `isilon_index` sourcetype = emc:isilon:rest namespace = statistics Cluster_Name = * stats.key = "node.cpu.count" | stats latest(stats.value) as cpu_count by stats.devid,Cluster_Name | stats sum(cpu_count) as "# of CPUs" by Cluster_Name] | append [ search `isilon_index` sourcetype="emc:isilon:rest" namespace="storagepool" Cluster_Name =* settings.global_namespace_acceleration_enabled = "*" | stats latest(settings.global_namespace_acceleration_enabled) as gna by Cluster_Name | eval "Global Namespace Acceleration" = case(gna="true", "Enabled", gna="false", "Disabled")] | stats first("# of Nodes") as "# of Nodes", first("# of Nodes Down") as "# of Nodes Down", first("# of Accelerators") as "# of Accelerators", first("# of Read-Only Nodes") as "# of Read-Only Nodes", first("# of Disks") as "# of Disks", first("# of SSDs") as "# of SSDs", first("# of CPUs") as "# of CPUs", first("Global Namespace Acceleration") as "Global Namespace Acceleration" by Cluster_Name | fillnull value=0 "# of Nodes" "# of SSDs" "# of Nodes Down" "# of Accelerators" "# of Read-Only Nodes" "# of Disks" "# of CPUs" "Global Namespace Acceleration" | table Cluster_Name "# of Nodes" "# of Nodes Down" "# of Accelerators" "# of Read-Only Nodes" "# of Disks" "# of SSDs" "# of CPUs" "Global Namespace Acceleration"
