#!/usr/bin/env python

# Splunk for XenServer
# Gets all the VIFs (Virtual Interfaces) in the pool

import time
import XenAPI
import xsUtils

try:
    vifs = xsUtils.xsSession.xenapi.VIF.get_all()
    pool = xsUtils.xsSession.xenapi.pool.get_all()[0]
    poolUuid = xsUtils.xsSession.xenapi.pool.get_uuid(pool)

    for vif in vifs:
        vifRecord = xsUtils.xsSession.xenapi.VIF.get_record(vif)
                
        out = '%s - allowed_operations="%s" current_operations="%s" currently_attached="%s" device="%s" mac="%s" mac_autogenerated="%s" mtu="%s" other_config="%s" qos_algorithm_params="%s" qos_algorithm_type="%s" \
qos_supported_algorithms="%s" runtime_properties="%s" status_code="%s" status_detail="%s" vif_uuid="%s" pool_uuid="%s"' % \
            (
                time.strftime("%Y-%m-%d %H:%M:%S"),
                vifRecord["allowed_operations"],
                vifRecord["current_operations"],
                vifRecord["currently_attached"],
                vifRecord["device"],
                vifRecord["MAC"],
                vifRecord["MAC_autogenerated"],
                vifRecord["MTU"],
                vifRecord["other_config"],
                vifRecord["qos_algorithm_params"],
                vifRecord["qos_algorithm_type"],
                vifRecord["qos_supported_algorithms"],
                vifRecord["runtime_properties"],
                vifRecord["status_code"],
                vifRecord["status_detail"],
                vifRecord["uuid"],
                poolUuid
            )

        if(vifRecord["metrics"] != "OpaqueRef:NULL"):
            out += ' vif_metrics_uuid="%s"' % ( xsUtils.xsSession.xenapi.VIF_metrics.get_uuid(vifRecord["metrics"]) )

        if(vifRecord["network"] != "OpaqueRef:NULL"):
            out += ' network_uuid="%s"' % ( xsUtils.xsSession.xenapi.network.get_uuid(vifRecord["network"]) )

        if(vifRecord["VM"] != "OpaqueRef:NULL"):
            out += ' vm_uuid="%s"' % ( xsUtils.xsSession.xenapi.VM.get_uuid(vifRecord["VM"]) )

        print out

except Exception, ex:
    import sys, traceback
    exc_type, exc_value, exc_traceback = sys.exc_info()
    xsUtils.xsLog.error(traceback.format_exception(exc_type, exc_value, exc_traceback))
