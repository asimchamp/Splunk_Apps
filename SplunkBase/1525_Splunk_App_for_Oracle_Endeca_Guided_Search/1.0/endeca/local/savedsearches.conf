[Average Navigation and Search Throughput Last 15 Minutes]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -15m
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="dgraph_request" query_type_code="graph" | stats count as Throughput | eval Throughput = Throughput/15/60
vsid = hg435363

[Average Dimension Search Throughput Last 15 Minutes]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -15m
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="dgraph_request" query_type_code="search" | stats count as Throughput | eval Throughput = Throughput/15/60
vsid = hg439hqy

[Average Record Detail Throughput Last 15 Minutes]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -15m
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="dgraph_request" query_type_code="bin" | stats count as Throughput | eval Throughput = Throughput/15/60
vsid = hg43d5rb

[Average Baseline Update Duration]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="baseline_update" | transaction startswith="Checking definition from AppConfig.xml" endswith="Baseline update script finished" | timechart span=1h avg(duration)
vsid = hg5ia4k2

[Average Baseline Step Duration]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="baseline_update" | streamstats range(_time) as event_duration window=2 | search NOT baseline_update_msg=*baseline* | timechart span=1h avg(event_duration) by baseline_update_msg
vsid = hg5j6df0

[Average Dgidx Processing Time]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype=dgidx "dgidx completed" | rex field=_raw "\s(?<elapsed_time>[^\s]+)\sseconds elapsed" | where isnotnull(elapsed_time) | timechart avg(elapsed_time)
vsid = hg5jo5o6

[Total Visits Today]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = @d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | stats dc(SESSION_ID) as totalSessions
vsid = hg5jzrxo

[Average Pages Per Visit Today]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = @d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | stats count as pagesInVisit by SESSION_ID | stats avg(pagesInVisit) as avgPagesPerVisit | eval avgPagesPerVisit = round(avgPagesPerVisit,2)
vsid = hg5k2130

[Average Searches Per Visit Today]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = @d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | eval SEARCH_TERMS = lower(SEARCH_TERMS) | stats dc(SEARCH_TERMS) as totalSearches by SESSION_ID | stats avg(totalSearches) as avgSearchesPerVisit | eval avgSearchesPerVisit = round(avgSearchesPerVisit,2)
vsid = hg5k4e0f

[Top Search Terms Past 30 Days]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | eval SEARCH_TERMS = lower(SEARCH_TERMS) | stats max(NUM_RECORDS) as numRecords, min(_time) AS _time BY SESSION_ID,SEARCH_TERMS | stats sparkline count, avg(numRecords) as "AvgRecordsReturned" by SEARCH_TERMS | eval Avg Records Returned = round(AvgRecordsReturned,0) | sort - count | table SEARCH_TERMS sparkline count "Avg Records Returned"
vsid = hg5k6hsc

[Search Volume Past 30 Days]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | eval SEARCH_TERMS = lower(SEARCH_TERMS) | stats min(_time) AS _time BY SESSION_ID,SEARCH_TERMS | timechart count(SEARCH_TERMS) as "Total Searches"
vsid = hg5k8xll

[Visit Type Overview Past 30 Days]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | transaction fields=SESSION_ID | eval visitType = if(isnotnull(SEARCH_TERMS),"Visit With Search","Visit Without Search") | eventstats count as totalCount | stats sparkline, count(SESSION_ID) as visitCount, values(totalCount) as totalCount by visitType | eval visitPct = round(visitCount/totalCount*100,1) | fieldformat visitPct = visitPct + "%" | fields- totalCount
vsid = hg5kato3

[Visit Type Contribution Past 30 Days]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | transaction fields=SESSION_ID | eval visitType = if(isnotnull(SEARCH_TERMS),"Visit With Search","Visit Without Search") | stats count by visitType
vsid = hg5kchel

[Requests by Type Over Time]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | where isnotnull(TYPE) | timechart count by TYPE_DESCRIPTION
vsid = hg5rrd14

[Requests by Type Past 30 Days]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | where isnotnull(TYPE) | stats count sparkline by TYPE_DESCRIPTION | sort -count
vsid = hg5rlq7l

[Click Rate by Search Term]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `searchTermRequestCount(*)` | join type=left SEARCH_TERMS [search index=endeca sourcetype="logserver_output" | eval SEARCH_TERMS=if(isnull(SEARCH_TERMS), "", SEARCH_TERMS) | eval DIMENSION_VALUE=if(isnull(DIMENSION_VALUE), "", DIMENSION_VALUE) | search SEARCH_TERMS="*" DIMENSION_VALUE="*" | reverse | streamstats current=f last(TYPE) as previousPageType last(SEARCH_TERMS) as previousSearchTerms by SESSION_ID | search TYPE=R | where isnotnull(previousSearchTerms) | eval SEARCH_TERMS = previousSearchTerms | stats count as totalClickthroughs by SEARCH_TERMS]  | stats sum(totalClickthroughs) as totalClickthroughs, values(searchTermRequestCount) as totalSearchRequests, values(avgRecordsReturned) as "Average Records Returned" by SEARCH_TERMS  | eval totalClickthroughs = if(isnull(totalClickthroughs), 0, totalClickthroughs)  | eval clickthroughRate = round(totalClickthroughs / totalSearchRequests * 100,2)  | sort -totalClickthroughs,-totalSearchRequests  | rename SEARCH_TERMS as "Search Term", totalClickthroughs as "Clickthroughs", totalSearchRequests as "Search Requests", clickthroughRate as ClickthroughRate  | fieldformat ClickthroughRate = tostring(ClickthroughRate) + "%"
vsid = hg6qnbwt

[Click Rate by Dimension Value]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `dimensionValueRequestCount(*)` | join type=left DIMENSION_VALUE [search index=endeca sourcetype="logserver_output" | eval DIMENSION_VALUE=if(isnull(DIMENSION_VALUE), "", DIMENSION_VALUE) | eval SEARCH_TERMS=if(isnull(SEARCH_TERMS), "", SEARCH_TERMS)  | search SEARCH_TERMS="*" DIMENSION_VALUE="*" | reverse | streamstats current=f last(TYPE) as previousPageType last(DIMENSION_VALUE) as previousDimensionValues by SESSION_ID | search TYPE=R | where isnotnull(previousDimensionValues) | eval DIMENSION_VALUE = previousDimensionValues | stats count as totalClickthroughs by DIMENSION_VALUE]  | stats sum(totalClickthroughs) as totalClickthroughs, values(dimensionValueRequestCount) as totalDimensionValueRequests, values(avgRecordsReturned) as "Average Records Returned" by DIMENSION_VALUE  | eval totalClickthroughs = if(isnull(totalClickthroughs), 0, totalClickthroughs)  | eval clickthroughRate = round(totalClickthroughs / totalDimensionValueRequests * 100,2)  | sort -totalClickthroughs,-totalDimensionValueRequests  | rename DIMENSION_VALUE as "Dimension Value", totalClickthroughs as "Clickthroughs", totalDimensionValueRequests as "Dim Val Requests", clickthroughRate as ClickthroughRate  | fieldformat ClickthroughRate = tostring(ClickthroughRate) + "%"
vsid = hg6ybdm6

[Overall Clickthrough Rate Over Time]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" | eval SEARCH_TERMS=if(isnull(SEARCH_TERMS), "", SEARCH_TERMS) | eval DIMENSION_VALUE=if(isnull(DIMENSION_VALUE), "", DIMENSION_VALUE) | reverse | streamstats current=f last(TYPE) as previousPageType, last(SEARCH_TERMS) as previousSearchTerms, last(DIMENSION_VALUE) as previousDimensionValues by SESSION_ID  | eval previousDimensionValues=if(isnull(previousDimensionValues), "", previousDimensionValues) | eval DIMENSION_VALUE=if(iSnull(DIMENSION_VALUE), "", DIMENSION_VALUE) | eval previousSearchTerms=if(isnull(previousSearchTerms), "", previousSearchTerms) | eval SEARCH_TERMS=if(iSnull(SEARCH_TERMS), "", SEARCH_TERMS)| search ((TYPE=R previousSearchTerms="*" previousDimensionValues="*") OR (SEARCH_TERMS="*" DIMENSION_VALUE="*")) | eval clickthroughCounter=if(TYPE=="R", 1, 0)  | eval requestCounter=if(NOT TYPE=="R", 1, 0)  | timechart eval(sum(clickthroughCounter)/sum(requestCounter)) as "Clickthrough Rate"
vsid = hg6uhnv9

[Click Rate by Page Type Over Time]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" NOT TYPE=UNKNOWN | reverse | streamstats current=f last(TYPE) as previousPageType, last(TYPE_DESCRIPTION) as previousPageTypeDescription by SESSION_ID | eval clickthroughCounter=if(TYPE=="R", 1, 0) | eval requestCounter=if(NOT TYPE=="R", 1, 0) | timechart eval(sum(clickthroughCounter)/sum(requestCounter)) by previousPageTypeDescription usenull=f
vsid = hg6ubqol

[Click Rate by Page Type]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
cron_schedule = 0 0 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
displayview = flashtimeline
enableSched = 1
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="logserver_output" NOT TYPE=UNKNOWN | stats count as totalRequests, values(TYPE_DESCRIPTION) as TYPE_DESCRIPTION by TYPE | join type=left TYPE [search index=endeca sourcetype="logserver_output" | reverse | streamstats current=f last(TYPE) as previousPageType, last(TYPE_DESCRIPTION) as previousPageTypeDescription by SESSION_ID | search TYPE=R | stats count as totalClickthroughs by previousPageType | rename previousPageType as TYPE] | eval totalClickthroughs = if(isnull(totalClickthroughs), 0, totalClickthroughs) | eval clickthroughRate = round(totalClickthroughs / totalRequests * 100,2) | sort -totalClickthroughs | rename TYPE_DESCRIPTION as "Page Type Description", totalClickthroughs as "Clickthroughs", totalRequests as "Requests", clickthroughRate as ClickthroughRate | fields "Page Type Description", "ClickthroughRate"
vsid = hg6rhmq5

[Average Total Request Time by Host]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="dgraph_request" | timechart avg(Total_Request_Time) by host
vsid = hg4btci3

[Total Requests Over Time by Type]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="dgraph_request" | eval "QueryType" = query_type_description | timechart count by QueryType usenull=f
vsid = hg43v3do

[Average Total Processing Time by Host]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
search = index=endeca sourcetype="Dgraph_Request" | timechart avg(Total_Processing_Time) by host
vsid = *:bmlryowz

[Total Requests Over Time by Host]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
search = index=endeca sourcetype="dgraph_request" | timechart count by host
vsid = *:hnc8bf8l

[Average Total Request Time by MDEX]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
search = index=endeca sourcetype="dgraph_request" | eval MDEX = host + ":" + MDEX_NAME | timechart avg(Total_Request_Time) by MDEX_NAME
vsid = *:5sem94hq

[Average Total Processing Time by MDEX]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="Dgraph_Request" | eval MDEX = host + ":" + MDEX_NAME | timechart avg(Total_Processing_Time) by MDEX_NAME
vsid = hg44d7gm

[Total Queries by Type]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="dgraph_request" | eval "Query Type"=query_type_description | stats count by "Query Type"
vsid = hg44jn4m

[Total Query Processing Time by Type]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="dgraph_request" | eval "Query Type"=query_type_description | stats sum(Total_Processing_Time) by "Query Type"
vsid = hg44ls62

[Baseline Update Raw Events]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -1d@h
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="baseline_update" | head 1000
vsid = hg5j8rz1

[Latest Forge Completion Percentage]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="forge" | where isnotnull(Forge_Pct_Complete) | head 1 | table Forge_Pct_Complete | rename Forge_Pct_Complete as "Completion Percentage"
vsid = hg3wqddn

[Averge Forge Duration]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -7d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="Forge" | transaction startswith="Creating pipeline" endswith="Forge completed" | timechart avg(duration) as "Average Duration"
vsid = hg3xcsps

[Raw Forge Logs]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype="Forge"
vsid = hg3xrk1m

[Raw Dgidx Logs]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -1d
dispatch.latest_time = now
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=endeca sourcetype=dgidx | head 1000
vsid = hg5jvbvx
