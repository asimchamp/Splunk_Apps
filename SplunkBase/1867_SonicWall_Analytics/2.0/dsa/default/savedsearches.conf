[HTTP Traffic]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = finds traffic by name and port
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","app_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 app_name="General HTTP" OR app_name="HTTP" OR app_name="General HTTPS" | chart count, values(app_name) by dest_port

[Linux software updates]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = all the .rpm and .deb downloads
dispatch.earliest_time = 0
display.events.fields = ["host","source","sourcetype","app_name","eventtype","tag"]
display.general.type = visualizations
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=359 OR tid=262 .deb OR .rpm | timechart count by session_id

[Windows OS Guess]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 * * * *
description = report looks for windows contacting microsoft for software patches
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tag=updates | eval os="windows" | inputlookup sonicwall_os_guess append=t | dedup src_ip | fields src_ip, start_time, os | fields - _* | outputlookup sonicwall_os_guess.csv


[Total data by Template - Dynamic]
alert.digest_mode = True
alert.suppress = 0
auto_summarize.dispatch.earliest_time = -1d@h
enableSched = 0

[Total data by Template - Static]
alert.digest_mode = True
alert.suppress = 0
auto_summarize.dispatch.earliest_time = -1d@h
enableSched = 0

[firewall hostname]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 */12 * * *
description = generates the sonicwall_firewalls.csv
dispatch.earliest_time = -10m@m
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
display.visualizations.type = mapping
enableSched = 1
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall | dedup host | inputlookup sonicwall_firewalls.csv append=t | eval firewall_hostname=coalesce(firewall_hostname, host) | dedup host | fields host, firewall_hostname  | fields - _* | outputlookup  sonicwall_firewalls.csv

[YouTube by user and time]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user"]
display.general.type = visualizations
display.visualizations.charting.chart = line
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 app_name="YouTube" | timechart count by user

[Youtube total time by src_ip]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Total time by source IP of YouTube
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user"]
display.general.type = visualizations
display.visualizations.charting.chart = pie
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 app_name="YouTube" | transaction src_ip dest_ip | chart sum(duration) as "total time" by src_ip

[total threats]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = total threats - summary dashboard
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = index=sonicwall TemplateID=257 virus_id!=0 | timechart span=24h count | reverse

[total mb]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = total Mb - summary dashboard
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = index=sonicwall tid=257 | eval raw_total_mb=round((resp_to_init_octets + init_to_resp_octets)/1024/1024) | timechart sum(raw_total_mb) as total_mb

[unique applications]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = unique applications - summary dashboard
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = index=sonicwall TemplateID=257 | timechart dc(app_id) as app

[total user]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = total users - summary dashboard
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = index=sonicwall tid=257 user!=0 | timechart dc(user) as user

[total mb graph]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = total mb graph - summary dashboard
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = index=sonicwall tid=257 | eval raw_total_mb = round((init_to_resp_octets + resp_to_init_octets) /1024/1024) | timechart bins=167 sum(raw_total_mb) as total_mb

[top destination]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = top destinations - summary dashboard
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=257 | chart sparkline count(_raw) by dest_ip | sort -count(_raw) | rename count(_raw) as "Total" | rename dest_ip as "Destination"

[user_index to username]
action.email.reportServerEnabled = 0
alert.track = 0
description = this search finds all the events in tid=257 and correlates them with tid=260 then compares user_index to user_id (username)
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=257 OR tid=260 | stats count, last(user_id) by user | rename last(user_id) as friendly_name | search friendly_name!=''

[users lookup]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 * * * *
description = this makes the user to user_id mapping lookup file called sonicwall_users.csv
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id"]
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=260 | inputlookup sonicwall_users append=t | dedup user | search user_id!=''  | fields user, user_id | fields - _* | outputlookup sonicwall_users.csv

[google searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 tid=262 google "q=" | urldecode | chart count by google_search | sort -count

[bing searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 bing | urldecode | search url_process_function=bing | chart count by url_search_string | sort -count

[Total data by Template - Dynamic]
action.email.reportServerEnabled = 0
alert.track = 0
cron_schedule = 0 0 * * *
description = Evaluates all the data by template_name for Dynamic Templates
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = index=sonicwall firewall_hostname="*" template_type="dynamic" | eval msg_length=len(_raw) | stats sum(msg_length) by template_name

[Total data by Template - Static]
action.email.reportServerEnabled = 0
alert.track = 0
cron_schedule = 0 0 * * *
description = Evaluates all the data by template_name for Static Templates
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name"]
display.general.type = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = index=sonicwall firewall_hostname="*" template_type="static" | eval msg_length=len(_raw) | stats sum(msg_length) as "Total Bytes" by template_name | rename template_name as "Template Name"

[amazon searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 amazon | urldecode | chart count by url_search_string | sort -count

[ask searches]
action.email.reportServerEnabled = 0
alert.track = 0
description = searches for the site ask.com
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 ask "q=" | urldecode | search url_process_function=ask | chart count by url_search_string | sort -count

[craigslist reagions]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 craigslist | urldecode  | search NOT cl_region="www" | chart count by cl_sub_region

[craigslist sales area]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 craigslist | urldecode | search NOT url_type="image" | search cl_uri_root="search" | top limit=10 cl_sales_area

[craigslist searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 craigslist | urldecode | search NOT url_type="image" | search cl_uri_root="search" |  chart count, values(cl_sub_region) by url_search_string | sort -count

[ebay searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 ebay | urldecode | search url_process_function="ebay" | chart count by url_search_string | sort -count

[facebook searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 facebook | urldecode | search url_process_function="facebook" | chart count by url_search_string | sort -count

[generic searches]
action.email.reportServerEnabled = 0
alert.track = 0
description = URLS decoded to find search strings. general method
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 NOT google NOT twitter NOT apple NOT stack NOT youtube NOT amazon NOT bing NOT wikipedia NOT ebay | urldecode | search url_process_function=generic | chart count, values(url_base_domain) by url_search_string | sort -count

[linkedin searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 linkedin | urldecode | search url_process_function=linkedin | chart count by url_search_string | sort -count

[newegg searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 newegg | urldecode | search url_process_function=newegg | chart count by url_search_string | sort -count

[reddit searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 reddit | urldecode | search url_process_function=reddit | chart count by url_search_string | sort -count

[search engines]
action.email.reportServerEnabled = 0
alert.track = 0
description = top search engines used
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 | urldecode | search url_search_string="*" | top url_process_function

[top generic domains]
action.email.reportServerEnabled = 0
alert.track = 0
description = list of domains we can find search terms in their URLs using the generic method
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 NOT google NOT twitter NOT apple NOT stack NOT youtube NOT amazon NOT bing NOT wikipedia NOT ebay | urldecode | search url_process_function=generic | top url_base_domain

[twitter searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 "q=" search twitter | urldecode | chart count by twitter_search | sort -count

[wikipedia searches]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","support_url","signature","template_name","firewall_hostname","template_type","TemplateID","user","app_name","virus_id","app_cat_name","user_id","sourcetype","url","url_domain","rating_name"]
display.events.type = raw
display.general.type = statistics
display.page.search.mode = fast
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = splunk_dell_firewalls
request.ui_dispatch_view = search
search = tid=262 wikipedia | urldecode | search url_process_function="wikipedia" | chart count by url_search_string | sort -count


[total_mb]
action.summary_index = 0
disabled = 1

[http session id lookup]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 * * * *
description = This search generates a lookup table of http sessions by session id
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 app_name="General HTTPS" OR app_name="General HTTP" OR app_name="HTTP" |  inputlookup sonicwall_http_session_id.csv append=t | dedup session_id |  fields session_id, src_ip, dest_ip, app_name | fields - _* | outputlookup sonicwall_http_session_id.csv

[firewall hostname]
description = generates the sonicwall_firewalls.csv
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type"]
search = index=sonicwall | dedup host | inputlookup sonicwall_firewalls.csv append=t | eval firewall_hostname=coalesce(firewall_hostname, host) | dedup host | fields host, firewall_hostname  | fields - _* | outputlookup  sonicwall_firewalls.csv
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user"]
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user"]

[HTTP Traffic]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = finds traffic by name and port
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","app_name"]
display.general.type = statistics
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 app_name="General HTTP" OR app_name="HTTP" OR app_name="General HTTPS" | chart count, values(app_name) by dest_port


[application_id_to_name]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 1 * * *
description = creates the lookup table sonicwall_app_id which is used to convert the ID to the name
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg","tid","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_id","app_description"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = area
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=261 | inputlookup sonicwall_app_id append=t |dedup sig_id | rename app_ID as app_uuid | fields sig_id, app_uuid, app_name,cat_id,app_cat_name,bwm_attr,risk_attr,tech_attr,content_type | fields - _* | outputlookup sonicwall_app_id.csv

[Unique Domains]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = count of the unique domain names seen
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg","tid","flow_to_virus_id","virus_name","ips_cat_name","ips_name"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall TemplateID=262 OR tid=359 firewall_hostname="9800 R9 U32"| regex url_domain!="\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?!\d)" | rex field=url_domain "\.(?<base_domain>\S+\.\S+)$" | dedup base_domain | chart count

[Converter Effeciency]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Total data converted over time
dispatch.earliest_time = 0
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg","tid","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name"]
display.events.type = raw
display.general.type = visualizations
display.visualizations.charting.chart = area
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=555 | timechart avg(total_data_size_kb)

[hits by url rating]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Actual total hits by url ratings
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg","tid","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=278 "url-rating_val2=*" | foreach url_rating_val* [ eval url_rating = mvappend(url_rating, <<FIELD>>) ] | stats count by url_rating | lookup sonicwall_ratings rating_index AS url_rating

[gav_lookup_table_generation]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 15 * * * *
description = This search updates the sonicwal_gav.csv file used as a lookup table
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg","tid","flow_to_virus_id","virus_name","ips_cat_name","ips_name"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=265 | inputlookup sonicwall_gav append=t | dedup signature_id | fields signature_id, signature | rename signature as "virus_name"  | fields - _* | outputlookup sonicwall_gav.csv

[syn_flood_bad_mac]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Demonstration of a bad MAC recorded in Syslog generated by NMAP port scanning
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg"]
display.events.type = raw
display.visualizations.charting.chart = bar
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index="sonicwall_syslog"  msg="*xx:xx*"

[top syslog messages]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index="sonicwall_syslog" | chart count(msg) by msg

[top applications by flow count]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = List of application, flow count and description
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
display.events.fields = ["app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","block_reason","msg","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_description","the_id","app_desc","if_stat_security_type","zone_type"]
display.events.type = raw
display.page.search.mode = fast
display.visualizations.charting.chart = pie
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall  tid=257 OR tid=357 OR tid=462 app_name!="ICMP" | lookup sonicwall_app_description app_id as app_uuid OUTPUTNEW app_description as app_description | chart count, values(app_description) by app_name | sort - count | rename values(app_description) as "Description" | rename app_name as "Application" | rename count as "Total Flows"

[url rating pie]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Actual total hits by url ratings
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg","tid","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name"]
display.events.type = raw
display.general.type = visualizations
display.visualizations.charting.chart = pie
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=278 OR tid=465 "url-rating_val2=*" | foreach url_rating_val* [ eval url_rating = mvappend(url_rating, <<FIELD>>) ] | stats count by url_rating | lookup sonicwall_ratings rating_index AS url_rating | rename rating_name as "Rating" | fields Rating, count

[url ratings lookup generation]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 * * *
description = This scheduled lookup generates the sonicwall_ratings.csv used for URL Ratings
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["source","app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","host","block_reason","linecount","msg","tid","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall TemplateID=263 | dedup rating_index | fields rating_index, rating_name | fields - _* | outputlookup sonicwall_ratings.csv

[inbound outbound octets]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","block_reason","msg","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_description","the_id","app_desc","if_stat_security_type","zone_type","dest_ip","tag::eventtype"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 OR tid=357 OR tid=458 | stats sum(init_to_resp_octets) as outbound_traffic , sum(resp_to_init_octets) as inbound_traffic | addtotals fieldname=total_octets

[Total data timechart]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = used to power summary dashboard
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","block_reason","msg","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_description","the_id","app_desc","if_stat_security_type","zone_type","dest_ip","tag::eventtype"]
display.events.type = raw
display.general.type = visualizations
display.visualizations.charting.axisTitleX.visibility = collapsed
display.visualizations.charting.axisTitleY.visibility = collapsed
display.visualizations.charting.chart = area
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 OR tid=357 OR tid=458 | timechart span=1h sum(init_to_resp_octets) as "outbound", sum(resp_to_init_octets) as "inbound" | addtotals

[Unique Application Count]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = powers summary dashboard
dispatch.earliest_time = -60m@m
dispatch.latest_time = now
display.events.fields = ["app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","block_reason","msg","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_description","the_id","app_desc","if_stat_security_type","zone_type","dest_ip","tag::eventtype"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = area
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall TemplateID=257 OR tid=357 OR tid=458 | chart dc(app_id)

[Total traffic by Application]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
description = powers summary dashboard
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
display.events.fields = ["app_name","eventtype","tag","app_cat_name","firewall_hostname","user","os","template_name","src_ip","template_type","block_reason","msg","flow_to_virus_id","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_description","the_id","app_desc","if_stat_security_type","zone_type","dest_ip","tag::eventtype"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = area
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall TemplateID=257 OR tid=357 firewall_hostname="*" app_name!="ICMP" | eval friendly_name=coalesce(user_id, src_ip) | eval total_octets=(init_to_resp_octets + resp_to_init_octets) | chart sum(init_to_resp_octets) as "Outbound Octets", sum(resp_to_init_octets) as "Inbound Octets" , sum(total_octets), first(friendly_name) as "Source" by app_name | sort -total_octets | rename sum(total_octets) as "Total octets" | rename app_name to "Application"

[v2 applications today]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["app_name","eventtype","tag","firewall_hostname","user","os","template_name","template_type","block_reason","msg","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_description","the_id","app_desc","if_stat_security_type","zone_type","tag::eventtype","dest_port","start_time"]
display.events.type = raw
display.visualizations.charting.chart = area
display.visualizations.show = 0
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid > 400

[active sessions]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 15 * * * *
description = sessions in the last 4 hours
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
display.events.fields = ["app_name","eventtype","tag","firewall_hostname","user","os","template_name","template_type","block_reason","msg","virus_name","ips_cat_name","ips_name","url_rating_val1","url_rating_val2","url_rating_val3","url_domain","url_rating_name_2","url_rating_name_1","url_rating_name_3","rating_name","app_description","the_id","app_desc","if_stat_security_type","zone_type","tag::eventtype","dest_port","start_time","tid","tid","tid"]
display.events.type = raw
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = dsa
request.ui_dispatch_view = search
search = index=sonicwall tid=257 | fields session_id, src_ip, dest_ip, src_port, dest_port, app_id | fields - _* | outputlookup sonicwall_sessions.csv
