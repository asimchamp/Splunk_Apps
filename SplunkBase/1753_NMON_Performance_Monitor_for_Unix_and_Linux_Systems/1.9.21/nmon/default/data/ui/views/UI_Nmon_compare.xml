<form script="UI_Nmon_compare.js,single_trend.js,table_icons_rangemap.js" stylesheet="ui_simple.css,single_trend_transposed.css,table_decorations.css" isVisible="true">
    <label>UI Comparison - Advanced interface for comparative analysis</label>
    <description>The comparative analysis provides advanced insights for your server metrics between different time ranges</description>

    <!--
    Dynamic configuration
    The following searches are being used to define various tokens using event handlers
    -->

    <search id="populate_metric">
        <query>| inputlookup nmon_metric_catalog</query>
    </search>

    <!-- definition of metric related tokens -->

    <search id="basesearch_metric_definition" base="populate_metric">
        <query>search metric_name=$metric_name$</query>
        <progress>
            <condition>
                <set token="metric_dm">$result.metric_dm$</set>
                <set token="metric_dm_node">$result.metric_dm_node$</set>
                <set token="metric_dm_prefix">$result.metric_dm_prefix$</set>
                <set token="metric_has_device">$result.metric_has_device$</set>
                <set token="metric_device_field">$result.metric_device_field$</set>
                <set token="metric_dimension_filter">$result.metric_dimension_filter$</set>
                <set token="metric_value_field">$result.metric_value_field$</set>
                <set token="metric_unit">$result.metric_unit$</set>
                <set token="metric_label">$result.metric_label$</set>
            </condition>
        </progress>
    </search>

    <!-- analyse if the metric has a device dimension -->

    <search id="basesearch_metric_device" base="populate_metric">
        <query>search metric_name=$metric_name$</query>
        <progress>
            <condition match="'result.metric_has_device'==&quot;TRUE&quot;">
                <set token="show_device">TRUE</set>
            </condition>
            <condition match="'result.metric_has_device'==&quot;FALSE&quot;">
                <unset token="show_device"></unset>
            </condition>
        </progress>
    </search>

    <!-- analyse if the metric has a volume unit choice option -->

    <search id="basesearch_metric_volume_unit" base="populate_metric">
        <query>search metric_name=$metric_name$</query>
        <progress>
            <condition match="'result.metric_volume_unit_choice'==&quot;TRUE&quot;">
                <set token="show_unit">TRUE</set>
            </condition>
            <condition match="'result.metric_volume_unit_choice'==&quot;FALSE&quot;">
                <unset token="show_unit"></unset>
            </condition>
        </progress>
    </search>

    <!-- analyse if the metric has a rate unit choice option -->

    <search id="basesearch_metric_rate_unit" base="populate_metric">
        <query>search metric_name=$metric_name$</query>
        <progress>
            <condition match="'result.metric_rate_unit_choice'==&quot;TRUE&quot;">
                <set token="show_unit_rate">TRUE</set>
            </condition>
            <condition match="'result.metric_rate_unit_choice'==&quot;FALSE&quot;">
                <unset token="show_unit_rate"></unset>
            </condition>
        </progress>
    </search>

    <row>

        <panel>
            <title>A - Select time period</title>

            <input type="time" token="TimeRange1" searchWhenChanged="true">
                <label>Time Range:</label>
                <default>
                    <earliestTime>-24h</earliestTime>
                    <latestTime>now</latestTime>
                </default>
            </input>
            <input type="dropdown" token="TimeFilter" searchWhenChanged="true">
                <label>Time Filtering:</label>
                <choice value="No_Filter">No Filter (24/24, 7/7)</choice>
                <choice value="Day_BusinessDays_8h-19h">Day Business (08h-19h)</choice>
                <choice value="Day_WeekEnd_8h-19h">Day WE (08h-19h)</choice>
                <choice value="Day_AllDays_8h-19h">Day Week (08h-19h)</choice>
                <choice value="Night_BusinessDays_19h-8h">Night Business (19h-08h)</choice>
                <choice value="Night_WeekEnd_19h-8h">Night WE (19h-08h)</choice>
                <choice value="Night_AllDays_19h-8h">Night All Days (19h-08h)</choice>
                <default>No_Filter</default>
            </input>
            <input type="text" token="TimeRange1_name" searchWhenChanged="true">
                <label>Name for period:</label>
                <default>period_A</default>
            </input>
        </panel>

        <panel>
            <title>B - Select time period</title>

            <input type="time" token="TimeRange2" searchWhenChanged="true">
                <label>Time Range:</label>
                <default>
                    <earliestTime>-24h</earliestTime>
                    <latestTime>now</latestTime>
                </default>
            </input>
            <input type="dropdown" token="TimeFilter" searchWhenChanged="true">
                <label>Time Filtering:</label>
                <choice value="No_Filter">No Filter (24/24, 7/7)</choice>
                <choice value="Day_BusinessDays_8h-19h">Day Business (08h-19h)</choice>
                <choice value="Day_WeekEnd_8h-19h">Day WE (08h-19h)</choice>
                <choice value="Day_AllDays_8h-19h">Day Week (08h-19h)</choice>
                <choice value="Night_BusinessDays_19h-8h">Night Business (19h-08h)</choice>
                <choice value="Night_WeekEnd_19h-8h">Night WE (19h-08h)</choice>
                <choice value="Night_AllDays_19h-8h">Night All Days (19h-08h)</choice>
                <default>No_Filter</default>
            </input>
            <input type="text" token="TimeRange2_name" searchWhenChanged="true">
                <label>Name for period:</label>
                <default>period_B</default>
            </input>
        </panel>

    </row>

    <row>
        <panel>
            <title>Metric selection - which metric do you want to compare ?</title>

            <input token="metric_category" type="dropdown" searchWhenChanged="true">
                <label>METRIC CATEGORY:</label>
                <search base="populate_metric">
                    <query>stats count by metric_category | sort 0 metric_category</query>
                </search>
                <choice value="*">Any</choice>
                <default>*</default>
                <fieldForLabel>metric_category</fieldForLabel>
                <fieldForValue>metric_category</fieldForValue>
                <change>
                    <!-- unset metric -->
                    <unset token="metric_dimension_filter"></unset>
                    <!-- unset the sub linked form token -->
                    <unset token="form.metric_name"></unset>
                    <unset token="metric_name"></unset>
                    <!-- device is dependent from the metric and should be unset as well -->
                    <unset token="form.device"></unset>
                    <unset token="show_device"></unset>
                </change>
            </input>

            <!-- the metric_name dropdown size will be increased using css -->

            <input id="metric_name" token="metric_name" type="dropdown" searchWhenChanged="true">
                <label>PERFORMANCE METRIC:</label>
                <search base="populate_metric">
                    <query>search metric_category="$metric_category$" | table metric_name | sort 0 metric_name</query>
                </search>
                <fieldForLabel>metric_name</fieldForLabel>
                <fieldForValue>metric_name</fieldForValue>
            </input>

        </panel>
    </row>

    <row depends="$show_device$ $show_unit$">
        <panel>

            <input type="dropdown" token="storage_unit">
                <label>Unit:</label>
                <choice value="MB">MB</choice>
                <choice value="GB">GB</choice>
                <choice value="TB">TB</choice>
                <default>GB</default>
                <change>
                    <condition value="MB">
                        <set token="metric_math">value</set>
                        <set token="storage_metric_unit">MB</set>
                    </condition>
                    <condition value="GB">
                        <set token="metric_math">value/1024</set>
                        <set token="storage_metric_unit">GB</set>
                    </condition>
                    <condition value="TB">
                        <set token="metric_math">value/1024/1204</set>
                        <set token="storage_metric_unit">TB</set>
                    </condition>
                    <condition value="pct">
                        <set token="metric_math">value</set>
                        <set token="storage_metric_unit">pct</set>
                    </condition>
                </change>
            </input>

        </panel>
    </row>

    <row depends="$show_device$ $show_unit_rate$">
        <panel>

            <input type="dropdown" token="rate_unit">
                <label>Unit:</label>
                <choice value="KBps">KBps</choice>
                <choice value="MBps">MBps</choice>
                <choice value="GBps">GBps</choice>
                <default>KBps</default>
                <change>
                    <condition value="KBps">
                        <set token="metric_math">value</set>
                        <set token="rate_metric_unit">KBps</set>
                    </condition>
                    <condition value="MBps">
                        <set token="metric_math">value/1000</set>
                        <set token="rate_metric_unit">MBps</set>
                    </condition>
                    <condition value="GBps">
                        <set token="metric_math">value/1000/1000</set>
                        <set token="rate_metric_unit">GBps</set>
                    </condition>
                </change>
            </input>

        </panel>
    </row>

    <!-- Help the user -->

    <row rejects="$metric_name$">
        <panel>
            <html>
                <div class="red_help_user">
                    <p>- - - - - - - - - - ACTION REQUIRED: please select the performance metric to be compared in the metric selector above - - - - - - - - - -</p>
                </div>
            </html>
        </panel>
    </row>

    <row>
        <panel>
            <title>A - Select the first server:</title>

            <input type="dropdown" token="osfilter1" searchWhenChanged="true">
                <label>Filter OS Type:</label>
                <default></default>
                <choice value="">Any OS</choice>
                <choice value="AIX">AIX</choice>
                <choice value="Linux">Linux</choice>
                <choice value="Solaris">Solaris</choice>
                <prefix>OStype="</prefix>
                <suffix>"</suffix>
            </input>

            <input type="multiselect" token="frameID1" searchWhenChanged="true">
                <label>frameID Selection:</label>
                <search>
                    <query>| tstats count where $host-prefilter1$ $osfilter1$ $metric_dimension_filter$ `nmon_index` by host
| lookup nmon_frameID_mapping host as host OUTPUT frameID
| eval frameID=if(isnull(frameID), host, frameID)
| stats count by frameID | fields frameID | dedup frameID | sort frameID</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <default>*</default>
                <valuePrefix>frameID="</valuePrefix>
                <valueSuffix>"</valueSuffix>
                <delimiter> OR </delimiter>
                <fieldForLabel>frameID</fieldForLabel>
                <fieldForValue>frameID</fieldForValue>
                <choice value="*">Any</choice>
            </input>

            <input type="text" token="host-prefilter1" searchWhenChanged="true">
                <label>Optional: Filter hosts populating</label>
                <prefix>host="</prefix>
                <suffix>"</suffix>
                <default>*</default>
            </input>

            <input id="host1" type="dropdown" token="host1" searchWhenChanged="true">
                <label>hosts Selection:</label>
                <search>
                    <query>| tstats count where $host-prefilter1$ $osfilter1$ $metric_dimension_filter$ `nmon_index` by host
| lookup nmon_frameID_mapping host as host OUTPUT frameID
| eval frameID=if(isnull(frameID), host, frameID)
| search $frameID1$
| stats count by host | fields host | dedup host | sort host</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <fieldForLabel>host</fieldForLabel>
                <fieldForValue>host</fieldForValue>
            </input>

            <input id="device1" type="dropdown" token="device1" searchWhenChanged="true" depends="$show_device$">
                <label>Device Selection:</label>
                <!-- Populating Data Model Search -->
                <search>
                    <query>| tstats count AS Count from datamodel=$metric_dm$ where (nodename = $metric_dm_node$) ($host-prefilter1$) ($metric_dm_prefix$.$frameID1$) (host=$host1$) groupby "$metric_dm_prefix$.$metric_device_field$" prestats=true
| stats dedup_splitvals=t count AS Count by "$metric_dm_prefix$.$metric_device_field$"
| sort limit=0 "$metric_dm_prefix$.$metric_device_field$"
| fields - _span | fillnull Count | fields "$metric_dm_prefix$.$metric_device_field$"
| rename "$metric_dm_prefix$.$metric_device_field$" AS $metric_device_field$</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <choice value="*">Any</choice>
                <default>*</default>
                <fieldForLabel>$metric_device_field$</fieldForLabel>
                <fieldForValue>$metric_device_field$</fieldForValue>
            </input>

        </panel>

        <panel>
            <title>B - Select the second server to compare with:</title>

            <input type="dropdown" token="osfilter2" searchWhenChanged="true">
                <label>Filter OS Type:</label>
                <default></default>
                <choice value="">Any OS</choice>
                <choice value="AIX">AIX</choice>
                <choice value="Linux">Linux</choice>
                <choice value="Solaris">Solaris</choice>
                <prefix>OStype="</prefix>
                <suffix>"</suffix>
            </input>

            <input type="multiselect" token="frameID2" searchWhenChanged="true">
                <label>frameID Selection:</label>
                <search>
                    <query>| tstats count where $host-prefilter2$ $osfilter2$ $metric_dimension_filter$ `nmon_index` by host
| lookup nmon_frameID_mapping host as host OUTPUT frameID
| eval frameID=if(isnull(frameID), host, frameID)
| stats count by frameID | fields frameID | dedup frameID | sort frameID</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <default>*</default>
                <valuePrefix>frameID="</valuePrefix>
                <valueSuffix>"</valueSuffix>
                <delimiter> OR </delimiter>
                <fieldForLabel>frameID</fieldForLabel>
                <fieldForValue>frameID</fieldForValue>
                <choice value="*">Any</choice>
            </input>

            <input type="text" token="host-prefilter2" searchWhenChanged="true">
                <label>Optional: Filter hosts populating</label>
                <prefix>host="</prefix>
                <suffix>"</suffix>
                <default>*</default>
            </input>

            <input id="host2" type="dropdown" token="host2" searchWhenChanged="true">
                <label>hosts Selection:</label>
                <search>
                    <query>| tstats count where $host-prefilter2$ $osfilter2$ $metric_dimension_filter$ `nmon_index` by host
| lookup nmon_frameID_mapping host as host OUTPUT frameID
| eval frameID=if(isnull(frameID), host, frameID)
| search $frameID2$
| stats count by host | fields host | dedup host | sort host</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <fieldForLabel>host</fieldForLabel>
                <fieldForValue>host</fieldForValue>
            </input>

            <input id="device2" type="dropdown" token="device2" searchWhenChanged="true" depends="$show_device$">
                <label>Device Selection:</label>
                <!-- Populating Data Model Search -->
                <search>
                    <query>| tstats count AS Count from datamodel=$metric_dm$ where (nodename = $metric_dm_node$) ($host-prefilter2$) ($metric_dm_prefix$.$frameID2$) (host=$host2$) groupby "$metric_dm_prefix$.$metric_device_field$" prestats=true
| stats dedup_splitvals=t count AS Count by "$metric_dm_prefix$.$metric_device_field$"
| sort limit=0 "$metric_dm_prefix$.$metric_device_field$"
| fields - _span | fillnull Count | fields "$metric_dm_prefix$.$metric_device_field$"
| rename "$metric_dm_prefix$.$metric_device_field$" AS $metric_device_field$</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <fieldForLabel>$metric_device_field$</fieldForLabel>
                <fieldForValue>$metric_device_field$</fieldForValue>
                <choice value="*">Any</choice>
                <default>*</default>
            </input>

        </panel>

    </row>

    <!-- Help the user -->

    <row depends="$metric_name$">
        <panel rejects="$host1$">
            <html>
                <div class="red_help_user">
                    <p>- - - - - - - - - - ACTION REQUIRED: please select the server A in the host selector above - - - - - - - - - -</p>
                </div>
            </html>
        </panel>
        <panel rejects="$host2$">
            <html>
                <div class="red_help_user">
                    <p>- - - - - - - - - - ACTION REQUIRED: please select the server B in the host selector above - - - - - - - - - -</p>
                </div>
            </html>
        </panel>
    </row>

    <row depends="$metric_name$ $show_device$">
        <panel depends="$host1$" rejects="$device1$">
            <html>
                <div class="red_help_user">
                    <p>- - - - - - - - - - ACTION REQUIRED: please select the device A in the device selector above - - - - - - - - - -</p>
                </div>
            </html>
        </panel>
        <panel depends="$host2$" rejects="$device2$">
            <html>
                <div class="red_help_user">
                    <p>- - - - - - - - - - ACTION REQUIRED: please select the device B in the device selector above - - - - - - - - - -</p>
                </div>
            </html>
        </panel>
    </row>

    <search id="KPIs_server_A">
        <query>eventtype=nmon:performance $host-prefilter1$ $osfilter1$ host=$host1$ $metric_dimension_filter$ | search $frameID1$
| `$TimeFilter$`
| stats avg($metric_value_field$) as avg, median($metric_value_field$) as median, max($metric_value_field$) as max</query>
        <earliest>$TimeRange1.earliest$</earliest>
        <latest>$TimeRange1.latest$</latest>
    </search>

    <search id="KPIs_server_B">
        <query>eventtype=nmon:performance $host-prefilter2$ $osfilter2$ host=$host2$ $metric_dimension_filter$ | search $frameID2$
| `$TimeFilter$`
| stats avg($metric_value_field$) as avg, median($metric_value_field$) as median, max($metric_value_field$) as max</query>
        <earliest>$TimeRange2.earliest$</earliest>
        <latest>$TimeRange2.latest$</latest>
    </search>

    <search id="KPIs_server_A_device" depends="$show_device$ $show_unit$">
        <query>eventtype=nmon:performance $host-prefilter1$ $osfilter1$ host=$host1$ $metric_dimension_filter$ $metric_device_field$="$device1$" | search $frameID1$
| `$TimeFilter$`
| eval storage_metric_unit="$storage_metric_unit$"
| eval $metric_value_field$=case(storage_metric_unit=="MB", $metric_value_field$, storage_metric_unit=="GB", $metric_value_field$/1024, storage_metric_unit=="TB", $metric_value_field$/1024/1024)
| stats avg($metric_value_field$) as avg, median($metric_value_field$) as median, max($metric_value_field$) as max</query>
        <earliest>$TimeRange1.earliest$</earliest>
        <latest>$TimeRange1.latest$</latest>
    </search>

    <search id="KPIs_server_B_device" depends="$show_device$ $show_unit$">
        <query>eventtype=nmon:performance $host-prefilter2$ $osfilter2$ host=$host2$ $metric_dimension_filter$ $metric_device_field$="$device2$" | search $frameID2$
| `$TimeFilter$`
| eval storage_metric_unit="$storage_metric_unit$"
| eval $metric_value_field$=case(storage_metric_unit=="MB", $metric_value_field$, storage_metric_unit=="GB", $metric_value_field$/1024, storage_metric_unit=="TB", $metric_value_field$/1024/1024)
| stats avg($metric_value_field$) as avg, median($metric_value_field$) as median, max($metric_value_field$) as max</query>
        <earliest>$TimeRange2.earliest$</earliest>
        <latest>$TimeRange2.latest$</latest>
    </search>

    <search id="KPIs_server_A_device_rate" depends="$show_device$ $show_unit_rate$">
        <query>eventtype=nmon:performance $host-prefilter1$ $osfilter1$ host=$host1$ $metric_dimension_filter$ $metric_device_field$="$device1$" | search $frameID1$
| `$TimeFilter$`
| eval rate_metric_unit="$rate_metric_unit$"
| eval $metric_value_field$=case(rate_metric_unit=="KBps", $metric_value_field$, rate_metric_unit=="MBps", $metric_value_field$/1000, rate_metric_unit=="GBps", $metric_value_field$/1000/1000)
| stats avg($metric_value_field$) as avg, median($metric_value_field$) as median, max($metric_value_field$) as max</query>
        <earliest>$TimeRange1.earliest$</earliest>
        <latest>$TimeRange1.latest$</latest>
    </search>

    <search id="KPIs_server_B_device_rate" depends="$show_device$ $show_unit_rate$">
        <query>eventtype=nmon:performance $host-prefilter2$ $osfilter2$ host=$host2$ $metric_dimension_filter$ $metric_device_field$="$device2$" | search $frameID2$
| `$TimeFilter$`
| eval rate_metric_unit="$rate_metric_unit$"
| eval $metric_value_field$=case(rate_metric_unit=="KBps", $metric_value_field$, rate_metric_unit=="MBps", $metric_value_field$/1000, rate_metric_unit=="GBps", $metric_value_field$/1000/1000)
| stats avg($metric_value_field$) as avg, median($metric_value_field$) as median, max($metric_value_field$) as max</query>
        <earliest>$TimeRange2.earliest$</earliest>
        <latest>$TimeRange2.latest$</latest>
    </search>

    <row>
        <panel>
            <title>Server A - main KPIs results</title>

            <html>
                <div style="font-size: 18px; margin: 10px 0; font-weight: bold; text-align: center; color: black;">
                    <p>Server A:
                        <span style="color: #aec6cf; font-size: 200%;">$host1$</span>
                    </p>
                </div>
            </html>

            <single rejects="$show_device$">
                <search base="KPIs_server_A">
                    <query>fields avg</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Average $metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single rejects="$show_device$">
                <search base="KPIs_server_A">
                    <query>fields median</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Median $metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single rejects="$show_device$">
                <search base="KPIs_server_A">
                    <query>fields max</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Max $metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit$">
                <search base="KPIs_server_A_device">
                    <query>fields avg</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Average $storage_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit$">
                <search base="KPIs_server_A_device">
                    <query>fields median</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Median $storage_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit$">
                <search base="KPIs_server_A_device">
                    <query>fields max</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Max $storage_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit_rate$">
                <search base="KPIs_server_A_device_rate">
                    <query>fields avg</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Average $rate_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit_rate$">
                <search base="KPIs_server_A_device_rate">
                    <query>fields median</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Median $rate_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit_rate$">
                <search base="KPIs_server_A_device_rate">
                    <query>fields max</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Max $rate_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

        </panel>

        <panel>
            <title>Server B - main KPIs results</title>

            <html>
                <div style="font-size: 18px; margin: 10px 0; font-weight: bold; text-align: center; color: black;">
                    <p>Server A:
                        <span style="color: #aec6cf; font-size: 200%;">$host2$</span>
                    </p>
                </div>
            </html>

            <single rejects="$show_device$">
                <search base="KPIs_server_B">
                    <query>fields avg</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Average $metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single rejects="$show_device$">
                <search base="KPIs_server_B">
                    <query>fields median</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Median $metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single rejects="$show_device$">
                <search base="KPIs_server_B">
                    <query>fields max</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Max $metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit$">
                <search base="KPIs_server_B_device">
                    <query>fields avg</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Average $storage_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit$">
                <search base="KPIs_server_B_device">
                    <query>fields median</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Median $storage_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit$">
                <search base="KPIs_server_B_device">
                    <query>fields max</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Max $storage_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit_rate$">
                <search base="KPIs_server_B_device_rate">
                    <query>fields avg</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Average $rate_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit_rate$">
                <search base="KPIs_server_B_device_rate">
                    <query>fields median</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Median $rate_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

            <single depends="$show_device$ $show_unit_rate$">
                <search base="KPIs_server_B_device_rate">
                    <query>fields max</query>
                </search>
                <option name="drilldown">none</option>
                <option name="field">value</option>
                <option name="underLabel">Max $rate_metric_unit$</option>
                <option name="numberPrecision">0.00</option>
            </single>

        </panel>

    </row>

    <row depends="$chartactivate$">
        <panel>
            <title>Charting parameters</title>
            <input type="dropdown" token="chart" searchWhenChanged="true">
                <label>Select a type of chart:</label>
                <default>line</default>
                <choice value="area">Area</choice>
                <choice value="line">Line</choice>
                <choice value="column">Column</choice>
                <choice value="bar">Bar</choice>
            </input>
            <input type="dropdown" token="charting.chart.nullValueMode" searchWhenChanged="true">
                <label>Missing Data:</label>
                <default>gaps</default>
                <choice value="gaps">Gaps</choice>
                <choice value="connect">Connect</choice>
                <choice value="zero">Zero</choice>
            </input>
            <input type="dropdown" token="chart.stackingmode" searchWhenChanged="true">
                <label>Select a stacking mode:</label>
                <default>unstacked</default>
                <choice value="stacked">stacked (lines excluded)</choice>
                <choice value="stacked100">100% stacked (lines excluded)</choice>
                <choice value="unstacked">unstacked</choice>
            </input>
            <input type="dropdown" token="charting.legend.placement" searchWhenChanged="true">
                <label>Legend placement:</label>
                <default>bottom</default>
                <choice value="bottom">Bottom</choice>
                <choice value="top">Top</choice>
                <choice value="left">left</choice>
                <choice value="right">right</choice>
                <choice value="center">center</choice>
                <choice value="none">none</choice>
            </input>
            <input type="dropdown" token="span" searchWhenChanged="true">
                <label>Span:</label>
                <default>`nmon_span`</default>
                <choice value="`nmon_span`">auto</choice>
                <choice value="span=1m">1 minute</choice>
                <choice value="span=2m">2 minutes</choice>
                <choice value="span=3m">3 minutes</choice>
                <choice value="span=4m">4 minutes</choice>
                <choice value="span=5m">5 minutes</choice>
                <choice value="span=10m">10 minutes</choice>
                <choice value="span=15m">15 minutes</choice>
                <choice value="span=30m">30 minutes</choice>
                <choice value="span=1h">1 hour</choice>
                <choice value="span=2h">2 hours</choice>
                <choice value="span=12h">12 hours</choice>
                <choice value="span=4h">4 hours</choice>
                <choice value="span=1d">1 day</choice>
                <choice value="span=2d">2 days</choice>
                <choice value="span=1w">7 days</choice>
                <choice value="span=1mon">1 month</choice>
            </input>
        </panel>
    </row>

    <row>
        <panel>
            <title>Combined Chart (Time line period 1)</title>

            <input type="dropdown" token="statsmode" searchWhenChanged="true">
                <label>Statistic mode:</label>
                <default>avg</default>
                <choice value="max">Max</choice>
                <choice value="avg">Avg</choice>
                <choice value="min">Min</choice>
                <choice value="median">Median</choice>
                <choice value="mode">Mode</choice>
                <choice value="range">Range</choice>
            </input>

            <chart rejects="$show_device$">
                <search rejects="$show_device$">
                    <query>eventtype=nmon:performance earliest="$TimeRange1.earliest$" latest="$TimeRange1.latest$" $host-prefilter1$ host=$host1$ $osfilter1$ $metric_dimension_filter$
| search $frameID1$
| `$TimeFilter$`
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange1_name$, $statsmode$(fake) As fake by host
| fields _time,$TimeRange1_name$*
| appendcols
[ search eventtype=nmon:performance earliest="$TimeRange2.earliest$" latest="$TimeRange2.latest$" $host-prefilter2$ host=$host2$ $osfilter2$ $metric_dimension_filter$
| search $frameID2$
| `$TimeFilter$`
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange2_name$, $statsmode$(fake) As fake by host
| fields $TimeRange2_name$* ]</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

            <chart depends="$show_device$ $show_unit$">
                <search depends="$show_device$ $show_unit$">
                    <query>eventtype=nmon:performance earliest="$TimeRange1.earliest$" latest="$TimeRange1.latest$" $host-prefilter1$ host=$host1$ $osfilter1$ $metric_dimension_filter$ $metric_device_field$="$device1$"
| search $frameID1$
| `$TimeFilter$`
| eval storage_metric_unit="$storage_metric_unit$"
| eval $metric_value_field$=case(storage_metric_unit=="MB", $metric_value_field$, storage_metric_unit=="GB", $metric_value_field$/1024, storage_metric_unit=="TB", $metric_value_field$/1024/1024)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange1_name$, $statsmode$(fake) As fake by key
| fields _time,$TimeRange1_name$*
| appendcols
[ search eventtype=nmon:performance earliest="$TimeRange2.earliest$" latest="$TimeRange2.latest$" $host-prefilter2$ host=$host2$ $osfilter2$ $metric_dimension_filter$ $metric_device_field$="$device2$"
| search $frameID2$
| `$TimeFilter$`
| eval storage_metric_unit="$storage_metric_unit$"
| eval $metric_value_field$=case(storage_metric_unit=="MB", $metric_value_field$, storage_metric_unit=="GB", $metric_value_field$/1024, storage_metric_unit=="TB", $metric_value_field$/1024/1024)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange2_name$, $statsmode$(fake) As fake by key
| fields $TimeRange2_name$* ]</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$storage_metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

            <chart depends="$show_device$ $show_unit_rate$">
                <search depends="$show_device$ $show_unit_rate$">
                    <query>eventtype=nmon:performance earliest="$TimeRange1.earliest$" latest="$TimeRange1.latest$" $host-prefilter1$ host=$host1$ $osfilter1$ $metric_dimension_filter$ $metric_device_field$="$device1$"
| search $frameID1$
| `$TimeFilter$`
| eval rate_metric_unit="$rate_metric_unit$"
| eval $metric_value_field$=case(rate_metric_unit=="KBps", $metric_value_field$, rate_metric_unit=="MBps", $metric_value_field$/1000, rate_metric_unit=="GBps", $metric_value_field$/1000/1000)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange1_name$, $statsmode$(fake) As fake by key
| fields _time,$TimeRange1_name$*
| appendcols
[ search eventtype=nmon:performance earliest="$TimeRange2.earliest$" latest="$TimeRange2.latest$" $host-prefilter2$ host=$host2$ $osfilter2$ $metric_dimension_filter$ $metric_device_field$="$device2$"
| search $frameID2$
| `$TimeFilter$`
| eval rate_metric_unit="$rate_metric_unit$"
| eval $metric_value_field$=case(rate_metric_unit=="KBps", $metric_value_field$, rate_metric_unit=="MBps", $metric_value_field$/1000, rate_metric_unit=="GBps", $metric_value_field$/1000/1000)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange2_name$, $statsmode$(fake) As fake by key
| fields $TimeRange2_name$* ]</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$rate_metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

        </panel>

    </row>

    <row>
        <panel>
            <title>Chart server A</title>

            <html>
                <div style="font-size: 18px; margin: 10px 0; font-weight: bold; text-align: center; color: black;">
                    <p>Server A:
                        <span style="color: #aec6cf; font-size: 200%;">$host1$</span>
                    </p>
                </div>
            </html>

            <input type="dropdown" token="statsmode" searchWhenChanged="true">
                <label>Statistic mode:</label>
                <default>avg</default>
                <choice value="max">Max</choice>
                <choice value="avg">Avg</choice>
                <choice value="min">Min</choice>
                <choice value="median">Median</choice>
                <choice value="mode">Mode</choice>
                <choice value="range">Range</choice>
            </input>

            <chart rejects="$show_device$">
                <search rejects="$show_device$">
                    <query>eventtype=nmon:performance $host-prefilter1$ host=$host1$ $osfilter1$ $metric_dimension_filter$ | search $frameID1$
| `$TimeFilter$`
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange1_name$, $statsmode$(fake) As fake by host</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

            <chart depends="$show_device$ $show_unit$">
                <search depends="$show_device$ $show_unit$">
                    <query>eventtype=nmon:performance $host-prefilter1$ host=$host1$ $osfilter1$ $metric_dimension_filter$ $metric_device_field$="$device1$" | search $frameID1$
| `$TimeFilter$`
| eval storage_metric_unit="$storage_metric_unit$"
| eval $metric_value_field$=case(storage_metric_unit=="MB", $metric_value_field$, storage_metric_unit=="GB", $metric_value_field$/1024, storage_metric_unit=="TB", $metric_value_field$/1024/1024)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange1_name$, $statsmode$(fake) As fake by key</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$storage_metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

            <chart depends="$show_device$ $show_unit_rate$">
                <search depends="$show_device$ $show_unit_rate$">
                    <query>eventtype=nmon:performance $host-prefilter1$ host=$host1$ $osfilter1$ $metric_dimension_filter$ $metric_device_field$="$device1$" | search $frameID1$
| `$TimeFilter$`
| eval rate_metric_unit="$rate_metric_unit$"
| eval $metric_value_field$=case(rate_metric_unit=="KBps", $metric_value_field$, rate_metric_unit=="MBps", $metric_value_field$/1000, rate_metric_unit=="GBps", $metric_value_field$/1000/1000)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange1_name$, $statsmode$(fake) As fake by key</query>
                    <earliest>$TimeRange1.earliest$</earliest>
                    <latest>$TimeRange1.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$rate_metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

        </panel>
        <panel>
            <title>Chart server B</title>

            <html>
                <div style="font-size: 18px; margin: 10px 0; font-weight: bold; text-align: center; color: black;">
                    <p>Server B:
                        <span style="color: #aec6cf; font-size: 200%;">$host2$</span>
                    </p>
                </div>
            </html>

            <input type="dropdown" token="statsmode" searchWhenChanged="true">
                <label>Statistic mode:</label>
                <default>avg</default>
                <choice value="max">Max</choice>
                <choice value="avg">Avg</choice>
                <choice value="min">Min</choice>
                <choice value="median">Median</choice>
                <choice value="mode">Mode</choice>
                <choice value="range">Range</choice>
            </input>

            <chart rejects="$show_device$">
                <search rejects="$show_device$">
                    <query>eventtype=nmon:performance $host-prefilter2$ host=$host2$ $osfilter2$ $metric_dimension_filter$ | search $frameID2$
| `$TimeFilter$`
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange2_name$, $statsmode$(fake) As fake by host</query>
                    <earliest>$TimeRange2.earliest$</earliest>
                    <latest>$TimeRange2.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

            <chart depends="$show_device$ $show_unit$">
                <search depends="$show_device$ $show_unit$">
                    <query>eventtype=nmon:performance $host-prefilter2$ host=$host2$ $osfilter2$ $metric_dimension_filter$ $metric_device_field$="$device2$" | search $frameID2$
| `$TimeFilter$`
| eval storage_metric_unit="$storage_metric_unit$"
| eval $metric_value_field$=case(storage_metric_unit=="MB", $metric_value_field$, storage_metric_unit=="GB", $metric_value_field$/1024, storage_metric_unit=="TB", $metric_value_field$/1024/1024)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange2_name$, $statsmode$(fake) As fake by key</query>
                    <earliest>$TimeRange2.earliest$</earliest>
                    <latest>$TimeRange2.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$storage_metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

            <chart depends="$show_device$ $show_unit_rate$">
                <search depends="$show_device$ $show_unit_rate$">
                    <query>eventtype=nmon:performance $host-prefilter2$ host=$host2$ $osfilter2$ $metric_dimension_filter$ $metric_device_field$="$device2$" | search $frameID2$
| `$TimeFilter$`
| eval rate_metric_unit="$rate_metric_unit$"
| eval $metric_value_field$=case(rate_metric_unit=="KBps", $metric_value_field$, rate_metric_unit=="MBps", $metric_value_field$/1000, rate_metric_unit=="GBps", $metric_value_field$/1000/1000)
| eval key = host . ":" . $metric_device_field$
| timechart $span$ limit=0 useother=f $statsmode$($metric_value_field$) As $TimeRange2_name$, $statsmode$(fake) As fake by key</query>
                    <earliest>$TimeRange2.earliest$</earliest>
                    <latest>$TimeRange2.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">$chart$</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">$rate_metric_unit$</option>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisY2.enabled">false</option>
                <option name="charting.axisY2.scale">inherit</option>
            </chart>

        </panel>
    </row>
</form>
