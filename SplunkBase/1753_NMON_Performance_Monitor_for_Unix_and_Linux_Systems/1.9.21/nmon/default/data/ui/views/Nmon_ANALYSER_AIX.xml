<form stylesheet="ui_simple.css,hide_timeindicator.css,table_data_bar.css,panel_decoration.css" script="autodiscover.js,table_data_bar.js,ui_simple.js" isVisible="true">
    <label>NMON Analyser AIX</label>

    <!-- Information panel -->

    <row rejects="$host$">
        <panel>
            <html>

                <div class="imgheader2">
                    <img src="../../static/app/nmon/icons/grey_theme/info.png" alt="Info"/>

                    <h4>Nmon Analyser interfaces have been designed for focused time ranges, very large time ranges may require time to be fully processed</h4>
                    <h4>For long time analysis, please consider using metric dedicated interfaces available from App home pages</h4>

                </div>

            </html>
        </panel>
    </row>

    <!-- Slection panel -->

    <row>
        <panel>

            <input type="time" token="timerange" searchWhenChanged="true">
                <label>Time Range:</label>
                <default>
                    <earliestTime>-24h</earliestTime>
                    <latestTime>now</latestTime>
                </default>
            </input>

            <input type="dropdown" token="osfilter" searchWhenChanged="true">
                <label>Filter OS Type:</label>
                <default>AIX</default>
                <prefix>CPU.OStype="</prefix>
                <suffix>"</suffix>
                <choice value="*">Any OS</choice>
                <choice value="AIX">AIX</choice>
            </input>

            <input id="frameID" type="dropdown" token="frameID" searchWhenChanged="true">
                <label>Frame IDs:</label>
                <!-- Populating Data Model Search -->
                <search id="frameIDSearch">
                    <query>| tstats count AS count from datamodel=NMON_Data_CPU where (nodename = CPU) (CPU.frameID="*") ($osfilter$)
groupby "CPU.frameID", host prestats=true
| stats dedup_splitvals=t count AS count by "CPU.frameID"
| rename "CPU.frameID" AS "frameID" | fields frameID | sort frameID</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <choice value="*">Any</choice>
                <default>*</default>
                <fieldForLabel>frameID</fieldForLabel>
                <fieldForValue>frameID</fieldForValue>
            </input>

            <input type="text" token="host-prefilter" searchWhenChanged="true">
                <label>Optional: Filter hosts populating</label>
                <default>*</default>
            </input>

            <input id="host" type="dropdown" token="host" searchWhenChanged="true">
                <label>Host:</label>
                <!-- Populating Data Model Search -->
                <search id="baseSearch">
                    <query>| tstats count AS count from datamodel=NMON_Data_CPU where (nodename = CPU) (CPU.frameID=$frameID$) (host=$host-prefilter$) ($osfilter$)
groupby host prestats=true
| stats dedup_splitvals=t count AS count by host
| fields host | sort host</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <fieldForLabel>host</fieldForLabel>
                <fieldForValue>host</fieldForValue>
                <prefix>host="</prefix>
                <suffix>"</suffix>
            </input>

            <input type="dropdown" token="span" searchWhenChanged="true">
                <label>Span:</label>
                <default>`nmon_span`</default>
                <choice value="`nmon_span`">auto</choice>
                <choice value="span=1m">1 minute</choice>
                <choice value="span=2m">2 minutes</choice>
                <choice value="span=3m">3 minutes</choice>
                <choice value="span=4m">4 minutes</choice>
                <choice value="span=5m">5 minutes</choice>
                <choice value="span=10m">10 minutes</choice>
                <choice value="span=15m">15 minutes</choice>
                <choice value="span=30m">30 minutes</choice>
                <choice value="span=1h">1 hour</choice>
                <choice value="span=2h">2 hours</choice>
                <choice value="span=12h">12 hours</choice>
                <choice value="span=4h">4 hours</choice>
                <choice value="span=1d">1 day</choice>
                <choice value="span=2d">2 days</choice>
                <choice value="span=1w">7 days</choice>
                <choice value="span=1mon">1 month</choice>
            </input>

        </panel>
    </row>

    <!-- Help the user -->

    <row rejects="$host$">
        <panel>
            <html>
                <div class="red_help_user">
                    <p>- - - - - - - - - - ACTION REQUIRED: please select your server name(s) in the host selector above - - - - - - - - - -</p>
                </div>
            </html>
        </panel>
    </row>

    <!--
    Dynamic configuration
    The following searches are being used to define various tokens using event handlers
    -->

    <!-- DF_STORAGE data availability -->

    <search>
        <query>eventtype=nmon:performance type=DF_STORAGE $host$ | head 100 | stats count | where count&gt;0</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
        <progress>
            <condition match="$job.resultCount$ == 0">
                    <set token="start_jfs_storage_search">true</set>
                    <set token="storage_usage_datasource">JFSFILE</set>
                    <set token="storage_inodes_usage_datasource">JFSINODE</set>
                    <unset token="start_df_storage_search"></unset>
            </condition>
            <condition>
                    <set token="start_df_storage_search">true</set>
                    <set token="storage_usage_datasource">DF_STORAGE</set>
                    <set token="storage_inodes_usage_datasource">DF_INODES</set>
                    <unset token="start_jfs_storage_search"></unset>
            </condition>
        </progress>
    </search>

    <!-- Configuration Search uses the nmon_inventory data over the report -->

    <search ref="NMON Inventory AIX" id="configSearch">
    </search>

    <row>
        <panel>
            <title>SYSTEM SUMMARY OVERVIEW</title>

            <table rejects="$show_null_config$">
                <title></title>
                <search base="configSearch">
                    <query>rename hostname AS host | search $host$
| fields AIX_Machine_SerialNumber,AIX_virtualcpus,AIX_logicalcores,AIX_entitled,Processor,AIX_processor_mode,AIX_processor_clockspeed,AIX_cpu_type,AIX_kernel_type,AIX_LEVEL,AIX_plateform_firmware_level,nmon_version,AIX_PoolID,AIX_system_installed_CPUs,AIX_system_active_CPUs,AIX_PoolCPUs
| rename "AIX_*" AS *
                    </query>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_config">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_config"/>
                        </condition>
                    </progress>
                </search>
            </table>
            <html depends="$show_null_config$">
                <p style="color:blue;margin-left:30px;font-size:14px">SYSTEM SUMMARY OVERVIEW Search returned no results, The nmon inventory data may not be available yet for this host, manually run the Nmon Inventory Generation report or wait for the auto update. (occurs every hour by default)</p>
            </html>

            <search>
                <query>eventtype=nmon:performance type="CPU_ALL" OR type="LPAR" $host$ | head 100
| stats count by type | sort - type | head 1
| eval datasource=case(match(type, "LPAR"), "LPAR (Virtual Processor usage)", match(type, "CPU_ALL"), "CPU_ALL (Percentage usage)") | stats values(datasource) As datasource</query>
                <earliest>$timerange.earliest$</earliest>
                <latest>$timerange.latest$</latest>
                <progress>
                    <condition>
                        <set token="cpu_data_source">$result.datasource$</set>
                    </condition>
                </progress>
            </search>

        </panel>
    </row>

    <row>
        <panel>

            <input type="dropdown" token="statsmode" searchWhenChanged="true">
                <label></label>
                <default>max</default>
                <choice value="max">max</choice>
                <choice value="avg">avg</choice>
            </input>

            <chart>
                <title>CPU Usage - $cpu_data_source$</title>
                <search>
                    <query>| tstats
max("CPU.lpar_vp_usage") AS vp_usage max("CPU.cpu_PCT") AS pct_usage
from datamodel=NMON_Data_CPU where (nodename = CPU) (CPU.type="CPU_ALL" OR CPU.type="LPAR") ($host$) groupby _time, host prestats=true span=1m
| bucket _time span=1m
| stats dedup_splitvals=t
max("CPU.lpar_vp_usage") AS vp_usage max("CPU.cpu_PCT") AS pct_usage by _time, host
| eventstats count(eval(vp_usage>0)) as count_lpar
| eval usage=if(count_lpar>0, vp_usage, pct_usage)
| timechart $span$ $statsmode$(usage) AS $statsmode$_cpu_usage</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">CPU Usage</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("CPU.lpar_vp_usage") AS vp_usage max("CPU.cpu_PCT") AS pct_usage from datamodel=NMON_Data_CPU where (nodename = CPU) (CPU.type="CPU_ALL" OR CPU.type="LPAR") ($host$) groupby _time, host prestats=true span=1m
| bucket _time span=1m
| stats dedup_splitvals=t max("CPU.lpar_vp_usage") AS vp_usage max("CPU.cpu_PCT") AS pct_usage by _time, host
| eventstats count(eval(vp_usage>0)) as count_lpar
| eval usage=if(count_lpar>0, vp_usage, pct_usage)
| timechart span=1m $statsmode$(usage) AS $statsmode$_usage</link>
                </drilldown>
            </chart>

        </panel>

        <panel>

            <input type="dropdown" token="statsmode" searchWhenChanged="true">
                <label></label>
                <default>max</default>
                <choice value="max">max</choice>
                <choice value="avg">avg</choice>
            </input>

            <chart>
                <title>I/O Per second</title>
                <search>
                    <query>| tstats max("DISKXFER.value") AS DISKXFER.value from datamodel=NMON_Data_DISKXFER
where (nodename = DISKXFER) ($host$)
groupby _time, host, "DISKXFER.device" prestats=true span=1m
| bucket _time span=1m
| stats dedup_splitvals=t max("DISKXFER.value") AS DISKXFER.value by _time, host, "DISKXFER.device"
| rename DISKXFER.device AS device, DISKXFER.value AS value
| stats sum(value) As value by _time
| timechart $span$ $statsmode$(value) AS $statsmode$_iops_usage</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">I/O per Sec</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("DISKXFER.value") AS DISKXFER.value from datamodel=NMON_Data_DISKXFER where (nodename = DISKXFER) ($host$) groupby _time, host, "DISKXFER.device" prestats=true span=1m
| bucket _time span=1m
| stats dedup_splitvals=t max("DISKXFER.value") AS DISKXFER.value by _time, host, "DISKXFER.device"
| rename DISKXFER.device AS device, DISKXFER.value AS value
| stats sum(value) As value by _time
| timechart span=1m $statsmode$(value) AS $statsmode$_iops_usage</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <row>
        <panel id="cpu">
            <title>CPU statistics</title>
        </panel>
    </row>

    <search id="CPU_ALL">
        <query>| tstats `CPU_ALL(max)` from datamodel=NMON_Data_CPU where (nodename = CPU.CPU_ALL) ($host$)
groupby _time, host prestats=true span=1m
| stats dedup_splitvals=t `CPU_ALL(max)` by _time, host
| timechart $span$
avg("CPU.Idle_PCT") AS "Idle %",
avg("CPU.Sys_PCT") AS "Sys %",
avg("CPU.User_PCT") AS "User %",
avg("CPU.Wait_PCT") AS "Wait %",
avg("CPU.cpu_PCT") AS "CPU %"</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
    </search>


    <row>
        <panel>

            <input type="link" token="cpu_linkinput">
                <label></label>
                <choice value="cpu_chart1">CPU_ALL, % by category</choice>
                <choice value="cpu_chart2">CPU_ALL, % global usage</choice>
                <choice value="cpu_chart3">CPUnn, % global usage by processor</choice>
                <choice value="cpu_chart4">LPAR, Virtual CPU usage</choice>
                <choice value="cpu_chart5">LPAR, Pools Virtual CPU usage</choice>
                <choice value="cpu_chart6">POOLS, Pools extended statistics</choice>
                <default>cpu_chart1</default>
                <change>
                    <condition value="cpu_chart1">
                        <set token="cpu_chart1">true</set>
                        <unset token="cpu_chart2"></unset>
                        <unset token="cpu_chart3"></unset>
                        <unset token="cpu_chart4"></unset>
                        <unset token="cpu_chart5"></unset>
                        <unset token="cpu_chart6"></unset>
                    </condition>
                    <condition value="cpu_chart2">
                        <set token="cpu_chart2">true</set>
                        <unset token="cpu_chart1"></unset>
                        <unset token="cpu_chart3"></unset>
                        <unset token="cpu_chart4"></unset>
                        <unset token="cpu_chart5"></unset>
                        <unset token="cpu_chart6"></unset>
                    </condition>
                    <condition value="cpu_chart3">
                        <set token="cpu_chart3">true</set>
                        <unset token="cpu_chart1"></unset>
                        <unset token="cpu_chart2"></unset>
                        <unset token="cpu_chart4"></unset>
                        <unset token="cpu_chart5"></unset>
                        <unset token="cpu_chart6"></unset>
                    </condition>
                    <condition value="cpu_chart4">
                        <set token="cpu_chart4">true</set>
                        <unset token="cpu_chart1"></unset>
                        <unset token="cpu_chart2"></unset>
                        <unset token="cpu_chart3"></unset>
                        <unset token="cpu_chart5"></unset>
                        <unset token="cpu_chart6"></unset>
                    </condition>
                    <condition value="cpu_chart5">
                        <set token="cpu_chart5">true</set>
                        <unset token="cpu_chart1"></unset>
                        <unset token="cpu_chart2"></unset>
                        <unset token="cpu_chart3"></unset>
                        <unset token="cpu_chart4"></unset>
                        <unset token="cpu_chart6"></unset>
                    </condition>
                    <condition value="cpu_chart6">
                        <set token="cpu_chart6">true</set>
                        <unset token="cpu_chart1"></unset>
                        <unset token="cpu_chart2"></unset>
                        <unset token="cpu_chart3"></unset>
                        <unset token="cpu_chart4"></unset>
                        <unset token="cpu_chart5"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$cpu_chart1$">
                <title></title>
                <search base="CPU_ALL">
                    <query>fields _time,"Idle %","Sys %","User %","Wait %"</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">connect</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">% CPUs</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">100</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `CPU_ALL(max)` from datamodel=NMON_Data_CPU where (nodename = CPU.CPU_ALL) ($host$) groupby _time, host prestats=true span=1m
| stats dedup_splitvals=t `CPU_ALL(max)` by _time, host
| timechart span=1m avg("CPU.Idle_PCT") AS "Idle_PCT", avg("CPU.Sys_PCT") AS "Sys_PCT", avg("CPU.User_PCT") AS "User_PCT", avg("CPU.Wait_PCT") AS "Wait_PCT"</link>
                </drilldown>
            </chart>

            <chart depends="$cpu_chart2$">
                <title></title>
                <search base="CPU_ALL">
                    <query>fields _time,"CPU %"</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">% CPUs</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">100</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `CPU_ALL(max)` from datamodel=NMON_Data_CPU where (nodename = CPU.CPU_ALL) ($host$) groupby _time, host prestats=true span=1m
| stats dedup_splitvals=t `CPU_ALL(max)` by _time, host
| timechart span=1m avg("CPU.cpu_PCT") AS "CPU_PCT"</link>
                </drilldown>
            </chart>

            <chart depends="$cpu_chart3$">
                <title></title>
                <search>
                    <query>| tstats `CPU_ALL(max)` from datamodel=NMON_Data_CPU where (nodename = CPU.CPUnn) ($host$) groupby _time, host, "CPU.CPUnn.logical_core" prestats=true span=1m
| stats dedup_splitvals=t `CPU_ALL(max)` by _time, host, "CPU.CPUnn.logical_core"
| fields _time,host,CPU.CPUnn.logical_core,CPU.cpu_PCT
| timechart $span$ useother=f limit=0 avg("CPU.cpu_PCT") AS cpu_PCT by "CPU.CPUnn.logical_core"</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">% of CPU utilization</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">100</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `CPU_ALL(max)` from datamodel=NMON_Data_CPU where (nodename = CPU.CPUnn) ($host$) groupby _time, host, "CPU.CPUnn.logical_core" prestats=true span=1m
| stats dedup_splitvals=t `CPU_ALL(max)` by _time, host, "CPU.CPUnn.logical_core"
| timechart span=1m avg("CPU.Idle_PCT") AS "Idle_PCT", avg("CPU.Sys_PCT") AS "Sys_PCT", avg("CPU.User_PCT") AS "User_PCT", avg("CPU.Wait_PCT") AS "Wait_PCT" by "CPU.CPUnn.logical_core"</link>
                </drilldown>
            </chart>

            <chart depends="$cpu_chart4$">
                <title></title>
                <search>
                    <query>| tstats max(CPU.lpar_vp_usage) AS lpar_vp_usage, max(CPU.entitled) As entitled, max(CPU.virtualCPUs) As virtualCPUs from datamodel=NMON_Data_CPU where (nodename = CPU.LPAR) ($host$)
groupby _time,"CPU.frameID",host prestats=true span=1m
| stats dedup_splitvals=t `LPAR(max)` by _time,host
| timechart $span$ max(CPU.lpar_vp_usage) AS lpar_vp_usage, max(CPU.entitled) As entitled, max(CPU.virtualCPUs) As virtualCPUs</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Virtual CPUs</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max(CPU.lpar_vp_usage) AS lpar_vp_usage, max(CPU.entitled) As entitled, max(CPU.virtualCPUs) As virtualCPUs from datamodel=NMON_Data_CPU where (nodename = CPU.LPAR) ($host$) groupby _time,"CPU.frameID",host prestats=true span=1m
| stats dedup_splitvals=t `LPAR(max)` by _time,host
| timechart span=1m max(CPU.lpar_vp_usage) AS lpar_vp_usage, max(CPU.entitled) As entitled, max(CPU.virtualCPUs) As virtualCPUs</link>
                </drilldown>
            </chart>

            <chart depends="$cpu_chart5$">
                <title></title>
                <search>
                    <query>| tstats max("CPU.poolCPUs") AS "poolCPUs" max("CPU.LPAR.Pool_usage") AS "pool_usage" from datamodel=NMON_Data_CPU where (nodename = CPU.LPAR)
($host$) groupby _time, host prestats=true span=1m
| stats dedup_splitvals=t max("CPU.poolCPUs") AS "poolCPUs" max("CPU.LPAR.Pool_usage") AS "pool_usage" by _time, host
| timechart $span$ max(pool_usage) AS "max_pool_usage" max(poolCPUs) As poolCPUs</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Virtual CPUs</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("CPU.poolCPUs") AS "poolCPUs" max("CPU.LPAR.Pool_usage") AS "pool_usage" from datamodel=NMON_Data_CPU where (nodename = CPU.LPAR) ($host$) groupby _time, host prestats=true span=1m
| stats dedup_splitvals=t max("CPU.poolCPUs") AS "poolCPUs" max("CPU.LPAR.Pool_usage") AS "pool_usage" by _time, host
| timechart span=1m max(pool_usage) AS "max_pool_usage" max(poolCPUs) As poolCPUs</link>
                </drilldown>
            </chart>

            <chart depends="$cpu_chart6$">
                <title></title>
                <search>
                    <query>| tstats max("POOLS.max_pool_capacity") AS max_pool_capacity max("POOLS.entitled_pool_capacity") AS entitled_pool_capacity max("POOLS.pool_busy_time") AS pool_busy_time
from datamodel=NMON_Data_CPU.POOLS where (nodename = POOLS) ($host$) (POOLS.pool_busy_time!=0)
groupby _time, "POOLS.frameID", host prestats=true span=1m
| stats dedup_splitvals=t max("POOLS.max_pool_capacity") AS max_pool_capacity max("POOLS.entitled_pool_capacity") AS entitled_pool_capacity max("POOLS.pool_busy_time") AS pool_busy_time
by _time, "POOLS.frameID", host
| timechart $span$ max(pool_busy_time) As pool_busy_time max(entitled_pool_capacity) AS entitled_pool_capacity, max(max_pool_capacity) AS max_pool_capacity</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Virtual CPUs</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("POOLS.max_pool_capacity") AS max_pool_capacity max("POOLS.entitled_pool_capacity") AS entitled_pool_capacity max("POOLS.pool_busy_time") AS pool_busy_time from datamodel=NMON_Data_CPU.POOLS where (nodename = POOLS) ($host$) (POOLS.pool_busy_time!=0) groupby _time, "POOLS.frameID", host prestats=true span=1m
| stats dedup_splitvals=t max("POOLS.max_pool_capacity") AS max_pool_capacity max("POOLS.entitled_pool_capacity") AS entitled_pool_capacity max("POOLS.pool_busy_time") AS pool_busy_time by _time, "POOLS.frameID", host
| timechart `nmon_span` max(pool_busy_time) As pool_busy_time max(entitled_pool_capacity) AS entitled_pool_capacity, max(max_pool_capacity) AS max_pool_capacity</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <row>
        <panel id="process">
            <title>Process, Kernel, I/O Statistics</title>
        </panel>
    </row>

    <row>
        <panel>

            <input type="link" token="top_linkinput">
                <label></label>
                <choice value="top_chart1">TOP, CPU Usage per logical core</choice>
                <choice value="top_chart2">TOP: Memory Usage per command invocation</choice>
                <choice value="top_chart3">TOP: Read / Write System Calls</choice>
                <choice value="top_chart4">TOP: Paging, Sum of page faults</choice>
                <choice value="top_chart5">TOP: Threads per Command invocation</choice>
                <default>top_chart1</default>
                <change>
                    <condition value="top_chart1">
                        <set token="top_chart1">true</set>
                        <unset token="top_chart2"></unset>
                        <unset token="top_chart3"></unset>
                        <unset token="top_chart4"></unset>
                        <unset token="top_chart5"></unset>
                    </condition>
                    <condition value="top_chart2">
                        <set token="top_chart2">true</set>
                        <unset token="top_chart1"></unset>
                        <unset token="top_chart3"></unset>
                        <unset token="top_chart4"></unset>
                        <unset token="top_chart5"></unset>
                    </condition>
                    <condition value="top_chart3">
                        <set token="top_chart3">true</set>
                        <unset token="top_chart2"></unset>
                        <unset token="top_chart1"></unset>
                        <unset token="top_chart4"></unset>
                        <unset token="top_chart5"></unset>
                    </condition>
                    <condition value="top_chart4">
                        <set token="top_chart4">true</set>
                        <unset token="top_chart2"></unset>
                        <unset token="top_chart3"></unset>
                        <unset token="top_chart1"></unset>
                        <unset token="top_chart5"></unset>
                    </condition>
                    <condition value="top_chart5">
                        <set token="top_chart5">true</set>
                        <unset token="top_chart2"></unset>
                        <unset token="top_chart3"></unset>
                        <unset token="top_chart4"></unset>
                        <unset token="top_chart1"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$top_chart1$" rejects="$show_null_top$">
                <title></title>
                <search>
                    <query>| tstats max("TOP_AIX.pct_CPU") AS pct_CPU from datamodel=NMON_Data_TOP
where (nodename = TOP_AIX) ($host$)
groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.virtual_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.pct_CPU") AS pct_CPU by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.virtual_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus, "TOP_AIX.virtual_cpus" AS virtual_cpus, "TOP_AIX.Command" AS Command, "TOP_AIX.PID" AS PID
| eval limit=(logical_cpus*100) | where (pct_CPU&lt;=limit)
| eval smt_threads=(logical_cpus/virtual_cpus) | eval pct_CPU=case(isnum(smt_threads) AND smt_threads&gt;="2", pct_CPU*1.2, isnum(smt_threads) AND smt_threads&gt;="4", pct_CPU*1.4, isnum(smt_threads), pct_CPU)
| stats sum(pct_CPU) As pct_CPU, last(logical_cpus) As logical_cpus by _time,Command
| eval usage_per_core=(pct_CPU/100)
| stats sum(usage_per_core) As usage_per_core by _time,Command
| timechart $span$ useother=f limit=0
max(usage_per_core) as "CPU Usage per core" by Command</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_top">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_top"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Logical Core</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("TOP_AIX.pct_CPU") AS pct_CPU from datamodel=NMON_Data_TOP where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.virtual_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.pct_CPU") AS pct_CPU by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.virtual_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus, "TOP_AIX.virtual_cpus" AS virtual_cpus, "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| eval limit=(logical_cpus*100) | where (pct_CPU&lt;=limit)
| eval smt_threads=(logical_cpus/virtual_cpus) | eval pct_CPU=case(isnum(smt_threads) AND smt_threads&gt;="2", pct_CPU*1.2, isnum(smt_threads) AND smt_threads&gt;="4", pct_CPU*1.4, isnum(smt_threads), pct_CPU)
| stats sum(pct_CPU) As pct_CPU,last(logical_cpus) As logical_cpus by _time,Command
| eval usage_per_core=(pct_CPU/100)
| stats sum(usage_per_core) As usage_per_core by _time,Command
| timechart span=1m useother=f limit=0 max(usage_per_core) as "CPU Usage per core" by Command</link>
                </drilldown>
            </chart>

            <chart depends="$top_chart2$" rejects="$show_null_top$">
                <title></title>
                <search>
                    <query>| tstats max("TOP_AIX.ResText") AS ResText max("TOP_AIX.ResData") AS ResData from datamodel=NMON_Data_TOP
where (nodename = TOP_AIX) ($host$)
groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.ResText") AS ResText max("TOP_AIX.ResData") AS ResData by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| eval Used_Mem_MB=((ResData+ResText)/1024)
| stats sum(Used_Mem_MB) As Used_Mem_MB by _time,Command
| timechart $span$ useother=f limit=0 max(Used_Mem_MB) as "Used_Memory" by Command</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_top">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_top"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Megabytes (MB)</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("TOP_AIX.ResText") AS ResText max("TOP_AIX.ResData") AS ResData from datamodel=NMON_Data_TOP where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.ResText") AS ResText max("TOP_AIX.ResData") AS ResData by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| eval Used_Mem_MB=((ResData%2BResText)/1024)
| stats sum(Used_Mem_MB) As Used_Mem_MB by _time,Command
| timechart span=1m useother=f limit=0 max(Used_Mem_MB) as "Used_Memory" by Command</link>
                </drilldown>
            </chart>

            <chart depends="$top_chart3$" rejects="$show_null_top$">
                <title></title>
                <search>
                    <query>| tstats max("TOP_AIX.CharIO") AS CharIO from datamodel=NMON_Data_TOP
where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.CharIO") AS CharIO by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| stats sum(CharIO) As CharIO by _time,Command
| timechart $span$ useother=f limit=0 max(CharIO) as "I/O" by Command</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_top">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_top"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Char I/O</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("TOP_AIX.CharIO") AS CharIO from datamodel=NMON_Data_TOP where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.CharIO") AS CharIO by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| stats sum(CharIO) As CharIO by _time,Command
| timechart span=1m useother=f limit=0 max(CharIO) as "I/O" by Command</link>
                </drilldown>
            </chart>

            <chart depends="$top_chart4$" rejects="$show_null_top$">
                <title></title>
                <search>
                    <query>| tstats max("TOP_AIX.Paging") AS Paging from datamodel=NMON_Data_TOP
where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.Paging") AS Paging by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| stats sum(Paging) As Paging by _time,Command
| timechart $span$ useother=f limit=0 max(Paging) as "Paging" by Command</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_top">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_top"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Number of Pages</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("TOP_AIX.Paging") AS Paging from datamodel=NMON_Data_TOP where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.Paging") AS Paging by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| stats sum(Paging) As Paging by _time,Command
| timechart span=1m useother=f limit=0 max(Paging) as "Paging" by Command</link>
                </drilldown>
            </chart>

            <chart depends="$top_chart5$" rejects="$show_null_top$">
                <title></title>
                <search>
                    <query>| tstats max("TOP_AIX.Threads") AS Threads from datamodel=NMON_Data_TOP
where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.Threads") AS Threads by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| stats sum(Threads) As Threads by _time,Command
| timechart $span$ useother=f limit=0 max(Threads) as "Threads" by Command</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_top">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_top"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Number of Threads</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("TOP_AIX.Threads") AS Threads from datamodel=NMON_Data_TOP where (nodename = TOP_AIX) ($host$) groupby _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID" prestats=true span=1m
| stats dedup_splitvals=t max("TOP_AIX.Threads") AS Threads by _time, host, "TOP_AIX.logical_cpus", "TOP_AIX.Command", "TOP_AIX.PID"
| rename "TOP_AIX.logical_cpus" AS logical_cpus "TOP_AIX.Command" AS Command "TOP_AIX.PID" AS PID
| stats sum(Threads) As Threads by _time,Command
| timechart span=1m useother=f limit=0 max(Threads) as "Threads" by Command</link>
                </drilldown>
            </chart>

            <html depends="$show_null_top$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, TOP collection (processes activity) has not been activated or no processes were captured due to lack of activity</p>
            </html>

        </panel>
    </row>

    <search id="FILE">
        <query>| tstats max(FILE.readch) As readch, max(FILE.writech) As writech
max(FILE.iget) As iget, max(FILE.namei) As namei, max(FILE.dirblk) As dirblk
max(FILE.ttycanch) As ttycanch, max(FILE.ttyoutch) As ttyoutch, max(FILE.ttyrawch) As ttyrawch from datamodel=NMON_Data_FILE
where (nodename = FILE) ($host$) groupby _time, host prestats=true $span$
| timechart $span$ max(FILE.readch) As readch, max(FILE.writech) As writech
max(FILE.iget) As iget, max(FILE.namei) As namei, max(FILE.dirblk) As dirblk
max(FILE.ttycanch) As ttycanch, max(FILE.ttyoutch) As ttyoutch, max(FILE.ttyrawch) As ttyrawch</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
    </search>

    <row>
        <panel>

            <input type="link" token="file_linkinput">
                <label></label>
                <choice value="file_chart1">FILE, Read/Write system calls</choice>
                <choice value="file_chart2">FILE, Various statistics</choice>
                <default>file_chart1</default>
                <change>
                    <condition value="file_chart1">
                        <set token="file_chart1">true</set>
                        <unset token="file_chart2"></unset>
                    </condition>
                    <condition value="file_chart2">
                        <set token="file_chart2">true</set>
                        <unset token="file_chart1"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$file_chart1$">
                <title></title>
                <search base="FILE">
                    <query>fields _time,readch,writech</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Rate/Sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max(FILE.readch) As readch, max(FILE.writech) As writech from datamodel=NMON_Data_FILE where (nodename = FILE) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max(FILE.readch) As readch, max(FILE.writech) As writech</link>
                </drilldown>
            </chart>

            <chart depends="$file_chart2$">
                <title></title>
                <search base="FILE">
                    <query>fields _time,iget,namei,dirblk,ttycanch,ttyoutch,ttyrawch</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Rate/Sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max(FILE.iget) As iget, max(FILE.namei) As namei, max(FILE.dirblk) As dirblk max(FILE.ttycanch) As ttycanch, max(FILE.ttyoutch) As ttyoutch, max(FILE.ttyrawch) As ttyrawch from datamodel=NMON_Data_FILE where (nodename = FILE) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max(FILE.iget) As iget, max(FILE.namei) As namei, max(FILE.dirblk) As dirblk max(FILE.ttycanch) As ttycanch, max(FILE.ttyoutch) As ttyoutch, max(FILE.ttyrawch) As ttyrawch</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <row>
        <panel>

            <input type="link" token="ioadapt_linkinput">
                <label></label>
                <choice value="ioadapt_chart1">IOADAPT, Read/Write Operations (Kbytes/sec)</choice>
                <choice value="ioadapt_chart2">IOADAPT, Disks adapters Total I/O Operations (tps)</choice>
                <default>ioadapt_chart1</default>
                <change>
                    <condition value="ioadapt_chart1">
                        <set token="ioadapt_chart1">true</set>
                        <unset token="ioadapt_chart2"></unset>
                    </condition>
                    <condition value="ioadapt_chart2">
                        <set token="ioadapt_chart2">true</set>
                        <unset token="ioadapt_chart1"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$ioadapt_chart1$">
                <title></title>
                <search>
                    <query>| tstats max(IOADAPT.value) As value from datamodel=NMON_Data_IOADAPT
where (nodename = IOADAPT) ($host$) (IOADAPT.device!="*tps*") groupby _time, "IOADAPT.device" prestats=true $span$
| timechart useother=f limit=0 $span$ max(IOADAPT.value) As value by "IOADAPT.device"</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">KBytes/sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max(IOADAPT.value) As value from datamodel=NMON_Data_IOADAPT where (nodename = IOADAPT) ($host$) (IOADAPT.device!="*tps*") groupby _time, "IOADAPT.device" prestats=true $span$
| timechart useother=f limit=0 $span$ max(IOADAPT.value) As value by "IOADAPT.device"</link>
                </drilldown>
            </chart>

            <chart depends="$ioadapt_chart2$">
                <title></title>
                <search>
                    <query>| tstats max(IOADAPT.value) As value from datamodel=NMON_Data_IOADAPT
where (nodename = IOADAPT) ($host$) (IOADAPT.device="*tps*") groupby _time, "IOADAPT.device" prestats=true $span$
| timechart useother=f limit=0 $span$ max(IOADAPT.value) As value by "IOADAPT.device"</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">I/O per Sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max(IOADAPT.value) As value from datamodel=NMON_Data_IOADAPT where (nodename = IOADAPT) ($host$) (IOADAPT.device="*tps*") groupby _time, "IOADAPT.device" prestats=true $span$
| timechart useother=f limit=0 $span$ max(IOADAPT.value) As value by "IOADAPT.device"</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <search id="PROC">
        <query>| tstats max("PROC.Runnable") AS Runnable max("PROC.Swap_in") AS Swap_in
max("PROC.pswitch") AS pswitch max("PROC.syscall") AS syscall
max("PROC.fork") AS fork max("PROC.exec") AS exec from datamodel=NMON_Data_PROC where (nodename = PROC)
($host$) groupby _time, host prestats=true $span$
| timechart $span$ max("PROC.Runnable") AS Runnable max("PROC.Swap_in") AS Swap_in
max("PROC.pswitch") AS pswitch max("PROC.syscall") AS syscall
max("PROC.fork") AS fork max("PROC.exec") AS exec</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
    </search>

    <row>
        <panel>

            <input type="link" token="proc_linkinput">
                <label></label>
                <choice value="proc_chart1">PROC, Kernel Threads in run queue and to be paged (RunQueue, Swap-In)</choice>
                <choice value="proc_chart2">PROC, Context switches and system calls (pswitch, syscall)</choice>
                <choice value="proc_chart3">PROC, Fork and Exec system calls (fork, exec)</choice>
                <default>proc_chart1</default>
                <change>
                    <condition value="proc_chart1">
                        <set token="proc_chart1">true</set>
                        <unset token="proc_chart2"></unset>
                        <unset token="proc_chart3"></unset>
                    </condition>
                    <condition value="proc_chart2">
                        <set token="proc_chart2">true</set>
                        <unset token="proc_chart1"></unset>
                        <unset token="proc_chart3"></unset>
                    </condition>
                    <condition value="proc_chart3">
                        <set token="proc_chart3">true</set>
                        <unset token="proc_chart1"></unset>
                        <unset token="proc_chart2"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$proc_chart1$">
                <title></title>
                <search base="PROC">
                    <query>fields _time,Runnable,Swap_in</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Value</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("PROC.Runnable") AS Runnable max("PROC.Swap_in") AS Swap_in from datamodel=NMON_Data_PROC where (nodename = PROC) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max("PROC.Runnable") AS Runnable max("PROC.Swap_in") AS Swap_in</link>
                </drilldown>
            </chart>

            <chart depends="$proc_chart2$">
                <title></title>
                <search base="PROC">
                    <query>fields _time,pswitch,syscall</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">$chart.stackingmode$</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Rates per Second</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("PROC.pswitch") AS pswitch max("PROC.syscall") AS syscall from datamodel=NMON_Data_PROC where (nodename = PROC) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max("PROC.pswitch") AS pswitch max("PROC.syscall") AS syscall</link>
                </drilldown>
            </chart>

            <chart depends="$proc_chart3$">
                <title></title>
                <search base="PROC">
                    <query>fields _time,fork,exec</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Rates per Second</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("PROC.fork") AS fork max("PROC.exec") AS exec from datamodel=NMON_Data_PROC where (nodename = PROC) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max("PROC.fork") AS fork max("PROC.exec") AS exec</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <search id="PAGE">
        <query>| tstats max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin max("PAGE_AIX.pgsout") AS pgsout
max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans max("PAGE_AIX.cycles") AS cycles
max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio
from datamodel=NMON_Data_PAGE where (nodename = PAGE_AIX) ($host$) groupby _time, host prestats=true $span$
| timechart $span$
max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin
max("PAGE_AIX.pgsout") AS pgsout max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans
max("PAGE_AIX.cycles") AS cycles max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
    </search>

    <row>
        <panel>

            <input type="link" token="page_linkinput">
                <label></label>
                <choice value="page_chart1">PAGE, Pages In / Pages Out (pgsin / pgsout, pgin / pgout)</choice>
                <choice value="page_chart2">PAGE, Fs In / Fs Out (sum of pgin/pgsin and pgout/pgsout per interval)</choice>
                <choice value="page_chart3">PAGE, Scan Free Ratio (Pages scans by reclaims per interval)</choice>
                <default>page_chart1</default>
                <change>
                    <condition value="page_chart1">
                        <set token="page_chart1">true</set>
                        <unset token="page_chart2"></unset>
                        <unset token="page_chart3"></unset>
                    </condition>
                    <condition value="page_chart2">
                        <set token="page_chart2">true</set>
                        <unset token="page_chart1"></unset>
                        <unset token="page_chart3"></unset>
                    </condition>
                    <condition value="page_chart3">
                        <set token="page_chart3">true</set>
                        <unset token="page_chart1"></unset>
                        <unset token="page_chart2"></unset>
                    </condition>
                </change>
            </input>
            
            <chart depends="$page_chart1$">
                <title></title>
                <search base="PAGE">
                    <query>fields _time,pgsin,pgsout,pgin,pgout</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Pages</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin max("PAGE_AIX.pgsout") AS pgsout max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans max("PAGE_AIX.cycles") AS cycles max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio from datamodel=NMON_Data_PAGE where (nodename = PAGE_AIX) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin max("PAGE_AIX.pgsout") AS pgsout max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans max("PAGE_AIX.cycles") AS cycles max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio</link>
                </drilldown>
            </chart>
            <chart depends="$page_chart2$">
                <title></title>
                <search base="PAGE">
                    <query>fields _time,fsin,fsout</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Pages</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin max("PAGE_AIX.pgsout") AS pgsout max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans max("PAGE_AIX.cycles") AS cycles max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio from datamodel=NMON_Data_PAGE where (nodename = PAGE_AIX) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin max("PAGE_AIX.pgsout") AS pgsout max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans max("PAGE_AIX.cycles") AS cycles max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio</link>
                </drilldown>
            </chart>
            <chart depends="$page_chart3$">
                <title></title>
                <search base="PAGE">
                    <query>fillnull value=0 | fields _time,scanfree_ratio</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Pages</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin max("PAGE_AIX.pgsout") AS pgsout max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans max("PAGE_AIX.cycles") AS cycles max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio from datamodel=NMON_Data_PAGE where (nodename = PAGE_AIX) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max("PAGE_AIX.faults") AS faults max("PAGE_AIX.pgin") AS pgin max("PAGE_AIX.pgout") AS pgout max("PAGE_AIX.pgsin") AS pgsin max("PAGE_AIX.pgsout") AS pgsout max("PAGE_AIX.reclaims") AS reclaims max("PAGE_AIX.scans") AS scans max("PAGE_AIX.cycles") AS cycles max("PAGE_AIX.fsin") AS fsin max("PAGE_AIX.fsout") AS fsout max("PAGE_AIX.scanfree_ratio") AS scanfree_ratio</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <row>
        <panel id="memory">
            <title>MEMORY Usage Statistics</title>
        </panel>
    </row>

    <search id="MEM">
        <query>| tstats max("MEM.allOS_Real_total_MB") AS Real_total_MB max("MEM.allOS_Real_used_MB") AS Real_used_MB
max("MEM.allOS_Virtual_total_MB") AS Virtual_total_MB max("MEM.allOS_Virtual_used_MB") AS Virtual_used_MB
from datamodel=NMON_Data_MEM where (nodename = MEM) ($host$) groupby _time, "MEM.frameID", host prestats=true $span$
| timechart dedup_splitvals=t $span$ max("MEM.allOS_Real_total_MB") AS Real_total_MB max("MEM.allOS_Real_used_MB") AS Real_used_MB
max("MEM.allOS_Virtual_total_MB") AS Virtual_total_MB max("MEM.allOS_Virtual_used_MB") AS Virtual_used_MB</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
    </search>

    <search id="MEMNEW">
        <query>| tstats
max("MEMNEW.Free_PCT") AS Free_PCT max("MEMNEW.FScache_PCT") AS FScache_PCT max("MEMNEW.memused_PCT") AS memused_PCT
max("MEMNEW.Process_PCT") AS Process_PCT max("MEMNEW.System_PCT") AS System_PCT from datamodel=NMON_Data_MEMNEW
where (nodename = MEMNEW) ($host$) groupby _time, host prestats=true $span$
| timechart $span$
max("MEMNEW.Free_PCT") AS Free_PCT max("MEMNEW.FScache_PCT") AS FScache_PCT max("MEMNEW.memused_PCT") AS memused_PCT
max("MEMNEW.Process_PCT") AS Process_PCT max("MEMNEW.System_PCT") AS System_PCT</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
    </search>

    <row>
        <panel>

            <input type="link" token="mem_linkinput">
                <label></label>
                <choice value="mem_chart1">MEM, Real Memory usage</choice>
                <choice value="mem_chart2">MEM, Paging Space usage</choice>
                <choice value="mem_chart3">MEMNEW, % Memory Allocation by category</choice>
                <choice value="mem_chart4">MEMNEW, % Memory Usage</choice>
                <choice value="mem_chart5">MEMUSE, Vmtune Statistics</choice>
                <default>mem_chart1</default>
                <change>
                    <condition value="mem_chart1">
                        <set token="mem_chart1">true</set>
                        <unset token="mem_chart2"></unset>
                        <unset token="mem_chart3"></unset>
                        <unset token="mem_chart4"></unset>
                        <unset token="mem_chart5"></unset>
                    </condition>
                    <condition value="mem_chart2">
                        <set token="mem_chart2">true</set>
                        <unset token="mem_chart1"></unset>
                        <unset token="mem_chart3"></unset>
                        <unset token="mem_chart4"></unset>
                        <unset token="mem_chart5"></unset>
                    </condition>
                    <condition value="mem_chart3">
                        <set token="mem_chart3">true</set>
                        <unset token="mem_chart1"></unset>
                        <unset token="mem_chart2"></unset>
                        <unset token="mem_chart4"></unset>
                        <unset token="mem_chart5"></unset>
                    </condition>
                    <condition value="mem_chart4">
                        <set token="mem_chart4">true</set>
                        <unset token="mem_chart1"></unset>
                        <unset token="mem_chart2"></unset>
                        <unset token="mem_chart3"></unset>
                        <unset token="mem_chart5"></unset>
                    </condition>
                    <condition value="mem_chart5">
                        <set token="mem_chart5">true</set>
                        <unset token="mem_chart1"></unset>
                        <unset token="mem_chart2"></unset>
                        <unset token="mem_chart3"></unset>
                        <unset token="mem_chart4"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$mem_chart1$">
                <title></title>
                <search base="MEM">
                    <query>fields _time,Real_total_MB,Real_used_MB</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Megabytes (MB)</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("MEM.allOS_Real_total_MB") AS Real_total_MB max("MEM.allOS_Real_used_MB") AS Real_used_MB from datamodel=NMON_Data_MEM where (nodename = MEM) ($host$) groupby _time, "MEM.frameID", host prestats=true span=1m
| timechart dedup_splitvals=t timechart span=1m max("MEM.allOS_Real_total_MB") AS Real_total_MB max("MEM.allOS_Real_used_MB") AS Real_used_MB</link>
                </drilldown>
            </chart>

            <chart depends="$mem_chart2$">
                <title></title>
                <search base="MEM">
                    <query>fields _time,Virtual_total_MB,Virtual_used_MB</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Megabytes (MB)</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("MEM.allOS_Virtual_total_MB") AS Virtual_total_MB max("MEM.allOS_Virtual_used_MB") AS Virtual_used_MB from datamodel=NMON_Data_MEM where (nodename = MEM) ($host$) groupby _time, "MEM.frameID", host prestats=true span=1m
| timechart dedup_splitvals=t timechart span=1m max("MEM.allOS_Virtual_total_MB") AS Virtual_total_MB max("MEM.allOS_Virtual_used_MB") AS Virtual_used_MB</link>
                </drilldown>
            </chart>

            <chart depends="$mem_chart3$">
                <title></title>
                <search base="MEMNEW">
                    <query>fields _time,Free_PCT,FScache_PCT,Process_PCT,System_PCT</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Percentage (%)</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">100</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("MEMNEW.Free_PCT") AS Free_PCT max("MEMNEW.FScache_PCT") AS FScache_PCT max("MEMNEW.Process_PCT") AS Process_PCT max("MEMNEW.System_PCT") AS System_PCT from datamodel=NMON_Data_MEMNEW where (nodename = MEMNEW) ($host$) groupby _time, "MEMNEW.frameID", host prestats=true span=1m
| timechart span=1m max("MEMNEW.Free_PCT") AS Free_PCT max("MEMNEW.FScache_PCT") AS FScache_PCT max("MEMNEW.Process_PCT") AS Process_PCT max("MEMNEW.System_PCT") AS System_PCT</link>
                </drilldown>
            </chart>

            <chart depends="$mem_chart4$">
                <title></title>
                <search base="MEMNEW">
                    <query>fields _time,memused_PCT</query>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Percentage (%)</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">100</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("MEMNEW.Free_PCT") AS Free_PCT max("MEMNEW.FScache_PCT") AS FScache_PCT max("MEMNEW.memused_PCT") AS memused_PCT max("MEMNEW.Process_PCT") AS Process_PCT max("MEMNEW.System_PCT") AS System_PCT from datamodel=NMON_Data_MEMNEW where (nodename = MEMNEW) ($host$) groupby _time, "MEMNEW.frameID", host prestats=true span=1m
| timechart span=1m max("MEMNEW.Free_PCT") AS Free_PCT max("MEMNEW.FScache_PCT") AS FScache_PCT max("MEMNEW.memused_PCT") AS memused_PCT max("MEMNEW.Process_PCT") AS Process_PCT max("MEMNEW.System_PCT") AS System_PCT</link>
                </drilldown>
            </chart>

            <chart depends="$mem_chart5$">
                <title></title>
                <search>
                    <query>| tstats
max("AIX.PCTmaxclient") AS PCTmaxclient max("AIX.PCTmaxperm") AS PCTmaxperm
max("AIX.PCTminperm") AS PCTminperm max("AIX.PCTnumclient") AS PCTnumclient
max("AIX.PCTnumperm") AS PCTnumperm
from datamodel=NMON_Data_MEMUSE
where (nodename = AIX) ($host$) groupby _time, host prestats=true $span$
| timechart $span$
max("AIX.PCTmaxclient") AS PCTmaxclient max("AIX.PCTmaxperm") AS PCTmaxperm
max("AIX.PCTminperm") AS PCTminperm max("AIX.PCTnumclient") AS PCTnumclient
max("AIX.PCTnumperm") AS PCTnumperm</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Percentage (%)</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("AIX.PCTmaxclient") AS PCTmaxclient max("AIX.PCTmaxperm") AS PCTmaxperm max("AIX.PCTminperm") AS PCTminperm max("AIX.PCTnumclient") AS PCTnumclient max("AIX.PCTnumperm") AS PCTnumperm from datamodel=NMON_Data_MEMUSE where (nodename = AIX) ($host$) groupby _time, host prestats=true span=1m
| timechart span=1m max("AIX.PCTmaxclient") AS PCTmaxclient max("AIX.PCTmaxperm") AS PCTmaxperm max("AIX.PCTminperm") AS PCTminperm max("AIX.PCTnumclient") AS PCTnumclient max("AIX.PCTnumperm") AS PCTnumperm</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <row>
        <panel id="disk">
            <title>Disks performance statistics</title>
        </panel>
    </row>

    <row>
        <panel>

            <input type="link" token="disk_linkinput">
                <label></label>
                <choice value="disk_chart1">DISKBSIZE, Average data transfer size</choice>
                <choice value="disk_chart2">DISKBUSY, Disk Busy Activity</choice>
                <choice value="disk_chart3">DISKREAD, Disk Read Data Rate</choice>
                <choice value="disk_chart4">DISKWRITE, Disk Write Data Rate</choice>
                <choice value="disk_chart5">DISKXFER, Disk I/O Operations per second (IOPS)</choice>
                <choice value="disk_chart6">DISKRIO/WIO, Disk Read/Write I/O Operations per second (IOPS)</choice>
                <default>disk_chart1</default>
                <change>
                    <condition value="disk_chart1">
                        <set token="disk_chart1">true</set>
                        <unset token="disk_chart2"></unset>
                        <unset token="disk_chart3"></unset>
                        <unset token="disk_chart4"></unset>
                        <unset token="disk_chart5"></unset>
                        <unset token="disk_chart6"></unset>
                    </condition>
                    <condition value="disk_chart2">
                        <set token="disk_chart2">true</set>
                        <unset token="disk_chart1"></unset>
                        <unset token="disk_chart3"></unset>
                        <unset token="disk_chart4"></unset>
                        <unset token="disk_chart5"></unset>
                        <unset token="disk_chart6"></unset>
                    </condition>
                    <condition value="disk_chart3">
                        <set token="disk_chart3">true</set>
                        <unset token="disk_chart1"></unset>
                        <unset token="disk_chart2"></unset>
                        <unset token="disk_chart4"></unset>
                        <unset token="disk_chart5"></unset>
                        <unset token="disk_chart6"></unset>
                    </condition>
                    <condition value="disk_chart4">
                        <set token="disk_chart4">true</set>
                        <unset token="disk_chart1"></unset>
                        <unset token="disk_chart2"></unset>
                        <unset token="disk_chart3"></unset>
                        <unset token="disk_chart5"></unset>
                        <unset token="disk_chart6"></unset>
                    </condition>
                    <condition value="disk_chart5">
                        <set token="disk_chart5">true</set>
                        <unset token="disk_chart1"></unset>
                        <unset token="disk_chart2"></unset>
                        <unset token="disk_chart3"></unset>
                        <unset token="disk_chart4"></unset>
                        <unset token="disk_chart6"></unset>
                    </condition>
                    <condition value="disk_chart6">
                        <set token="disk_chart6">true</set>
                        <unset token="disk_chart1"></unset>
                        <unset token="disk_chart2"></unset>
                        <unset token="disk_chart3"></unset>
                        <unset token="disk_chart4"></unset>
                        <unset token="disk_chart5"></unset>
                    </condition>
                </change>
            </input>


            <chart depends="$disk_chart1$">
                <title></title>
                <search>
                    <query>| tstats max("DISKBSIZE.value") AS value from datamodel=NMON_Data_DISKBSIZE
where (nodename = DISKBSIZE) ($host$) groupby _time, host, "DISKBSIZE.device" prestats=true span=1m
| bucket _time span=1m
| stats dedup_splitvals=t max("DISKBSIZE.value") AS value by _time, host, "DISKBSIZE.device"
| rename DISKBSIZE.device AS device
| stats sum(value) As avg_transfer_size by _time,host
| timechart $span$ max(avg_transfer_size) AS avg_transfer_size</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">KBytes per Transfer</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("DISKBSIZE.value") AS value from datamodel=NMON_Data_DISKBSIZE where (nodename = DISKBSIZE) ($host$) groupby _time, host, "DISKBSIZE.device" prestats=true span=1m
| bucket _time span=1m
| stats dedup_splitvals=t max("DISKBSIZE.value") AS value by _time, host, "DISKBSIZE.device"
| rename DISKBSIZE.device AS device
| stats sum(value) As avg_transfer_size by _time,host
| timechart span=1m max(avg_transfer_size) AS avg_transfer_size</link>
                </drilldown>
            </chart>

            <chart depends="$disk_chart2$">
                <title></title>
                <search>
                    <query>| tstats max("DISKBUSY.value") AS value from datamodel=NMON_Data_DISKBUSY
where (nodename = DISKBUSY) ($host$) groupby _time, host, "DISKBUSY.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKBUSY.value") AS value by _time, host, "DISKBUSY.device"
| rename DISKBUSY.device AS device
| stats avg(value) As value by _time,host
| timechart $span$ max(value) AS avg_busy_disk</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">% of Time Busy</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("DISKBUSY.value") AS value from datamodel=NMON_Data_DISKBUSY where (nodename = DISKBUSY) ($host$) groupby _time, host, "DISKBUSY.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKBUSY.value") AS value by _time, host, "DISKBUSY.device"
| rename DISKBUSY.device AS device
| stats avg(value) As value by _time,host
| timechart span=1m max(value) AS avg_busy_disk</link>
                </drilldown>
            </chart>

            <chart depends="$disk_chart3$">
                <title></title>
                <search id="timechart_read">
                    <query>| tstats max("DISKREADWRITE.value") AS value from datamodel=NMON_Data_DISKREADWRITE
where (nodename = DISKREADWRITE) (DISKREADWRITE.type=DISKREAD) ($host$)
groupby _time, host, "DISKREADWRITE.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKREADWRITE.value") AS value by _time, host, "DISKREADWRITE.device"
| rename DISKREADWRITE.device AS device
| stats sum(value) As value by _time,host,device
| timechart $span$ max(value) AS disk_read</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">KBytes/Sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("DISKREADWRITE.value") AS value from datamodel=NMON_Data_DISKREADWRITE where (nodename = DISKREADWRITE) (DISKREADWRITE.type=DISKREAD) ($host$) groupby _time, host, "DISKREADWRITE.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKREADWRITE.value") AS value by _time, host, "DISKREADWRITE.device"
| rename DISKREADWRITE.device AS device
| stats sum(value) As value by _time,host,device
| timechart $span$ max(value) AS disk_read</link>
                </drilldown>
            </chart>

            <chart depends="$disk_chart4$">
                <title></title>
                <search id="timechart_write">
                    <query>| tstats max("DISKREADWRITE.value") AS value from datamodel=NMON_Data_DISKREADWRITE
where (nodename = DISKREADWRITE) (DISKREADWRITE.type=DISKWRITE) ($host$)
groupby _time, host, "DISKREADWRITE.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKREADWRITE.value") AS value by _time, host, "DISKREADWRITE.device"
| rename DISKREADWRITE.device AS device
| stats sum(value) As value by _time,host
| timechart $span$ max(value) AS disk_write</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>      <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">KBytes/Sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("DISKREADWRITE.value") AS value from datamodel=NMON_Data_DISKREADWRITE where (nodename = DISKREADWRITE) (DISKREADWRITE.type=DISKWRITE) ($host$) groupby _time, host, "DISKREADWRITE.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKREADWRITE.value") AS value by _time, host, "DISKREADWRITE.device"
| rename DISKREADWRITE.device AS device
| stats sum(value) As value by _time,host
| timechart span=1m max(value) AS disk_write</link>
                </drilldown>
            </chart>

            <chart depends="$disk_chart5$">
                <title></title>
                <search>
                    <query>| tstats max("DISKXFER.value") AS value from datamodel=NMON_Data_DISKXFER
where (nodename = DISKXFER) ($host$) groupby _time, host, "DISKXFER.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKXFER.value") AS value by _time, host, "DISKXFER.device"
| rename DISKXFER.device AS device
| stats sum(value) As value by _time
| timechart $span$ max(value) AS IOPS</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">I/O per Sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("DISKXFER.value") AS value from datamodel=NMON_Data_DISKXFER where (nodename = DISKXFER) ($host$) groupby _time, host, "DISKXFER.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKXFER.value") AS value by _time, host, "DISKXFER.device"
| rename DISKXFER.device AS device
| stats sum(value) As value by _time
| timechart span=1m max(value) AS IOPS</link>
                </drilldown>
            </chart>

            <chart depends="$disk_chart6$" rejects="$show_null_diskriowrio$">
                <title></title>
                <search id="tablestats_read">
                    <query>| tstats max("DISKRIOWRIO.value") AS value from datamodel=NMON_Data_DISKRIOWRIO
where (nodename = DISKRIOWRIO) (DISKRIOWRIO.type=DISKRIO) ($host$)
groupby _time, host, "DISKRIOWRIO.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKRIOWRIO.value") AS value by _time, host, "DISKRIOWRIO.device"
| stats sum(value) AS value by _time
| timechart $span$ max(value) AS read_IOPS
| appendcols
[
| tstats max("DISKRIOWRIO.value") AS value from datamodel=NMON_Data_DISKRIOWRIO
where (nodename = DISKRIOWRIO) (DISKRIOWRIO.type=DISKWIO) ($host$)
groupby _time, host, "DISKRIOWRIO.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKRIOWRIO.value") AS value by _time, host, "DISKRIOWRIO.device"
| stats sum(value) AS value by _time
| timechart $span$ max(value) AS write_IOPS ]</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_diskriowrio">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_diskriowrio"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">area</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">stacked</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">I/O per Sec</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("DISKRIOWRIO.value") AS value from datamodel=NMON_Data_DISKRIOWRIO where (nodename = DISKRIOWRIO) (DISKRIOWRIO.type=DISKRIO) ($host$) groupby _time, host, "DISKRIOWRIO.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKRIOWRIO.value") AS value by _time, host, "DISKRIOWRIO.device"
| stats sum(value) AS value by _time
| timechart span=1m max(value) AS read_IOPS
| appendcols
[
| tstats max("DISKRIOWRIO.value") AS value from datamodel=NMON_Data_DISKRIOWRIO where (nodename = DISKRIOWRIO) (DISKRIOWRIO.type=DISKWIO) ($host$) groupby _time, host, "DISKRIOWRIO.device" prestats=true span=1m
| stats dedup_splitvals=t max("DISKRIOWRIO.value") AS value by _time, host, "DISKRIOWRIO.device"
| stats sum(value) AS value by _time
| timechart span=1m max(value) AS write_IOPS ]</link>
                </drilldown>
            </chart>

            <html depends="$show_null_diskriowrio$ $disk_chart6$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, DISKRIO/DISKWIO data is not available for this server.</p>
            </html>

        </panel>
    </row>

    <row>
        <panel id="disk2">
            <title>File-systems utilization statistics</title>
        </panel>
    </row>

    <row>
        <panel>

            <input type="link" token="jfs_linkinput">
                <label></label>
                <choice value="jfs_chart1">Summary of file-systems utilization</choice>
                <choice value="jfs_chart2">File-systems utilization over time</choice>
                <choice value="jfs_chart3">File-systems inodes utilization over time</choice>
                <default>jfs_chart1</default>
                <change>
                    <condition value="jfs_chart1">
                        <set token="jfs_chart1">true</set>
                        <unset token="jfs_chart2"></unset>
                        <unset token="jfs_chart3"></unset>
                    </condition>
                    <condition value="jfs_chart2">
                        <set token="jfs_chart2">true</set>
                        <unset token="jfs_chart1"></unset>
                        <unset token="jfs_chart3"></unset>
                    </condition>
                    <condition value="jfs_chart3">
                        <set token="jfs_chart3">true</set>
                        <unset token="jfs_chart1"></unset>
                        <unset token="jfs_chart2"></unset>
                    </condition>
                </change>
            </input>

            <!--

            ### file systems SUMMARY ###

            file systems utilisation, either DF_STORAGE (default) or JFSFILE
            -->

            <!-- DF_STORAGE -->

            <table id="tablebar" depends="$start_df_storage_search$ $jfs_chart1$">
                <title>Data source: $storage_usage_datasource$</title>
                <search depends="$start_df_storage_search$">
                    <query>| tstats latest(JFS.storage) AS storage, latest(JFS.storage_free) AS storage_free, latest(JFS.storage_used) AS storage_used, latest(JFS.storage_free_percent) AS storage_free_percent, latest(JFS.storage_used_percent) AS storage_used_percent from datamodel=NMON_Data_JFS where (nodename = JFS.DF_STORAGE) ($host$) groupby JFS.mount prestats=true
| stats dedup_splitvals=t latest(JFS.storage) AS storage, latest(JFS.storage_free) AS storage_free, latest(JFS.storage_used) AS storage_used, latest(JFS.storage_free_percent) AS storage_free_percent, latest(JFS.storage_used_percent) AS storage_used_percent by JFS.mount
| sort limit=0 mount
| rename "JFS.mount" AS "mount"
| fields mount, storage, storage_free,storage_used,storage_free_percent,storage_used_percent
| foreach storage, storage_free,storage_used [ eval &lt;&lt;FIELD&gt;&gt; = round('&lt;&lt;FIELD&gt;&gt;'/1024, 2) ]
| foreach storage*percent [ eval &lt;&lt;FIELD&gt;&gt; = round('&lt;&lt;FIELD&gt;&gt;', 2) ]
| rename storage as "storage (GB)", storage_free as "storage free (GB)", storage_used as "storage used (GB)", storage_free_percent as "storage free (%)", storage_used_percent as "storage used (%)"
| eval UsedPct=if(isnum('storage used (%)'), 'storage used (%)', 0 )
| fields mount, "storage (GB)", "storage free (GB)", "storage used (GB)", "storage free (%)", "storage used (%)", UsedPct
| appendpipe [ stats sum("storage (GB)") as "storage (GB)", sum("storage free (GB)") as "storage free (GB)", sum("storage used (GB)") as "storage used (GB)" ]
| eval "storage free (%)" = if(isnull('storage free (%)'), (('storage free (GB)'/'storage (GB)')*100), 'storage free (%)'), "storage used (%)" = if(isnull('storage used (%)'), (('storage used (GB)'/'storage (GB)')*100), 'storage used (%)'), UsedPct = if(isnull(UsedPct), 'storage used (%)', UsedPct)
| fillnull value="*** TOTAL GB / AVERAGE % ****" mount
| foreach storage*%* UsedPct [ eval &lt;&lt;FIELD&gt;&gt; = round('&lt;&lt;FIELD&gt;&gt;', 2) ]</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <refresh>$refresh$</refresh>
                    <refreshType>delay</refreshType>
                </search>
                <option name="wrap">true</option>
                <option name="rowNumbers">false</option>
                <option name="dataOverlayMode">none</option>
                <option name="drilldown">row</option>
                <option name="count">10</option>
                <option name="refresh.display">none</option>
            </table>

            <!-- JFSFILE -->

            <table id="tablebar2" depends="$start_jfs_storage_search$ $jfs_chart1$">
                <title>Data source: $storage_usage_datasource$</title>
                <search depends="$start_jfs_storage_search$">
                    <query>| tstats max("JFS.value") AS JFS.value from datamodel=NMON_Data_JFS
where (nodename = JFS.JFSFILE) (JFS.value&gt;=0) ($host$) groupby _time, host, "JFS.device" prestats=true
| stats dedup_splitvals=t max("JFS.value") AS JFS.value by _time, "JFS.device"
| rename "JFS.device" AS device, "JFS.value" AS value
| stats max(value) AS max_value, avg(value) AS avg_value, min(value) AS min_value, latest(value) AS UsedPct by "device"
| sort limit=0 device | rename device AS "Mount point"
| eval value=round(value,2)
| fields "Mount point",max_value, avg_value, min_value, UsedPct | eval avg_value=round(avg_value,2)
| rename max_value AS "Max value in period (%)", avg_value AS "Average value in period (%)", min_value AS "Min value in Period (%)"</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <refresh>$refresh$</refresh>
                    <refreshType>delay</refreshType>
                </search>
                <option name="wrap">true</option>
                <option name="rowNumbers">false</option>
                <option name="dataOverlayMode">none</option>
                <option name="drilldown">row</option>
                <option name="count">10</option>
                <option name="refresh.display">none</option>
            </table>

            <!--

            ### file systems utilisation over time ###

            file systems utilisation, either DF_STORAGE (default) or JFSFILE
            -->

            <!-- DF_STORAGE -->

            <input type="text" token="df_storage_mount" depends="$start_df_storage_search$ $jfs_chart2$">
              <label>mount</label>
              <default>*</default>
            </input>

            <input type="dropdown" token="df_storage_monitor" depends="$start_df_storage_search$ $jfs_chart2$">
                <label>Monitor:</label>
                <choice value="storage">storage (volume size)</choice>
                <choice value="storage_free">storage_free (volume free)</choice>
                <choice value="storage_used">storage_used (volume used)</choice>
                <choice value="storage_free_percent">storage_free_percent (%)</choice>
                <choice value="storage_used_percent">storage_used_percent (%)</choice>
                <default>storage_used_percent</default>
                <change>
                    <condition value="storage">
                        <unset token="form.df_storage_monitor_unit"></unset>
                        <set token="df_storage_show_unit">true</set>
                        <unset token="df_storage_monitor_max_chart"></unset>
                    </condition>
                    <condition value="storage_free">
                        <unset token="form.df_storage_monitor_unit"></unset>
                        <set token="df_storage_show_unit">true</set>
                        <unset token="df_storage_monitor_max_chart"></unset>
                    </condition>
                    <condition value="storage_used">
                        <unset token="form.df_storage_monitor_unit"></unset>
                        <set token="df_storage_show_unit">true</set>
                        <unset token="df_storage_monitor_max_chart"></unset>
                    </condition>
                    <condition value="storage_free_percent">
                        <set token="df_storage_unit">%</set>
                        <unset token="df_storage_show_unit"></unset>
                        <set token="df_storage_monitor_max_chart">101</set>
                    </condition>
                    <condition value="storage_used_percent">
                        <set token="form.df_storage_monitor_unit">pct</set>
                        <set token="df_storage_monitor_max_chart">101</set>
                        <unset token="df_storage_show_unit"></unset>
                    </condition>
                </change>
            </input>

            <input type="dropdown" token="df_storage_monitor_unit" depends="$start_df_storage_search$ $df_storage_show_unit$ $jfs_chart2$">
                <label>Unit:</label>
                <choice value="MB">MB</choice>
                <choice value="GB">GB</choice>
                <choice value="TB">TB</choice>
                <default>GB</default>
                <change>
                    <condition value="MB">
                        <set token="df_storage_unit_math">value</set>
                        <set token="df_storage_unit_legend">MB</set>
                    </condition>
                    <condition value="GB">
                        <set token="df_storage_unit_math">value/1024</set>
                        <set token="df_storage_unit_legend">GB</set>
                    </condition>
                    <condition value="TB">
                        <set token="df_storage_unit_math">value/1024/1204</set>
                        <set token="df_storage_unit_legend">TB</set>
                    </condition>
                    <condition value="pct">
                        <set token="df_storage_unit_math">value</set>
                        <set token="df_storage_unit_legend">pct</set>
                    </condition>
                </change>
            </input>

            <chart depends="$start_df_storage_search$ $jfs_chart2$">
                <title>Data source: $storage_usage_datasource$</title>
                <search depends="$start_df_storage_search$ $jfs_chart2$">
                    <query>| tstats latest(JFS.$df_storage_monitor$) AS value from datamodel=NMON_Data_JFS where (nodename = JFS.DF_STORAGE) ($host$) (JFS.mount="$df_storage_mount$") groupby _time, JFS.mount prestats=true $span$
| stats dedup_splitvals=t latest(JFS.$df_storage_monitor$) AS value by _time, JFS.mount
| sort limit=0 _time
| rename "JFS.mount" AS "mount" | eval value=$df_storage_unit_math$
| timechart $span$ latest(value) as $df_storage_monitor$ by mount</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <refresh>$refresh$</refresh>
                    <refreshType>delay</refreshType>
                </search>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleX.visibility">collapsed</option>
                <option name="charting.axisTitleY.text">$df_storage_unit_legend$</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.axisY2.enabled">0</option>
                <option name="charting.axisY2.scale">inherit</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.showDataLabels">none</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">none</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">$df_storage_monitor_max_chart$</option>
            </chart>

            <!-- JFSFILE -->

            <input type="text" token="jfs_storage_mount" searchWhenChanged="true" depends="$start_jfs_storage_search$ $jfs_chart2$">
                <label>mount:</label>
                <default>*</default>
                <prefix>JFS.device="</prefix>
                <suffix>"</suffix>
            </input>

            <chart depends="$start_jfs_storage_search$ $jfs_chart2$">
                <title>Data source: $storage_usage_datasource$</title>
                <search depends="$start_jfs_storage_search$ $jfs_chart2$">
                    <query>| tstats max("JFS.value") AS JFS.value from datamodel=NMON_Data_JFS
where (nodename = JFS.JFSFILE) (JFS.value&gt;=0) ($host$) ($jfs_storage_mount$) groupby _time, host, "JFS.device" prestats=true span=1m
| stats dedup_splitvals=t max("JFS.value") AS JFS.value by _time, host, "JFS.device"
| rename "JFS.*" AS *
| timechart $span$ limit=0 useother=f max(value) As value by device</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <refresh>$refresh$</refresh>
                    <refreshType>delay</refreshType>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">connect</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">$charting.legend.placement$</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">% Used</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">100</option>
                <option name="refresh.display">none</option>
            </chart>

            <!--

            ### file systems inodes utilisation over time ###

            file systems inodes utilisation, either DF_INODES (default) or JFSINODE
            -->

            <!-- DF_INODES -->

            <input type="text" token="df_storage_mount" depends="$start_df_storage_search$ $jfs_chart3$">
              <label>mount</label>
              <default>*</default>
            </input>

            <input type="dropdown" token="chart_df_inodes_monitor" depends="$start_df_storage_search$ $jfs_chart3$">
                <label>Monitor:</label>
                <choice value="storage_used_inodes">storage_used_inodes</choice>
                <choice value="storage_free_inodes_percent">storage_free_inodes_percent (%)</choice>
                <choice value="storage_used_inodes_percent">storage_used_inodes_percent (%)</choice>
                <default>storage_used_inodes_percent</default>
                <change>
                    <condition value="storage_used_inodes">
                        <set token="chart_df_inodes_unit_legend">nb inodes</set>
                    </condition>
                    <condition value="storage_free_inodes_percent">
                        <set token="chart_df_inodes_unit_legend">pct</set>
                    </condition>
                    <condition value="storage_used_inodes_percent">
                        <set token="chart_df_inodes_unit_legend">pct</set>
                    </condition>
                </change>
            </input>

            <chart depends="$start_df_storage_search$ $jfs_chart3$">
                <title>Data source: $storage_inodes_usage_datasource$</title>
                <search depends="$start_df_storage_search$ $jfs_chart3$">
                    <query>| tstats latest(JFS.$chart_df_inodes_monitor$) AS value from datamodel=NMON_Data_JFS
where (nodename = JFS.DF_INODES) ($host$) (JFS.mount="$df_storage_mount$") groupby _time, host, JFS.mount prestats=true $span$
| stats dedup_splitvals=t latest(JFS.$chart_df_inodes_monitor$) AS value by _time, host, JFS.mount
| sort limit=0 _time
| rename "JFS.mount" AS "mount" | timechart $span$ latest(value) as $chart_df_inodes_monitor$ by mount</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <refresh>$refresh$</refresh>
                    <refreshType>delay</refreshType>
                </search>
                <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
                <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
                <option name="charting.axisTitleX.visibility">collapsed</option>
                <option name="charting.axisTitleY.text">$chart_df_inodes_unit_legend$</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisTitleY2.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.axisY2.enabled">0</option>
                <option name="charting.axisY2.scale">inherit</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.showDataLabels">none</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">none</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">$chart_df_inodes_monitor_max_chart$</option>
            </chart>

            <!-- JFSINODE -->

            <input type="text" token="jfs_storage_mount" searchWhenChanged="true" depends="$start_jfs_storage_search$ $jfs_chart3$">
                <label>mount:</label>
                <default>*</default>
                <prefix>JFS.device="</prefix>
                <suffix>"</suffix>
            </input>

            <chart depends="$start_jfs_storage_search$ $jfs_chart3$">
                <title>Data source: $storage_inodes_usage_datasource$</title>
                <search depends="$start_jfs_storage_search$ $jfs_chart3$">
                    <query>| tstats max("JFS.value") AS value from datamodel=NMON_Data_JFS
where (nodename = JFS.JFSINODE) ($host$) ($jfs_storage_mount$) groupby _time, "JFS.device" prestats=true $span$
| timechart $span$ limit=0 useother=f max("JFS.value") AS value by "JFS.device"</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Percentage (%)</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisY.maximumNumber">100</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("JFS.value") AS value from datamodel=NMON_Data_JFS where (nodename = JFS.JFSINODE) ($host$) groupby _time, "JFS.device" prestats=true span=1m
| timechart span=1m limit=0 useother=f max("JFS.value") AS value by "JFS.device"</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <row>
        <panel id="network">
            <title>NETWORK Usage Statistics</title>
        </panel>
    </row>

    <row>
        <panel>

            <input type="link" token="net_linkinput">
                <label></label>
                <choice value="net_chart1">NET - Inbound/Outbound traffic</choice>
                <choice value="net_chart2">NETPACKET - Inbound/Outbound packets</choice>
                <choice value="net_chart3">NETERROR - Inbound/Outbound error packets</choice>
                <default>net_chart1</default>
                <change>
                    <condition value="net_chart1">
                        <set token="net_chart1">true</set>
                        <unset token="net_chart2"></unset>
                        <unset token="net_chart3"></unset>
                    </condition>
                    <condition value="net_chart2">
                        <set token="net_chart2">true</set>
                        <unset token="net_chart1"></unset>
                        <unset token="net_chart3"></unset>
                    </condition>
                    <condition value="net_chart3">
                        <set token="net_chart3">true</set>
                        <unset token="net_chart1"></unset>
                        <unset token="net_chart2"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$net_chart1$">
                <title></title>
                <search>
                    <query>| tstats max("NET_Data_types.value") AS KBps from datamodel=NMON_Data_NET
where (nodename = NET_Data_types.NET) ($host$)
groupby _time, "NET_Data_types.device" prestats=true $span$
| timechart $span$ limit=0 useother=f max("NET_Data_types.value") AS KBps by "NET_Data_types.device"
| foreach *write* [ eval &lt;&lt;FIELD&gt;&gt; = "-" . '&lt;&lt;FIELD&gt;&gt;' ] | rename *read* as *inbound*, *write* as *outbound*</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Outbound KBps / Inbound KBps</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("NET_Data_types.value") AS KBps from datamodel=NMON_Data_NET where (nodename = NET_Data_types.NET) ($host$) groupby _time, "NET_Data_types.device" prestats=true span=1m
| timechart span=1m limit=0 useother=f max("NET_Data_types.value") AS KBps by "NET_Data_types.device" | foreach *write* [ eval &lt;&lt;FIELD&gt;&gt; = "-" . '&lt;&lt;FIELD&gt;&gt;' ] | rename *read* as *inbound*, *write* as *outbound*</link>
                </drilldown>
            </chart>

            <chart depends="$net_chart2$">
                <title></title>
                <search>
                    <query>| tstats max("NET_Data_types.value") AS value from datamodel=NMON_Data_NET
where (nodename = NET_Data_types.NETPACKET) ($host$) groupby _time, "NET_Data_types.device" prestats=true $span$
| timechart $span$ limit=0 useother=f max("NET_Data_types.value") AS value by "NET_Data_types.device" | foreach *write* [ eval &lt;&lt;FIELD&gt;&gt; = "-" . '&lt;&lt;FIELD&gt;&gt;' ] | rename *read* as *inbound*, *write* as *outbound*</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Outbound / Inbound packets</option>
                <drilldown target="search">
                    <link>search?earliest=$timerange.earliest$&amp;latest=$timerange.latest$&amp;q=| tstats max("NET_Data_types.value") AS value from datamodel=NMON_Data_NET where (nodename = NET_Data_types.NETPACKET) ($host$) groupby _time, "NET_Data_types.device" prestats=true span=1m
| timechart span=1m limit=0 useother=f max("NET_Data_types.value") AS value by "NET_Data_types.device" | foreach *write* [ eval &lt;&lt;FIELD&gt;&gt; = "-" . '&lt;&lt;FIELD&gt;&gt;' ] | rename *read* as *inbound*, *write* as *outbound*&amp;display.general.type=visualizations&amp;display.page.search.tab=visualizations&amp;display.visualizations.charting.chart=line</link>
                </drilldown>
            </chart>

            <chart depends="$net_chart3$">
                <title></title>
                <search>
                    <query>| tstats max("NET_Data_types.value") AS value from datamodel=NMON_Data_NET
where (nodename = NET_Data_types.NETERROR) ($host$) groupby _time, "NET_Data_types.device" prestats=true $span$
| timechart $span$ limit=0 useother=f max("NET_Data_types.value") AS value by "NET_Data_types.device" | foreach *write* [ eval &lt;&lt;FIELD&gt;&gt; = "-" . '&lt;&lt;FIELD&gt;&gt;' ] | rename *read* as *inbound*, *write* as *outbound*</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisTitleY.text">Number of Network Packets</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats max("NET_Data_types.value") AS value from datamodel=NMON_Data_NET where (nodename = NET_Data_types.NETERROR) ($host$) groupby _time, "NET_Data_types.device" prestats=true span=1m
| timechart span=1m max("NET_Data_types.value") AS value limit=0 useother=f by "NET_Data_types.device" | foreach *write* [ eval &lt;&lt;FIELD&gt;&gt; = "-" . '&lt;&lt;FIELD&gt;&gt;' ] | rename *read* as *inbound*, *write* as *outbound*</link>
                </drilldown>
            </chart>

        </panel>
    </row>

    <row>
        <panel>

            <input type="link" token="nfsserver_linkinput">
                <label></label>
                <choice value="nfsserverv4">NFS Server V4</choice>
                <choice value="nfsserverv3">NFS Server V3</choice>
                <choice value="nfsserverv2">NFS Server V2</choice>
                <default>nfsserverv4</default>
                <change>
                    <condition value="nfsserverv4">
                        <set token="show_nfsserverv4">true</set>
                        <unset token="show_nfsserverv2"></unset>
                        <unset token="show_nfsserverv3"></unset>
                    </condition>
                    <condition value="nfsserverv3">
                        <set token="show_nfsserverv3">true</set>
                        <unset token="show_nfsserverv2"></unset>
                        <unset token="show_nfsserverv4"></unset>
                    </condition>
                    <condition value="nfsserverv2">
                        <set token="show_nfsserverv2">true</set>
                        <unset token="show_nfsserverv3"></unset>
                        <unset token="show_nfsserverv4"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$show_nfsserverv4$" rejects="$show_null_nfsserverv4$">
                <title>NFS Server V4</title>
                <search>
                    <query>| tstats `NFSSVRV4(max)` from datamodel=NMON_Data_NFS
where (nodename = NFS.NFS_SERVER.NFS_V4) ($host$) groupby _time prestats=true $span$
| stats dedup_splitvals=t `NFSSVRV4(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 $span$ max(value) AS value by monitor</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_nfsserverv4">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_nfsserverv4"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Nbr of Operations</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `NFSSVRV4(max)` from datamodel=NMON_Data_NFS where (nodename = NFS.NFS_SERVER.NFS_V4) ($host$) groupby _time prestats=true span=1m
| stats dedup_splitvals=t `NFSSVRV4(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 span=1m max(value) AS value by monitor</link>
                </drilldown>
            </chart>

            <chart depends="$show_nfsserverv3$" rejects="$show_null_nfsserverv3$">
                <title>NFS Server V3</title>
                <search>
                    <query>| tstats `NFSSVRV3(max)` from datamodel=NMON_Data_NFS
where (nodename = NFS.NFS_SERVER.NFS_V3) ($host$) groupby _time prestats=true $span$
| stats dedup_splitvals=t `NFSSVRV3(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 $span$ max(value) AS value by monitor</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_nfsserverv3">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_nfsserverv3"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Nbr of Operations</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `NFSSVRV3(max)` from datamodel=NMON_Data_NFS where (nodename = NFS.NFS_SERVER.NFS_V3) ($host$) groupby _time prestats=true span=1m
| stats dedup_splitvals=t `NFSSVRV3(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 span=1m max(value) AS value by monitor</link>
                </drilldown>
            </chart>

            <chart depends="$show_nfsserverv2$" rejects="$show_null_nfsserverv2$">
                <title>NFS Server V2</title>
                <search>
                    <query>| tstats `NFSSVRV2(max)` from datamodel=NMON_Data_NFS
where (nodename = NFS.NFS_SERVER.NFS_V2) ($host$) groupby _time prestats=true $span$
| stats dedup_splitvals=t `NFSSVRV2(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 $span$ max(value) AS value by monitor</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_nfsserverv2">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_nfsserverv2"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Nbr of Operations</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `NFSSVRV2(max)` from datamodel=NMON_Data_NFS where (nodename = NFS.NFS_SERVER.NFS_V2) ($host$) groupby _time prestats=true span=1m
| stats dedup_splitvals=t `NFSSVRV2(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 span=1m max(value) AS value by monitor</link>
                </drilldown>
            </chart>

            <html depends="$show_null_nfsserverv4$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, NFS collection is not activated or the server is not running any V4 NFS server.</p>
            </html>

            <html depends="$show_null_nfsserverv3$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, NFS collection is not activated or the server is not running any V3 NFS server.</p>
            </html>

            <html depends="$show_null_nfsserverv2$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, NFS collection is not activated or the server is not running any V2 NFS server.</p>
            </html>

        </panel>
    </row>

    <row>
        <panel>

            <input type="link" token="nfsclient_linkinput">
                <label></label>
                <choice value="nfsclientv4">NFS Client V4</choice>
                <choice value="nfsclientv3">NFS Client V3</choice>
                <choice value="nfsclientv2">NFS Client V2</choice>
                <default>nfsclientv4</default>
                <change>
                    <condition value="nfsclientv4">
                        <set token="show_nfsclientv4">true</set>
                        <unset token="show_nfsclientv2"></unset>
                        <unset token="show_nfsclientv3"></unset>
                    </condition>
                    <condition value="nfsclientv3">
                        <set token="show_nfsclientv3">true</set>
                        <unset token="show_nfsclientv2"></unset>
                        <unset token="show_nfsclientv4"></unset>
                    </condition>
                    <condition value="nfsclientv2">
                        <set token="show_nfsclientv2">true</set>
                        <unset token="show_nfsclientv3"></unset>
                        <unset token="show_nfsclientv4"></unset>
                    </condition>
                </change>
            </input>

            <chart depends="$show_nfsclientv4$" rejects="$show_null_nfsclientv4$">
                <title>NFS Client V4</title>
                <search>
                    <query>| tstats `NFSCLIV4(max)` from datamodel=NMON_Data_NFS
where (nodename = NFS.NFS_CLIENT.NFSCLIV4) ($host$) groupby _time prestats=true $span$
| stats dedup_splitvals=t `NFSCLIV4(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 $span$ max(value) AS value by monitor</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_nfsclientv4">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_nfsclientv4"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Nbr of Operations</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `NFSCLIV4(max)` from datamodel=NMON_Data_NFS where (nodename = NFS.NFS_CLIENT.NFSCLIV4) ($host$) groupby _time prestats=true span=1m
| stats dedup_splitvals=t `NFSCLIV4(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 span=1m max(value) AS value by monitor</link>
                </drilldown>
            </chart>

            <chart depends="$show_nfsclientv3$" rejects="$show_null_nfsclientv3$">
                <title>NFS Client V3</title>
                <search>
                    <query>| tstats `NFSCLIV3(max)` from datamodel=NMON_Data_NFS
where (nodename = NFS.NFS_CLIENT.NFSCLIV3) ($host$) groupby _time prestats=true $span$
| stats dedup_splitvals=t `NFSCLIV3(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 $span$ max(value) AS value by monitor</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_nfsclientv3">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_nfsclientv3"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Nbr of Operations</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `NFSCLIV3(max)` from datamodel=NMON_Data_NFS where (nodename = NFS.NFS_CLIENT.NFSCLIV3) ($host$) groupby _time prestats=true span=1m
| stats dedup_splitvals=t `NFSCLIV3(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 span=1m max(value) AS value by monitor</link>
                </drilldown>
            </chart>

            <chart depends="$show_nfsclientv2$" rejects="$show_null_nfsclientv2$">
                <title>NFS Client V2</title>
                <search>
                    <query>| tstats `NFSCLIV2(max)` from datamodel=NMON_Data_NFS
where (nodename = NFS.NFS_CLIENT.NFSCLIV2) ($host$) groupby _time prestats=true $span$
| stats dedup_splitvals=t `NFSCLIV2(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 $span$ max(value) AS value by monitor</query>
                    <earliest>$timerange.earliest$</earliest>
                    <latest>$timerange.latest$</latest>
                    <!-- Progress event has access to job properties only -->
                    <progress>
                        <condition match="'job.resultCount' == 0">
                            <set token="show_null_nfsclientv2">True</set>
                        </condition>
                        <condition>
                            <unset token="show_null_nfsclientv2"/>
                        </condition>
                    </progress>
                </search>
                <option name="charting.axisTitleX.visibility">visible</option>
                <option name="charting.axisTitleY.visibility">visible</option>
                <option name="charting.axisX.scale">linear</option>
                <option name="charting.axisY.scale">linear</option>
                <option name="charting.chart">line</option>
                <option name="charting.chart.nullValueMode">gaps</option>
                <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
                <option name="charting.chart.stackMode">default</option>
                <option name="charting.chart.style">shiny</option>
                <option name="charting.drilldown">all</option>
                <option name="charting.layout.splitSeries">0</option>
                <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
                <option name="charting.legend.placement">bottom</option>
                <option name="height">680</option>
                <option name="charting.axisTitleX.text">Time</option>
                <option name="charting.axisY.minimumNumber">0</option>
                <option name="charting.axisTitleY.text">Nbr of Operations</option>
                <drilldown target="search">
                    <link>search?earliest=$earliest$&amp;latest=$latest$&amp;q=| tstats `NFSCLIV2(max)` from datamodel=NMON_Data_NFS where (nodename = NFS.NFS_CLIENT.NFSCLIV2) ($host$) groupby _time prestats=true span=1m
| stats dedup_splitvals=t `NFSCLIV2(max)` by _time
| sort limit=0 _time
| rename max(*) As * | rename NFS.* AS * | untable _time monitor value | stats sum(*) AS * by _time,monitor | where value>0
| timechart useother=f limit=0 span=1m max(value) AS value by monitor</link>
                </drilldown>
            </chart>

            <html depends="$show_null_nfsclientv4$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, NFS collection is not activated or the server is not running any V4 NFS client.</p>
            </html>

            <html depends="$show_null_nfsclientv3$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, NFS collection is not activated or the server is not running any V3 NFS client.</p>
            </html>

            <html depends="$show_null_nfsclientv2$">
                <p style="color:blue;margin-left:30px;font-size:14px">Search returned no results, NFS collection is not activated or the server is not running any V2 NFS client.</p>
            </html>

        </panel>
    </row>

</form>