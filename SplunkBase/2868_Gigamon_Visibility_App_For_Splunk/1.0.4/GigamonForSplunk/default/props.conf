[gigamon:api:service:license]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
FIELDALIAS-hostmac = licensingSummary.targetFmId AS hostMac
FIELDALIAS-mac = licensingSummary.targetFmId AS mac
FIELDALIAS-licNodes = licensingSummary.baseBundle.nodes as licensedVms
FIELDALIAS-host = host AS src_host
REPORT-0api_error = api_error_message,url_error_message
EVAL-service = "license"

[gigamon:api:service:domain]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp	
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
REPORT-0api_error = api_error_message,url_error_message
EVAL-service = "domain"

[gigamon:api:service:node]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
FIELDALIAS-clusterId = clusterId AS src_ip
FIELDALIAS-healthState = members{}.healthState AS status
FIELDALIAS-model = members{}.model AS vendor_product
FIELDALIAS-swVersion = members{}.swVersion AS version
FIELDALIAS-hostname = members{}.hostname AS dest_host
FIELDALIAS-dnsName = members{}.dnsName AS dns
REPORT-0api_error = api_error_message,url_error_message
EVAL-service = "node"

[gigamon:api:service:stats]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
FIELDALIAS-clusterId = clusterId AS src_ip
FIELDALIAS-deviceIp = deviceIp AS src_ip
REPORT-0api_error = api_error_message,url_error_message
#REPORT-1api_error = api_error_message_details
#EXRACT-api_detail_error = (?<error_code>\d+)(?<error_type>[^:]+):\sreason=\"(?<reason>[^\"]+).+additional_info=\"(?<additional_info>[^\"]+)
EVAL-service = "stats"

[syslog]
REPORT-logbase = giga_log_level,giga_commands,giga_users,giga_src_ips,giga_skip_event,giga_receive_event,giga_link_state,giga_received_message,giga_send_external,giga_backlog_start,giga_backlog_finish

[gigamon:api:service:event]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
REPORT-0api_error = api_error_message,url_error_message
EXTRACT-source = \"source\":\s\"(?<event_source>[^\"]+)
EVAL-service = "event"

[gigamon:api:service:audit]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
FIELDALIAS-operation = operation AS action
FIELDALIAS-outcome = outcome AS result
FIELDALIAS-username = username AS user
REPORT-0api_error = api_error_message,url_error_message
EVAL-service = "audit"

[gigamon:api:service:users]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
FIELDALIAS-username = httpUsername AS user
FIELDALIAS-deviceAddress = deviceAddress AS src
REPORT-0api_error = api_error_message,url_error_message
EVAL-service = "users"

[gigamon:api:service:port]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
FIELDALIAS-adminStatus = adminStatus AS status
FIELDALIAS-clusterId = clusterId AS src_ip
FIELDALIAS-deviceIp = deviceIp AS src_ip
FIELDALIAS-hwRevision = hwRevision AS version
FIELDALIAS-hwType = hwType AS vendor_product
FIELDALIAS-serialNumber = serialNumber AS serial
REPORT-0api_error = api_error_message,url_error_message
EVAL-service = "port"

[gigamon:api:service:maps]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
FIELDALIAS-clusterId = clusterId AS src_ip
FIELDALIAS-deviceIp = deviceIp AS src_ip
FIELDALIAS-dstPorts = dstPorts{} AS dest_port
FIELDALIAS-srcPorts = srcPorts{} AS src_port
REPORT-0api_error = api_error_message,url_error_message
EVAL-service = "maps"

[GigamonForSplunk:error]
EVAL-service = "error"
FIELDALIAS-err_msg = errors{}.msg AS error_message
REPORT-0api_error = api_error_message,url_error_message
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50

[gigamon:api:service:traffic]
INDEXED_EXTRACTIONS = json
TRUNCATE = 1000000
SHOULD_LINEMERGE = true
TIME_PREFIX = timestamp
MAX_TIMESTAMP_LOOKAHEAD = 50
FIELDALIAS-err_msg = errors{}.msg AS error_message
EVAL-service = "traffic"
FIELDALIAS-src_ip = scope.endpoint1 AS src_ip
FIELDALIAS-src_host = scope.endpoint1Resolved AS src
FIELDALIAS-dst_ip = scope.endpoint2 AS dest_ip
FIELDALIAS-dst_host = scope.endpoint2Resolved AS dest
FIELDALIAS-bytesin = counts.octetsIn AS bytes_in
FIELDALIAS-bytesout = counts.octetsOut AS bytes_out
FIELDALIAS-packetsin = counts.packetsIn AS packets_in
FIELDALIAS-packetsout = counts.packetsOut AS packets_out
FIELDALIAS-protocolnum = scope.protocol AS protocol_number
FIELDALIAS-protocol = scope.protocolName AS protocol
FIELDALIAS-port = scope.port AS src_port
FIELDALIAS-endpoint = scope.endpoint AS src_ip
FIELDALIAS-endpointR = scope.endpointResolved AS src
FIELDALIAS-packets = counts.packets AS packets
FIELDALIAS-bytes = counts.octets AS bytes
EVAL-bytes = coalesce(bytes,bytes_in + bytes_out)
EVAL-packets = coalesce(packets, packets_in + packets_out)
EVAL-megabytes = round(bytes/1024,2)
