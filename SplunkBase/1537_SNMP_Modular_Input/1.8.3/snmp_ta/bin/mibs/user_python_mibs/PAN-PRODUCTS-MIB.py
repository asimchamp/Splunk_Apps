#
# PySNMP MIB module PAN-PRODUCTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/damien/BaboonBones/splunk_installs/splunk/etc/apps/snmp_ta/bin/mibs/user_plaintext_mibs/PAN-PRODUCTS-MIB.txt
# Produced by pysmi-0.3.4 at Sat Feb  6 07:01:47 2021
# On host Damiens-MacBook-Pro.local platform Darwin version 18.2.0 by user damien
# Using Python version 3.7.8 (default, Nov 24 2020, 12:36:40) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
panProductsMibs, panModules = mibBuilder.importSymbols("PAN-GLOBAL-REG", "panProductsMibs", "panModules")
TcChassisType, = mibBuilder.importSymbols("PAN-GLOBAL-TC", "TcChassisType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Unsigned32, MibIdentifier, Integer32, TimeTicks, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, ObjectIdentity, ModuleIdentity, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "MibIdentifier", "Integer32", "TimeTicks", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "ObjectIdentity", "ModuleIdentity", "Counter64", "Gauge32")
DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
panProductsMibsModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 25461, 1, 1, 4))
panProductsMibsModule.setRevisions(('2013-04-15 16:50', '2011-02-09 16:10',))
if mibBuilder.loadTexts: panProductsMibsModule.setLastUpdated('201304151650Z')
if mibBuilder.loadTexts: panProductsMibsModule.setOrganization('Palo Alto Networks')
panPA_4050 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 1)).setLabel("panPA-4050")
if mibBuilder.loadTexts: panPA_4050.setStatus('current')
panPA_4020 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 2)).setLabel("panPA-4020")
if mibBuilder.loadTexts: panPA_4020.setStatus('current')
panPA_2050 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 3)).setLabel("panPA-2050")
if mibBuilder.loadTexts: panPA_2050.setStatus('current')
panPA_2020 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 4)).setLabel("panPA-2020")
if mibBuilder.loadTexts: panPA_2020.setStatus('current')
panPA_4060 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 5)).setLabel("panPA-4060")
if mibBuilder.loadTexts: panPA_4060.setStatus('current')
panPA_500 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 6)).setLabel("panPA-500")
if mibBuilder.loadTexts: panPA_500.setStatus('current')
panPanorama = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 7))
if mibBuilder.loadTexts: panPanorama.setStatus('current')
panPA_5060 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 8)).setLabel("panPA-5060")
if mibBuilder.loadTexts: panPA_5060.setStatus('current')
panPA_5050 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 9)).setLabel("panPA-5050")
if mibBuilder.loadTexts: panPA_5050.setStatus('current')
panPA_5020 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 11)).setLabel("panPA-5020")
if mibBuilder.loadTexts: panPA_5020.setStatus('current')
panPA_200 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 12)).setLabel("panPA-200")
if mibBuilder.loadTexts: panPA_200.setStatus('current')
panPA_3050 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 17)).setLabel("panPA-3050")
if mibBuilder.loadTexts: panPA_3050.setStatus('current')
panPA_3020 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 18)).setLabel("panPA-3020")
if mibBuilder.loadTexts: panPA_3020.setStatus('current')
panPA_VM = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 29)).setLabel("panPA-VM")
if mibBuilder.loadTexts: panPA_VM.setStatus('current')
panM_100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 30)).setLabel("panM-100")
if mibBuilder.loadTexts: panM_100.setStatus('current')
panPA_7050 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 31)).setLabel("panPA-7050")
if mibBuilder.loadTexts: panPA_7050.setStatus('current')
panGP_100 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 32)).setLabel("panGP-100")
if mibBuilder.loadTexts: panGP_100.setStatus('current')
panWF_500 = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 33)).setLabel("panWF-500")
if mibBuilder.loadTexts: panWF_500.setStatus('current')
panProcessingCards = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 100))
if mibBuilder.loadTexts: panProcessingCards.setStatus('current')
panFans = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 101))
if mibBuilder.loadTexts: panFans.setStatus('current')
panPowerSupplies = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 102))
if mibBuilder.loadTexts: panPowerSupplies.setStatus('current')
panPA_7000_SMC = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 100, 1)).setLabel("panPA-7000-SMC")
if mibBuilder.loadTexts: panPA_7000_SMC.setStatus('current')
panPA_7000_LPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 100, 2)).setLabel("panPA-7000-LPC")
if mibBuilder.loadTexts: panPA_7000_LPC.setStatus('current')
panPA_7000_20G_NPC = ObjectIdentity((1, 3, 6, 1, 4, 1, 25461, 2, 3, 100, 3)).setLabel("panPA-7000-20G-NPC")
if mibBuilder.loadTexts: panPA_7000_20G_NPC.setStatus('current')
mibBuilder.exportSymbols("PAN-PRODUCTS-MIB", panPA_5050=panPA_5050, panPA_5060=panPA_5060, panPA_5020=panPA_5020, panPA_4060=panPA_4060, panPA_3050=panPA_3050, panPA_200=panPA_200, panM_100=panM_100, panPA_7000_20G_NPC=panPA_7000_20G_NPC, panPA_4020=panPA_4020, panPA_4050=panPA_4050, panProductsMibsModule=panProductsMibsModule, panPowerSupplies=panPowerSupplies, panPA_7050=panPA_7050, panPA_7000_SMC=panPA_7000_SMC, panPanorama=panPanorama, panPA_3020=panPA_3020, PYSNMP_MODULE_ID=panProductsMibsModule, panProcessingCards=panProcessingCards, panPA_2050=panPA_2050, panPA_2020=panPA_2020, panWF_500=panWF_500, panGP_100=panGP_100, panPA_VM=panPA_VM, panPA_7000_LPC=panPA_7000_LPC, panFans=panFans, panPA_500=panPA_500)
