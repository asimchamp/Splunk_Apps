[quantify-command]
syntax = quantify (max=<int> | maxfield=<field>)+ (min=<int> | minfield=<field>)+ [overlap=high|low] [label=high|low|mid|range] bins=<int> field=<field>
shortdesc = Sets a field called 'range' to the name of the categories that match the value of 'field'.  Categories are dynamically calculated.  Values outside the category ranges will be classified as OTHER.
description = This command is a reworking of 'rangemap', allowing categories to be dynamically created based on the data.
example1 = index=_internal | head 100 | streamstats count AS c | quantify label=low max=50 min=1 bins=2 field=c | stats count by range
comment1 = This will create two dynamic categories (1-25 [labeled '1'] , 26-50 [labeled '26']).  Events whose c value are outside this range will be quantified as OTHER.
example2 = index=_internal | head 100 | streamstats count AS c | eventstats max(c) AS max_c min(c) AS min_c | quantify overlap=low label=range minfield=min_c maxfield=max_c bins=4 field=c | stats count by range
comment2 = This will split the data into four overlapping categories, each category representing an equal division based on the ceiling provided by the 'total' field.  This search creates (1-25, 1-50, 1-75, 1-100)
example3 = index=_internal | head 100 | streamstats count AS c | eventstats max(c) AS max_c min(c) AS min_c | quantify label=range maxfield=max_c bins=4 field=c | stats count by range
comment3 = This will split the data into four categories, each category representing an equal division based on the ceiling provided by the 'total' field.  This search creates (0-24, 25-49, 50-74, 75-100)
usage = public
maintainer = ron naken
appears-in = 4.0
tags = colors stoplight range stats categorize category
category = fields::add
related = rangemap
