[save_gapps_activity]
definition = eventtype=googleapps sourcetype="gapps:report:activity"  |eval domain = substr(source,7)| inputlookup gapps_activity append=T|eval datetime = substr(date,5,2) . "/".substr(date,7,2)."/".substr(date,0,4)."T00:00:00Z"|convert mktime(datetime) as datetime timeformat="%m/%d/%YT%H:%M:%SZ"|dedup date domain|eval datetime=_time|stats values(count*) as count* values(accounts) as accounts by datetime date domain|fields - source sourcetype splunk_server timestamp index host linecount punct|rename datetime as _time|outputlookup gapps_activity

[save_gapps_summary]
definition = eventtype=googleapps sourcetype="gapps:report:summary"|eval domain=substr(source,7)|eval percent_used = usage_in_bytes / (quota_in_mb * 1024 * 1024) * 100|inputlookup gapps_summary append=T|eval datetime = substr(date,5,2) . "/".substr(date,7,2)."/".substr(date,0,4)."T00:00:00Z"|convert mktime(datetime) as datetime timeformat="%m/%d/%YT%H:%M:%SZ"|dedup date domain|eval datetime=_time|stats values(num_accounts) as num_accounts values(percent_used) as percent_used values(usage_in_bytes) as usage_in_bytes values(quota_in_mb) as quota_in_mb by datetime date domain|fields - source host sourcetype splunk_server timestamp index linecount punct|rename datetime as _time|outputlookup gapps_summary

[save_gapps_disk_space]
definition = eventtype=googleapps sourcetype="gapps:report:disk_space"|eval domain=substr(source,7)|eval percent_used = usage_in_bytes / (quota_in_mb * 1024 * 1024) * 100|eval avg_percent_used = avg_usage_in_mb / (avg_quota_in_mb) * 100|eval datetime = substr(date,5,2) . "/".substr(date,7,2)."/".substr(date,0,4)."T00:00:00Z"|convert mktime(datetime) as datetime timeformat="%m/%d/%YT%H:%M:%SZ"|inputlookup gapps_disk_space append=T|dedup date domain|eval datetime=_time|stats values(*) as * by datetime date domain|fields -  source sourcetype splunk_server timestamp index host linecount punct|rename datetime as _time|outputlookup gapps_disk_space

[save_gapps_email_clients]
definition = eventtype=googleapps sourcetype="gapps:report:email_clients"|eval domain=substr(source,7)|inputlookup gapps_email_clients append=T|eval datetime = substr(date,5,2) . "/".substr(date,7,2)."/".substr(date,0,4)."T00:00:00Z"|convert mktime(datetime) as datetime timeformat="%m/%d/%YT%H:%M:%SZ"|dedup date domain|eval datetime=_time|stats values(*) as * by datetime date domain|fields - source sourcetype splunk_server timestamp index linecount host punct|rename datetime as _time|outputlookup gapps_email_clients

[save_gapps_accounts]
definition = eventtype=googleapps sourcetype="gapps:report:accounts"|eval domain=substr(source,7)|inputlookup gapps_accounts append=T|eval datetime = substr(date,5,2) . "/".substr(date,7,2)."/".substr(date,0,4)."T00:00:00Z"|convert mktime(datetime) as datetime timeformat="%m/%d/%YT%H:%M:%SZ"|dedup account_id|stats values(*) as * by account_id|fields - datetime source sourcetype splunk_server timestamp index linecount host punct|outputlookup gapps_accounts

[load_gapps(3)]
args = input, domain, append
definition = inputlookup gapps_$input$ append=$append$|search domain="$domain$" AND NOT status="status"

[gapps_save_domains]
definition = metasearch source=gapps:* index=* | rex field=source "gapps:(?<domain>.*)" | inputlookup gapps_domains append=t | stats count by domain | fields - count | outputlookup gapps_domains

[gapps_load_domains]
definition = inputlookup gapps_domains

[gapps_account_domains]
definition = `load_gapps("summary","*",f)`|stats count by domain |fields domain

[gapps_activity_chart(1)]
args = domain
definition = `load_gapps("activity",$domain$,F)`| chart values(count_*_day_actives) as "Active * Days" values(count_*_day_idle) as "Idle * Days" by date

[gapps_accounts_data(1)]
args = domain
definition = `load_gapps("accounts",$domain$,F)` |eval usage_in_gigabytes = usage_in_bytes/(pow(1024,3))|stats max(usage_in_gigabytes) as "Max Usage (GB)" min(usage_in_gigabytes) as "Min Usage (GB)" avg(usage_in_gigabytes) as "Avg Usage (GB)"

[gapps_domain_usage(1)]
args = domain
definition = `load_gapps("summary",$domain$,F)`|where num_accounts>0|tail 1 | table percent_used

[gapps_user_count(1)]
args = domain
definition = `load_gapps("summary",$domain$,f)`|where num_accounts>0|tail 1| table num_accounts

[gapps_aa_contingency(1)]
args = domain
definition = eventtype=googleapps  source="gapps:$domain$*" | eval domain = substr(source, 7)|contingency eventType name usetotal=f

[gapps_aa_spath]
definition = spath path=items{}.events{}.name output=eventName | spath path=items{}.events{}.parameters{}.name output=paramName|spath path=items{}.events{}.parameters{}.value output=paramValue

[gapps_aa(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$|eval domain=substr(source,7)|`gapps_aa_spath`

[gapps_cntgcy_all_aa(1)]
args = domain
definition = `gapps_aa($domain$)`| rename events{}.name as eventName events{}.type as eventType |contingency eventType eventName usetotal=f

[gapps_aa_detail]
definition = rename items{}.events{}.parameters{}.name AS paramName |rename items{}.events{}.parameters{}.value AS paramValue |eval x=mvzip(paramName, paramValue)|mvexpand x|eval x=split(x,",")|eval paramName = mvindex(x,0)|eval paramValue=mvindex(x,1)

[gapps_severe(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$ tag::eventtype=severe|`gapps_aa_spath`| `gapps_aa_detail`|eval changes=paramName.":".paramValue| stats values(changes) as "Changes" by eventType, eventName, email|rename eventType as "Event Type"|rename eventName AS "Event Name"

[gapps_high(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$ tag::eventtype=high |`gapps_aa_spath`| `gapps_aa_detail`| eval changes=paramName.":".paramValue|stats values(changes) as "Changes" by eventType, eventName, email|rename eventType as "Event Type"|rename eventName AS "Event Name"

[gapps_medium(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$ tag::eventtype=medium|`gapps_aa_spath`|stats dc(paramValue) as "Distinct Parameter Values" by eventType, eventName, email, paramName

[gapps_low(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$ tag::eventtype=low |`gapps_aa_spath`|stats dc(paramValue) as "Distinct Parameter Values" by eventType, eventName, email, paramName

[gapps_aa_tag_percent(2)]
args = domain, tagname
definition = eventtype=googleapps  source=gapps:$domain$ | rename tag::eventtype AS Tag | stats count by Tag| search Tag=severe OR Tag=high OR Tag=medium OR Tag=low|eventstats sum(count) as total|fillnull value=0 count|eval percent = count / total * 100 | where match(Tag,"$tagname$")|fields percent

[gapps_domain_info(1)]
args = domain
definition = search earliest=-24h@h eventtype=googleapps sourcetype=gapps:info source=gapps:$domain$ |eval percent_users = current_number_users / maximum_number_users * 100| stats latest(*) as * | fields - punct source sourcetype splunk_server timestamp linecount index host

[gapps_dsk(1)]
args = domain
definition = eventtype=googleapps sourcetype="gapps:report:disk_space" source=gapps:$domain$

[gapps_eml_peruse_sub(1)]
args = domain
definition = eval pa = num_accounts_accessed / num_accounts *100|eval pw=web_mail_count/num_accounts*100|eval pp=pop_count/num_accounts*100|bucket _time span=1d|stats avg(pa) as s1 avg(pw) as s2 avg(pp) as s3 by domain,_time|eval s0 = "pa pw pp"|makemv s0|mvexpand s0|eval yval=case(s0=="pa",s1,s0=="pw",s2,s0=="pp",s3) |eval lt=case(s0=="pa","Accounts Accessed",s0=="pw","Web Mail Accessed",s0=="pp","POP Accessed")|eval series=lt+" : "+domain|xyseries _time,series,yval grouped=true

[gapps_eml_peruse(2)]
args = domain, timespan
definition = `load_gapps("email_clients","$domain$",f)`|eval pa = num_accounts_accessed / num_accounts *100|eval pw=web_mail_count/num_accounts*100|eval pp=pop_count/num_accounts*100|bucket _time span=$timespan$|stats avg(pa) as s1 avg(pw) as s2 avg(pp) as s3 by domain,_time|eval s0 = "pa pw pp"|makemv s0|mvexpand s0|eval yval=case(s0=="pa",s1,s0=="pw",s2,s0=="pp",s3) |eval lt=case(s0=="pa","Accounts Accessed",s0=="pw","Web Mail Accessed",s0=="pp","POP Accessed")|eval series=lt+" : "+domain|xyseries _time,series,yval grouped=true

[gapps_act_all_sub]
definition = bucket _time span=1w|stats avg(count_*_day_actives) as a_* avg(count_*_day_idle) as i_* by domain,_time|eval s0="1da 14da 30da 7da 30di 60di 90di"|makemv s0|mvexpand s0|eval yval=case(s0=="1da",a_1,s0=="14da",a_14,s0=="30da",a_30,s0=="7da",a_7,s0=="30di",i_30,s0=="60di",i_60,s0=="90di",i_90)|eval series = s0+" : "+domain|xyseries _time,series,yval grouped=true

[gapps_aa_top_ips(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$|lookup gapps_allowed_ips gapps_ip as ipAddress | where is_allowed = "true" | top ipAddress

[gapps_aa_top_email(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$|lookup gapps_allowed_admins gapps_admin_email AS actor.email | where is_admin = "true" |top email

[gapps_aa_top_all_email(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$| top email

[gapps_aa_top_all_ips(1)]
args = domain
definition = eventtype=googleapps source=gapps:$domain$ | top ipAddress


[gapps_load_allowed_admins]
definition = inputlookup gapps_allowed_admins | rename gapps_domain AS Domain gapps_admin_email as Admin

[gapps_load_allowed_ips]
definition = inputlookup gapps_allowed_ips

[gapps_aa_flagged_admin_events(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$ [|inputlookup gapps_allowed_admins append=f|search gapps_domain="$domain$"|fields gapps_admin_email|format "NOT (" "(" "" ")" "OR" ")"]|rename gapps_admin_email AS email | `gapps_aa_spath`|stats count(paramValue) as "Parameter Values" by email, ipAddress, eventType, eventName, paramName

[gapps_aa_flagged_ips(1)]
args = domain
definition = eventtype=googleapps  source=gapps:$domain$ [|inputlookup gapps_allowed_ips append=f|search gapps_domain="$domain$"|fields gapps_ip|rename gapps_ip AS ipAddress|format "NOT (" "(" "" ")" "OR" ")"]|`gapps_aa_spath`|stats count(paramValue) as "Parameter Values" by email, ipAddress, eventType, eventName, paramName

[gapps_accounts_over_quota(2)]
args = domain, percent
definition = `load_gapps("accounts","$domain$",f)`|eval usage_in_mb = usage_in_bytes /1024/1024|eval perquota = floor(usage_in_mb/quota_in_mb * 100)| where perquota > $percent$|fields given_name surname  perquota account_name

[gapps_accounts_near_quota(1)]
args = percent
definition = eval usage_in_mb = usage_in_bytes /1024/1024|eval perquota = floor(usage_in_mb/quota_in_mb * 100)| where perquota > $percent$|eval namekey = given_name." ".surname." (".account_name.")" |fields namekey perquota|rename perquota as "Percent of Quota"
