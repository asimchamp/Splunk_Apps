<dashboard>
  <label>Expand Base Searches instead of Join or Subsearch</label>
  <row>
    <html>
      <h2>Background</h2>
      <p>Joins are really computationally expensive, and limited. Only if you have one *very* rare term search and one dense search, are subsearches a great approach. (Best if theyâ€™re not IP based, because IP searches are challenging). There is a lot of subtlty here that can vary based on the situation.. so you do need to use your best judgement, but it's usually safest to avoid subsearches and joins. (See the example from the 2014 Security Ninjitsu github for how you can get huge benefits with subsearches... life is complicated.)</p>
      <p>Below are four examples of the same basic kind of search. We will explain why each one is good or bad, and show the time required to run each one.</p>
    </html>
  </row>
  <row>
    <html>
      <h2>Key Techniques:</h2>
<p>This example leverages the following useful techniques:</p>
	<ul>
      <li>Correlation across datasets: One dataset is not always enough for a correlation rule. Up that number.</li>
      <li>Join: How to do a join</li>
		  <li>Subsearch: How to convert your join to a subsearch</li>
      <li>Expanding base search: Moving into the future with a faster and better expanded base search</li>
      <li>tstats append: Get a very similar search at a fraction of the time with acceleration</li>
      <li>Macros: As of building this app, the proxy datagens have an issue with uncategorized traffic, so we will use a macro to define this (and cheat in the interim). Replace the macro with whatever is relevant for your environment</li>
      </ul>
    </html>
  </row>
  <row>
    <html>
      <h2>The Searches</h2>
    </html>
  </row>
  <row>
    <html>
      <h3>Incorrect -- will limit you to 10k results and fail in non-obvious ways -- Join Version</h3>
      <pre>
        <![CDATA[
tag=malware action=allowed | stats count as infections by ComputerIPAddress | rename ComputerIPAddress as src  | join src [search tag=proxy `uncategorized_macro` | stats count as hits by src]
]]>      </pre>    
    </html>
  </row>
  <row>
    <panel>
      <table>
        <search>
          <query>
            <![CDATA[
tag=malware action=allowed | stats count as infections by ComputerIPAddress | rename ComputerIPAddress as src  | join src [search tag=proxy `uncategorized_macro` | stats count as hits by src]
]]>
          </query>
          <earliest></earliest>
          <latest></latest>
        </search>
      </table>
    </panel>
  </row>
  <row>
    <html>
      <h3>Maybe Incorrect and Bad -- 400 Seconds, limited to 10k malware hits -- Subsearch Version</h3>
      <pre>
        <![CDATA[
[search tag=malware action=allowed | dedup ComputerIPAddress | rename ComputerIPAddress as src | table src]   tag=proxy `uncategorized_macro` | stats count as hits by src
]]>      </pre>    
    </html>
  </row>
  <row>
    <panel>
      <table>
        <search>
          <query>
            <![CDATA[
[search tag=malware action=allowed | dedup ComputerIPAddress | rename ComputerIPAddress as src | table src]   tag=proxy `uncategorized_macro` | stats count as hits by src
]]>
          </query>
          <earliest></earliest>
          <latest></latest>
        </search>
      </table>
    </panel>
  </row>
  <row>
    <html>
      <h3>Better -- 72 Seconds -- Expanded Base Search</h3>
      <pre>
        <![CDATA[
(tag=malware action=allowed) OR (tag=proxy `uncategorized_macro`) | eval mydest=if(tag="malware", ComputerIPAddress, src) | stats count(eval(tag="malware")) as malware count(eval(tag="proxy")) as proxy by mydest | where malware>0 AND proxy>0
]]>      </pre>   
    </html>
  </row>
  <row>
    <panel>
      <table>
        <search>
          <query>
            <![CDATA[
(tag=malware action=allowed) OR (tag=proxy `uncategorized_macro`) | eval mydest=if(tag="malware", ComputerIPAddress, src) | stats count(eval(tag="malware")) as malware count(eval(tag="proxy")) as proxy by mydest | where malware>0 AND proxy>0
]]>
          </query>
          <earliest></earliest>
          <latest></latest>
        </search>
      </table>
    </panel>
  </row>
  <row>
    <html>
      <h3>Best -- 14 Seconds -- tstats on accelerated data models</h3>
      <pre>
        <![CDATA[
| tstats prestats=t summariesonly=t count(Malware_Attacks.dest) as malwarehits from datamodel=Malware where Malware_Attacks.action=allowed groupby Malware_Attacks.dest | tstats prestats=t append=t summariesonly=t count(Web.src) as webhits from datamodel=Web where Web.`uncategorized_macro` groupby Web.src | rename Web.src as src Malware_Attacks.dest as src | stats count(Malware_Attacks.src) as malwarehits count(Web.src) as webhits by src| where malwarehits > 0 AND webhits > 0

]]>      </pre>   
    </html>
  </row>
  <row>
    <panel>
      <table>
        <search>
          <query>
            <![CDATA[| stats count as message | eval message="Working on fixing a bug here... subscribe to the app to be notified of new versions."]]>
<!--            <![CDATA[
| tstats prestats=t summariesonly=t count(Malware_Attacks.dest) as malwarehits from datamodel=Malware where Malware_Attacks.action=allowed groupby Malware_Attacks.dest | tstats prestats=t append=t summariesonly=t count(Web.src) as webhits from datamodel=Web where Web.`uncategorized_macro` groupby Web.src | rename Web.src as src Malware_Attacks.dest as src | stats count(Malware_Attacks.src) as malwarehits count(Web.src) as webhits by src| where malwarehits > 0 AND webhits > 0
]]>-->
          </query>
          <earliest></earliest>
          <latest></latest>
        </search>
      </table>
    </panel>
  </row>
     
</dashboard>