##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##
[jboss:jmx]
SHOULD_LINEMERGE = false
KV_MODE = json
# JVM
FIELDALIAS-jmx.jvm_description = jvmDescription AS jvm_description
# Classloading
FIELDALIAS-jmx.current_loaded = LoadedClassCount AS current_loaded
FIELDALIAS-jmx.total_loaded = TotalLoadedClassCount AS total_loaded
FIELDALIAS-jmx.total_unloaded = UnloadedClassCount AS total_unloaded
# Compilation
FIELDALIAS-jmx.compilation_time = TotalCompilationTime AS compilation_time
# Memory
FIELDALIAS-jmx.heap_committed = HeapMemoryUsage.committed AS heap_committed
FIELDALIAS-jmx.heap_initial = HeapMemoryUsage.init AS heap_initial
FIELDALIAS-jmx.heap_max = HeapMemoryUsage.max AS heap_max
FIELDALIAS-jmx.heap_used = HeapMemoryUsage.used AS heap_used
FIELDALIAS-jmx.non_heap_committed = NonHeapMemoryUsage.committed AS non_heap_committed
FIELDALIAS-jmx.non_heap_initial = NonHeapMemoryUsage.init AS non_heap_initial
FIELDALIAS-jmx.non_heap_max = NonHeapMemoryUsage.max AS non_heap_max
FIELDALIAS-jmx.non_heap_used = NonHeapMemoryUsage.used AS non_heap_used
FIELDALIAS-jmx.objects_pending = ObjectPendingFinalizationCount AS objects_pending
# OS
FIELDALIAS-jmx.os_architecture = Arch AS os_architecture
FIELDALIAS-jmx.total_processors = AvailableProcessors AS total_processors
# FIELDALIAS-jmx.os = Name AS os
EVAL-os = if(mbean_property_type="OperatingSystem", Name, null())
FIELDALIAS-jmx.system_load = SystemLoadAverage AS system_load
FIELDALIAS-jmx.os_version = Version AS os_version
FIELDALIAS-jmx.committed_memory = CommittedVirtualMemorySize AS committed_memory
FIELDALIAS-jmx.cpu_time = ProcessCpuTime AS cpu_time
FIELDALIAS-jmx.free_physical_memory = FreePhysicalMemorySize AS free_physical_memory
FIELDALIAS-jmx.free_swap = FreeSwapSpaceSize AS free_swap
FIELDALIAS-jmx.max_file_descriptors = MaxFileDescriptorCount AS max_file_descriptors
FIELDALIAS-jmx.open_file_descriptors = OpenFileDescriptorCount AS open_file_descriptors
FIELDALIAS-jmx.physical_memory = TotalPhysicalMemorySize AS physical_memory
FIELDALIAS-jmx.swap_space = TotalSwapSpaceSize AS swap_space
# Runtime
# FIELDALIAS-jmx.process_name = Name AS process_name
EVAL-process_name = if(mbean_property_type="Runtime", Name, null())
FIELDALIAS-jmx.start_time = StartTime AS start_time
FIELDALIAS-jmx.uptime = Uptime AS uptime
#EVAL-vendor_product = VmVendor+"_"+VmName
EVAL-vendor_product = if(mbean_property_type="Runtime", VmVendor+"_"+VmName, "JBoss EAP")
FIELDALIAS-jmx.version = VmVersion AS version
# Threading
EVAL-current_cpu_time = CurrentThreadCpuTime/1000/1000/1000
EVAL-current_user_time = CurrentThreadUserTime/1000/1000/1000
FIELDALIAS-jmx.daemon_thread_count = DaemonThreadCount AS daemon_thread_count
FIELDALIAS-jmx.omu_supported = ObjectMonitorUsageSupported AS omu_supported
FIELDALIAS-jmx.peak_thread_count = PeakThreadCount AS peak_thread_count
FIELDALIAS-jmx.synch_supported = SynchronizerUsageSupported AS synch_supported
FIELDALIAS-jmx.cm_enabled = ThreadContentionMonitoringEnabled AS cm_enabled
FIELDALIAS-jmx.cm_supported = ThreadContentionMonitoringSupported AS cm_supported
FIELDALIAS-jmx.thread_count = ThreadCount AS thread_count
FIELDALIAS-jmx.cpu_time_enabled = ThreadCpuTimeEnabled AS cpu_time_enabled
FIELDALIAS-jmx.cpu_time_supported = ThreadCpuTimeSupported AS cpu_time_supported
FIELDALIAS-jmx.threads_started = TotalStartedThreadCount AS threads_started

# Performance Memory
EVAL-mem = TotalPhysicalMemorySize/1024/1024
EVAL-mem_free = FreePhysicalMemorySize/1024/1024
EVAL-swap = TotalSwapSpaceSize/1024/1024
EVAL-swap_free = FreeSwapSpaceSize/1024/1024
EVAL-mem_committed = CommittedVirtualMemorySize/1024/1024

# Web
FIELDALIAS-bytes_in = bytesSent AS bytes_in
FIELDALIAS-bytes_out = bytesReceived AS bytes_out
# EVAL-vendor_product = if(mbean_property_subsystem=="web", "JBoss EAP", VmVendor+"_"+VmName)
EVAL-bytes = coalesce(bytes_in, 0)+coalesce(bytes_out, 0)

[jboss:gc:log]
# Load balancing on UF
EVENT_BREAKER_ENABLE = true
SHOULD_LINEMERGE = false
MAX_TIMESTAMP_LOOKAHEAD = 32
# 2015-09-18T08:43:10.374-0800
TIME_FORMAT = %Y-%m-%dT%H:%M:%S.%l%z
BREAK_ONLY_BEFORE = ^\d+-\d+-\d+
NO_BINARY_CHECK = true
TRANSFORMS-trash_beginning = jboss_gc_log_trash_beginning

[jboss:server:log]
MAX_TIMESTAMP_LOOKAHEAD = 32
# 01:59:41,057 or 2020-12-21 10:30:20,000
EXTRACT-server = ^(\d{4}-\d{2}-\d{2}\s)?\d{2}:\d{2}:\d{2},\d{3}\s+(?P<log_level>\w+)\s+\[(?P<event_category>[\-\.\w$]+)\]\s\((?P<thread_name>.+?)\)\s+((?P<message_id>[\w]+):)?(?P<message>[\s\S]+)$
BREAK_ONLY_BEFORE = ^(\d{4}-\d{2}-\d{2}\s)?\d{2}:\d{2}:\d{2},\d{3}
LOOKUP-severity_name = jboss_severity_type_lookup log_level OUTPUT severity
LOOKUP-type = jboss_severity_type_lookup log_level OUTPUT type
FIELDALIAS-body = message AS body
# FIELDALIAS-subject = event_category AS subject
EVAL-app = "JBoss"
EVAL-vendor_product = "JBoss EAP"
EVAL-action = case(match(message_id, "WFLYUT00(12|18)"), "modified")
EVAL-change_type = case(match(message_id, "WFLYUT00(12|18)"), "restart")
EVAL-object_category = case(match(message_id, "WFLYUT00(12|18)"), "service")
EVAL-object_attrs = case(match(message_id, "WFLYUT00(12|18)"), "JBoss")
EVAL-command = case(match(message_id, "WFLYUT00(12|18)"), "ssh")
EVAL-object = case(match(message_id, "WFLYUT0012"), "default-server", match(message_id, "WFLYUT0018"), "default-host")
FIELDALIAS-id = message_id as id
FIELDALIAS-signature_id = message_id as signature_id
EVAL-status = case(match(message_id, "WFLYUT00(12|18)"), "success")
EVAL-dvc = case(match(message_id, "WFLYUT00(12|18)"), host)
FIELDALIAS-dest = host as dest
FIELDALIAS-dest_host = host as dest_host
FIELDALIAS-src = host as src
FIELDALIAS-src_host = host as src_host

[jboss:access:log]
SHOULD_LINEMERGE = false
# For Load Balancing on UF
EVENT_BREAKER_ENABLE = true
EVAL-vendor_product = "JBoss EAP"
EVAL-bytes_in = 0
EVAL-bytes_out = if(bytes_sent=="-", 0, bytes_sent)
EVAL-bytes = if(bytes_sent=="-", 0, bytes_sent)
EVAL-src = if(x_forwarded_for=="-", remote_host, x_forwarded_for)
EVAL-src_ip = if(x_forwarded_for=="-", remote_ip, x_forwarded_for)
FIELDALIAS-dest = server AS dest
FIELDALIAS-dest_port = server_port AS dest_port
EVAL-url = case((server_port==443 OR server_port==8443), "https://", true(), "http://").url
EVAL-url_domain = case(match(url, "^(\d+\.\d+\.\d+\.\d+):?\d{0,5}\/"), null(), match(url, "^\[?([^\-\/]*:[^\-\/\]]*:[^\-\/\]]*)\]?:?\d{0,5}\/"), null(), match(url, "^(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*"), replace(url, "^(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*", "\1"), true(), replace(url, "^([^:\/]+\.?[^:\/]+):?\d{0,5}\/.*", "\1"))
EVAL-http_referrer_domain = case(match(http_referrer, ":\/\/(\d+\.\d+\.\d+\.\d+):?\d{0,5}\/"), null(), match(http_referrer, ".*:\/\/\[?([^\-\/]*:[^\-\/\]]*:[^\-\/\]]*)\]?:?\d{0,5}\/.*"), null(), http_referrer=="-", "-", match(http_referrer, "(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*"), replace(http_referrer, "(?:[^:]+:\/\/([^:\/]+\.[^:\/\.]+)):?\d{0,5}\/.*", "\1"), true(), replace(http_referrer, ".*:\/\/([^:\/]+\.?[^:\/]+):?\d{0,5}\/.*", "\1"))
EVAL-http_user_agent_length = if(http_user_agent=="" or http_user_agent=="-", 0, len(http_user_agent))
EVAL-category = if(http_content_type=="" or http_content_type=="-", null(), http_content_type)
LOOKUP-jboss_http_status = jboss_http_status status OUTPUT status_description as action

[source::...splunk_ta_jboss_setup.log*]
sourcetype = ta:jboss:setup:log

[source::...splunk_ta_jboss_main.log*]
sourcetype = ta:jboss:main:log

[source::...splunk_ta_jboss_util.log*]
sourcetype = ta:jboss:util:log
