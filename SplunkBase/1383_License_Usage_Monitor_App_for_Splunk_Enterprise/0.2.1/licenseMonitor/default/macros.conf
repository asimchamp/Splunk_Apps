# Copied directly from DeploymentMonitor, with omissions

[forwarder_metrics]
definition = index="_internal" source="*metrics.log" group=tcpin_connections | eval sourceHost=if(isnull(hostname), sourceHost,hostname) | eval connectionType=case(fwdType=="uf","Universal Forwarder", fwdType=="lwf", "Light Weight Forwarder",fwdType=="full", "Splunk Indexed", connectionType=="cooked" or connectionType=="cookedSSL","Splunk Forwarder", connectionType=="raw" or connectionType=="rawSSL","Legacy Forwarder")| eval build=if(isnull(build),"n/a",build) | eval version=if(isnull(version),"pre 4.2",version) | eval guid=if(isnull(guid),sourceHost,guid) | eval os=if(isnull(os),"n/a",os)| eval arch=if(isnull(arch),"n/a",arch) | eval my_splunk_server = splunk_server | fields connectionType sourceIp sourceHost sourcePort destPort kb tcp_eps tcp_Kprocessed tcp_KBps my_splunk_server build version os arch guid

[forwarder_metrics_stats]
definition = stats values(sourceHost) as sourceHost values(connectionType) as connectionType values(sourcePort) as sourcePort values(destPort) as destPort sum(kb) avg(tcp_eps) avg(tcp_Kprocessed) avg(tcp_KBps) 

[per_index_metrics]
definition = index="_internal" source="*metrics.log" group=per_index_thruput series!="_*"

[per_sourcetype_metrics]
definition = index="_internal" source="*metrics.log" group=per_sourcetype_thruput series!="audittrail" series!="scheduler" series!="splunk_web_access" series!="splunk_web_service" series!="splunkd" series!="splunkd_access" 

[indexer_parsing_queue]
definition = index="_internal" source="*metrics.log" group=queue name=parsingqueue | chart perc95(current_size_kb) as p95sz, max(max_size_kb) as maxsz by splunk_server | eval percentage=p95sz*100/maxsz

[indexer_indexing_queue]
definition = index="_internal" source="*metrics.log" group=queue name=indexqueue | chart perc95(current_size_kb) as p95sz, max(max_size_kb) as maxsz by splunk_server | eval percentage=p95sz*100/maxsz

[indexer_queueing_latency]
definition = index=_internal group=per_sourcetype_thruput series=access_* | eval latency=avg_age*ev | stats sum(latency) as latency sum(ev) as events by splunk_server | fillnull latency events
 
[indexer_queue_stats]
definition = `indexer_parsing_queue` | rename percentage as parseQ_percentage | appendcols [search `indexer_indexing_queue` | rename percentage as indexQ_percentage] | appendcols [search `indexer_queueing_latency` | eval avg_age=latency/events | fields avg_age] | fields splunk_server avg_age parseQ_percentage indexQ_percentage | fillnull avg_age

[forwarder_lookup_stats(1)]
args = extraStats
definition = stats first(sourceIp) as sourceIp first(connectionType) as connectionType first(sourcePort) as sourcePort first(build) as build first(version) as version first(os) as os first(arch) as arch $extraStats$ by sourceHost guid 

[all_forwarders]
definition = index="summary_forwarders" | eval _time = _time + 1800 | `forwarder_lookup_stats("max(lastConnected) as lastConnected max(lastReceived) as lastReceived sum(kb) as KB first(avg_eps) as eps")` | join type=outer guid [search earliest=-30m latest=now `forwarder_metrics` | eval lastReceived = if(kb>0, _time, null) | `forwarder_lookup_stats("max(_time) as lastConnected1 max(lastReceived) as lastReceived1 sum(kb) as kb")`  | addinfo | eval mystatus = if(lastConnected>(lastReceived+300) or kb==0,"quiet","dunno") ] | eval lastConnected=if(lastConnected1>lastConnected, lastConnected1, lastConnected) | eval lastReceived=if(lastReceived1>lastReceived, lastReceived1, lastReceived) |  addinfo | eval status = if(isnull(KB) or lastConnected<(info_max_time-900),"missing",if(mystatus="quiet","quiet","active")) | convert ctime(lastConnected) ctime(lastReceived) ctime(info_max_time) 

#definition =`forwarder_metrics` | eval lastReceived = if(kb>0, _time, null) | `forwarder_lookup_stats("max(_time) as lastConnected max(lastReceived) as lastReceived sum(kb) as kb avg(tcp_eps) as avg_eps")` | append [search index="summary_forwarders" | eval _time = _time + 1800] | `forwarder_lookup_stats("max(lastConnected) as lastConnected max(lastReceived) as lastReceived first(kb) as KB first(avg_eps) as eps")` | addinfo | eval status = if(isnull(KB) or lastConnected<(info_max_time-900),"missing",if(lastConnected>(lastReceived+300) or KB==0,"quiet","active")) | sort sourceHost

[all_indexers]
definition = index="summary_indexers" | eval _time = _time + 1800 | stats max(_time) as _time sum(kb) as KB first(avg_age) as avg_age first(parseQ_percentage) as parseQ_percentage first(indexQ_percentage) as indexQ_percentage by my_splunk_server |rename my_splunk_server as splunk_server | join type=outer splunk_server [search earliest=-30m latest=now `per_index_metrics` | stats max(_time) as time1 sum(kb) as kb by splunk_server | join type="outer" splunk_server [ search earliest=-30m latest=now  `indexer_queue_stats`] | addinfo |eval mystatus = if(kb==0, "idle", if(parseQ_percentage>50, "overloaded", if(indexQ_percentage>50,"overloaded","normal")))] | eval _time = if(time1>_time, time1, _time) | addinfo | eval status = if(isnull(mystatus), "dead",mystatus)

#definition =`per_index_metrics` | stats max(_time) as _time sum(kb) as kb by splunk_server | join type="outer" splunk_server [ search `indexer_queue_stats`] | append [search index="summary_indexers" | rename my_splunk_server as splunk_server | eval _time = _time + 1800] | stats max(_time) as _time first(kb) as KB first(avg_age) as avg_age first(parseQ_percentage) as parseQ_percentage first(indexQ_percentage) as indexQ_percentage by splunk_server | eval status = if(KB==0, "idle", if(parseQ_percentage>50, "overloaded", if(indexQ_percentage>50,"overloaded","normal")))

[one_forwarder(1)]
args = forwarderName
definition = sourceHost="$forwarderName$" `forwarder_metrics` | eval lastReceived = if(kb>0, _time, null) | `forwarder_lookup_stats("max(_time) as lastConnected max(lastReceived) as lastReceived sum(kb) as kb avg(tcp_eps) as avg_eps")` | append [search index="summary_forwarders" | eval _time = _time + 1800] | search sourceHost="$forwarderName$" | `forwarder_lookup_stats("max(lastConnected) as lastConnected max(lastReceived) as lastReceived first(kb) as KB first(avg_eps) as eps")` | addinfo | eval status = if(isnull(KB) or lastConnected<(info_max_time-900),"missing",if(lastConnected>(lastReceived+300) or KB==0,"quiet","active")) 

[indexer_ratio]
definition = earliest=-1h@h latest=now `per_index_metrics` | stats avg(kb) as indexer_avg_kb_today | join splunk_server type=outer [search earliest=-169h@h latest=-168h@h `per_index_metrics`| stats avg(kb) as indexer_avg_kb_last_week count | fillnull indexer_avg_kb_last_week | fields indexer_avg_kb_last_week] | fillnull indexer_avg_kb_today | eval indexer_ratio=indexer_avg_kb_today/indexer_avg_kb_last_week

[all_forwarders_stats]
definition = earliest=@d latest=now `forwarder_metrics` | stats avg(kb) as all_fwd_avg_kb avg(tcp_eps) as all_fwd_avg_eps 


[sourcetype_metrics]
definition = index="_internal" source="*license_usage.log" | rename _time as lastReceived s as source st as mysourcetype h as host b as bytes o as originator | eval my_splunk_server = splunk_server | fields lastReceived source mysourcetype host bytes pool originator my_splunk_server

[sourcetype_metrics_stats]
definition = stats values(source) as source values(mysourcetype) as mysourcetype values(host) as host 

[all_sourcetypes]
definition =`sourcetype_metrics` | stats max(lastReceived) as lastReceived sum(bytes) as bytes by mysourcetype | append [search index="summary_sourcetypes" | eval _time = _time + 1800 | rename my_sourcetype as mysourcetype bytes_today as summary_idx_bytes_today] | stats max(lastReceived) as lastReceived first(bytes) as bytes by mysourcetype | eval lastConnected=lastReceived | eval bytes_today=bytes+summary_idx_bytes_today | addinfo | eval status = if(isnull(bytes) or lastConnected<(info_max_time-900),"missing","active") 

#definition =`sourcetype_metrics` | stats max(lastReceived) as lastReceived sum(bytes) as bytes by mysourcetype | append [search index="summary_sourcetypes" | eval _time = _time + 1800 | rename my_sourcetype as mysourcetype bytes_today as summary_idx_bytes_today] | stats max(lastReceived) as lastReceived first(bytes) as bytes by mysourcetype | eval lastConnected=lastReceived | eval bytes_today=bytes+summary_idx_bytes_today | addinfo | eval status = if(isnull(bytes) or lastConnected<(info_max_time-900),"missing","active") 

[usage_by_source]
definition =`sourcetype_metrics` | stats sum(bytes) as bytes max(lastReceived) as lastReceived by source | fields source lastReceived bytes

[all_sources]
definition =`usage_by_source` | stats max(lastReceived) as lastReceived sum(bytes) as bytes by source | append [search index="summary_sources" | eval _time = _time + 1800 | rename my_source as source] | stats max(lastReceived) as lastReceived first(bytes) as bytes by source 

[usage_by_host]
definition =`sourcetype_metrics` | stats sum(bytes) as bytes max(lastReceived) as lastReceived by host | fields host bytes lastReceived

[all_hosts]
definition =`usage_by_host` | stats max(lastReceived) as lastReceived sum(bytes) as bytes by host | append [search index="summary_hosts" | eval _time = _time + 1800 | rename my_host as host] | stats max(lastReceived) as lastReceived first(bytes) as bytes by host 

[usage_by_pool]
definition =`sourcetype_metrics` | stats sum(bytes) as bytes max(lastReceived) as lastReceived by pool | fields pool bytes lastReceived

[all_pools]
definition =`usage_by_pool` | stats max(lastReceived) as lastReceived sum(bytes) as bytes by pool | append [search index="summary_pools" | eval _time = _time + 1800 | rename my_pool as pool] | stats max(lastReceived) as lastReceived first(bytes) as bytes by pool 

[usage_by_originator]
definition =`sourcetype_metrics` | stats sum(bytes) max(lastReceived) by originator

[current_active_searches]
definition = index="_internal" source="*metrics.log" "system total" NOT user=* | head 1 | rename active_realtime_searches AS rt_searches | rename active_hist_searches AS hist_searches | eval total_searches = rt_searches + hist_searches | fields rt_searches hist_searches total_searches
