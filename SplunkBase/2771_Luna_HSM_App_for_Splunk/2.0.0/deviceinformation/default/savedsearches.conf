[HSM Appliance List]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation | stats values(host) as Host by host

[HSM Information Stats Table]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = deviceinformation
search = index=hsm_information host=* hsmid=* OR hsmLabel=* OR hsmFirmwareVersion=* OR hsmAuthenticationMethod=* OR hsmFipsMode=* OR hsmRpvInitialized=* OR hsmAdminLoginAttempts=* OR hsmMaximumPartitions=* OR hsmPartitionsCreated=* | head 2000 | rename hsmid as "HSM Serial" | eval hsmRpvInitialized1=case(hsmRpvInitialized=="uninitialized", "No", hsmRpvInitialized=="initialized", "Yes") | rename host as "Appliance Hostname/IP" | stats values(hsmLabel) as "HSM Label" , values(hsmFirmwareVersion) as "Firmware Version", values(hsmAuthenticationMethod) as "Authentication Method", values(hsmFipsMode) as "FIPS Mode", values(hsmRpvInitialized1) as "RPV Initialized", values(hsmAdminLoginAttempts) as "HSM SO logins attempts left", values(hsmMaximumPartitions) as "Maximum Partition Allowed", values(hsmPartitionsCreated) as "Partition Created" by "Appliance Hostname/IP"

[HSM Usage Information Stats Table]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = deviceinformation
search = index=hsm_information OR index=hsm_operation hsmStorageAllocatedBytes=* OR hsmStorageTotalBytes=* OR hsmStorageAvailableBytes=* OR hsmPartitionsCreated=* OR hsmMaximumPartitions=* OR HSM_Connected_Clients=* | head 500 |  rename host as "Appliance Hostname/IP" | stats values(hsmStorageAllocatedBytes) as HSM_StorageAllocated , values(hsmStorageTotalBytes) as HSM_StorageTotal_Bytes , values(hsmStorageAvailableBytes) as "Available Storage Bytes" , values(hsmPartitionsCreated) as "Partitions Created" , values(hsmMaximumPartitions) as "Maximum Partition Limit", latest(HSM_Connected_Clients) as "Client connected With HSM" by "Appliance Hostname/IP" | eval HSM_StorageAllocated=round(HSM_StorageAllocated*100/HSM_StorageTotal_Bytes,1)." %" | rename HSM_StorageAllocated as "Allocated Storage Area" , HSM_StorageTotal_Bytes as "Total Storage Bytes" | join "Appliance Hostname/IP" [search index=lunasa_appliance OR index=hsm_operation HSM_operational_state=* OR PSU1_12V_Voltagevalue=* OR PSU2_12V_Voltagevalue=* | head 500 | eval HSM_operational_state=upper(HSM_operational_state) | stats latest(PSU1_12V_Voltagevalue) as PSU1_12V_Voltagevalue, latest(HSM_operational_state) as HSM_operational_state, latest(PSU2_12V_Voltagevalue) as PSU2_12V_Voltagevalue by host | rangemap field=PSU1_12V_Voltagevalue Down=-0.1-0 Low_Voltage=0.1-11.232 OK=11.232-13.392 default=severe| rename range as "Power Supply Unit 1" | rangemap field=PSU2_12V_Voltagevalue Down=-0.1-0 Low_Voltage=0.1-11.232 OK=11.232-13.392 default=severe | rename range as "Power Supply Unit 2", HSM_operational_state as "HSM Operational State", host as "Appliance Hostname/IP" | table "Appliance Hostname/IP" , "Power Supply Unit 1" , "Power Supply Unit 2" , "HSM Operational State"]

[Failed clients for selected HSM]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation ntlsFailedClientConnections=* host=$submittedHost$ | head 1 | stats values(ntlsFailedClientConnections) | rangemap field=ntlsFailedClientConnections low=0-3 elevated=4-20 default=severe

[Connected clients for selected HSM]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation HSM_Connected_Clients=* host=$submittedHost$ | head 1 | stats values(HSM_Connected_Clients) as HSM_Connected_Clients | rangemap field=HSM_Connected_Clients low=0-50 elevated=50-2000 default=severe

[NTLS successful client connections]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation ntlsSuccessfulClientConnections=* | timechart cont=F list(ntlsSuccessfulClientConnections) by host

[HSM Operational State]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation HSM_operational_state=* | head 200 | eval HSM_operational_state=replace(HSM_operational_state,"up","1") | eval HSM_operational_state=replace(HSM_operational_state,"down","2") | eval HSM_operational_state=replace(HSM_operational_state,"unknown","3") |  timechart cont=FALSE list(HSM_operational_state) by host | fillnull value=3

[HSM Command Count]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation hsmCommandCount=* | head 100 | reverse | stats avg(hsmCommandCount) as pieces by host, _time | streamstats window=1 global=f current=f first(pieces) as p_pieces by host | eval delta=pieces-p_pieces |  timechart cont=FALSE list(delta) by host

[HSM Operation Errors]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation HSM_Operation_Errors=* | head 100 | reverse | stats avg(HSM_Operation_Errors) as pieces by host, _time | streamstats window=1 global=f current=f first(pieces) as p_pieces by host | eval delta=pieces-p_pieces  | timechart cont=FALSE list(delta) by host

[HSM Utilization]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation  hsmUpTime OR hsmBusyTime |  head 100 | stats avg(hsmBusyTime) as hsmBusyTime1, avg(hsmUpTime) as hsmUpTime1 by host, _time | streamstats window=1 global=f current=f first(hsmBusyTime1) as hsmBusyTime2,  first(hsmUpTime1) as hsmUpTime2 by host | eval hsmUpTime3=hsmUpTime1-hsmUpTime2 | eval hsmBusyTime3=hsmBusyTime1-hsmBusyTime2 | eval HSM_Utilization=if(hsmBusyTime3!=0,hsmBusyTime3/hsmUpTime3*100, 0) | timechart cont=FALSE list(HSM_Utilization) by host

[HSM Operations Frequency]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=hsm_operation HSM_Operation_Requests=* | reverse | head 2000 | stats avg(HSM_Operation_Requests) as pieces by host,  _time | streamstats window=1 global=f current=f first(pieces) as p_pieces by host | eval delta=pieces-p_pieces |  timechart cont=FALSE list(delta) by host

[CPU VCore Voltage]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ CPU_VCORE_voltage=* | head 200 | eval CPU_VCORE_voltage=CPU_VCORE_voltage/1000 | timechart cont=FALSE list(CPU_VCORE_voltage) by host

[CPU Temperature]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ CPU_Temperature=*  | head 200 |  eval CPU_Temperature=CPU_Temperature/1000 | timechart cont=FALSE list(CPU_Temperature) by host

[PSU II Voltage]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ PSU2_12V_Voltagevalue=* | head 200 | timechart cont=FALSE list(PSU2_12V_Voltagevalue) by host

[PSU II Temperature]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ PSU2_Temperature=* | head 200 | timechart cont=FALSE list(PSU2_Temperature) by host

[PSU I Voltage]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ PSU1_12V_Voltagevalue=* | head 200 | timechart cont=FALSE list(PSU1_12V_Voltagevalue) by host

[PSU I Temperature]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ PSU1_Temperature=* | head 200 | timechart cont=FALSE list(PSU1_Temperature) by host

[FAN1A Speed]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ FAN1A_speed=* | head 200 |  timechart cont=FALSE list(FAN1A_speed) by host

[FAN2A Speed]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ FAN2A_speed=* | head 200 |  timechart cont=FALSE list(FAN2A_speed) by host

[FAN3A Speed]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ FAN3A_speed=* | head 200 |  timechart cont=FALSE list(FAN3A_speed) by host

[FAN1B Speed]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ FAN1B_speed=* | head 200 |  timechart cont=FALSE list(FAN1B_speed) by host

[FAN2B Speed]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ FAN2B_speed=* | head 200 |  timechart cont=FALSE list(FAN2B_speed) by host

[FAN3B Speed]
alert.track = 0
dispatch.earliest_time = -2h@h
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
display.visualizations.charting.chart.nullValueMode = connect
request.ui_dispatch_app = deviceinformation
search = index=lunasa_appliance host=$submittedHost$ FAN3B_speed=* | head 200 |  timechart cont=FALSE list(FAN3B_speed) by host

