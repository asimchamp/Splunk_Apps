#
# PySNMP MIB module SAFENET-APPLIANCE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://./SAFENET-APPLIANCE-MIB.txt
# Produced by pysmi-0.3.4 at Sat May 29 02:31:01 2021
# On host localhost.localdomain platform Linux version 4.18.0-240.15.1.el8_3.x86_64 by user root
# Using Python version 3.8.3 (default, Aug 31 2020, 16:03:14) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
luna, = mibBuilder.importSymbols("SAFENET-GLOBAL-MIB", "luna")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Bits, enterprises, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, TimeTicks, Counter32, Integer32, IpAddress, NotificationType, Counter64, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Bits", "enterprises", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "TimeTicks", "Counter32", "Integer32", "IpAddress", "NotificationType", "Counter64", "ModuleIdentity", "ObjectIdentity")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
appliance = ModuleIdentity((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2))
appliance.setRevisions(('2014-01-07 00:00',))
if mibBuilder.loadTexts: appliance.setLastUpdated('201305060000Z')
if mibBuilder.loadTexts: appliance.setOrganization('www.safenet-inc.com')
appSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: appSoftwareVersion.setStatus('current')
ssTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2))
ssLogReference = MibScalar((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ssLogReference.setStatus('current')
fanAttentionNotify = NotificationType((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 2)).setObjects(("SAFENET-APPLIANCE-MIB", "ssLogReference"))
if mibBuilder.loadTexts: fanAttentionNotify.setStatus('current')
powerSupplyAttentionNotify = NotificationType((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 3)).setObjects(("SAFENET-APPLIANCE-MIB", "ssLogReference"))
if mibBuilder.loadTexts: powerSupplyAttentionNotify.setStatus('current')
motherboardAttentionNotify = NotificationType((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 4)).setObjects(("SAFENET-APPLIANCE-MIB", "ssLogReference"))
if mibBuilder.loadTexts: motherboardAttentionNotify.setStatus('current')
diskDriveAttentionNotify = NotificationType((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 5)).setObjects(("SAFENET-APPLIANCE-MIB", "ssLogReference"))
if mibBuilder.loadTexts: diskDriveAttentionNotify.setStatus('current')
ntlsAttentionNotify = NotificationType((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 6)).setObjects(("SAFENET-APPLIANCE-MIB", "ssLogReference"))
if mibBuilder.loadTexts: ntlsAttentionNotify.setStatus('current')
cryptoAttentionNotify = NotificationType((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 7)).setObjects(("SAFENET-APPLIANCE-MIB", "ssLogReference"))
if mibBuilder.loadTexts: cryptoAttentionNotify.setStatus('current')
clockAttentionNotify = NotificationType((1, 3, 6, 1, 4, 1, 23629, 1, 5, 2, 2, 8)).setObjects(("SAFENET-APPLIANCE-MIB", "ssLogReference"))
if mibBuilder.loadTexts: clockAttentionNotify.setStatus('current')
mibBuilder.exportSymbols("SAFENET-APPLIANCE-MIB", ntlsAttentionNotify=ntlsAttentionNotify, ssTraps=ssTraps, PYSNMP_MODULE_ID=appliance, diskDriveAttentionNotify=diskDriveAttentionNotify, fanAttentionNotify=fanAttentionNotify, appSoftwareVersion=appSoftwareVersion, powerSupplyAttentionNotify=powerSupplyAttentionNotify, ssLogReference=ssLogReference, motherboardAttentionNotify=motherboardAttentionNotify, cryptoAttentionNotify=cryptoAttentionNotify, appliance=appliance, clockAttentionNotify=clockAttentionNotify)
