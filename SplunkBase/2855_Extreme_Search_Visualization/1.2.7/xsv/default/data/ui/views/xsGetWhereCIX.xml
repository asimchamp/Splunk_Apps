<dashboard stylesheet="xsv.css">
  <label>xsGetWhereCIX</label>
  <row>
    <html>
      <p>
        <br />
        <span class="head4">Command: </span>
        <span class="cmd">xsGetWhereCIX</span>
      </p>
      <p>
        <span class="head4">Category: </span>
        <span class="bodytext">Conceptual Search</span>
      </p>
      <p>
        <span class="head4">Description: </span>
        <span class="bodytext">Determine the compatibility of each event with a semantic query. Each event is written to the output stream with the compatibility value (xcix) added as a field named by cixname. The default is "WhereCIX". The xcix is generated using one of two functions, avg or weighted. The avg function sums the membership values of each query and divides by the count. The weighted function is similar to a weighted average. The xcix is calculated by putting a higher value on memberhip in concepts that are closer to the beginning of the query, and then divides by the weighted count. Since the xcix is added to each event, other commands can then be applied to generate more intelligent information.</span>
      </p>
      <p>
        <span class="head4">Syntax: </span>
        <span class="bodytext">xsGetWhereCIX [cixname=string] [cixtype=avg|weighted] xsWhere-option (xsWhere-andor-option xsWhere-option)*</span>
      </p>
      <p>
        <br />
        <span class="head4">Example: </span>
        <span class="code">... | xsGetWhereCIX AirTime is minimal or AirTime is short</span>
      </p>
      <p>
        <span class="explanation">Runs the query where the field AirTime is minimal or AirTime is short, as determined by the Context "AirTime" and sets the CIX for each event.</span>
      </p>
      <p>
        <span class="head4">Example: </span>
        <span class="code">... | xsGetWhereCIX cixtype=weighted AirTime is minimal or AirTime is short</span>
      </p>
      <p>
        <span class="explanation">Runs the query where the field AirTime is minimal or AirTime is short, as determined by the Context "AirTime" and sets the CIX for each event. The algorithm used to determine the compatability index is "weighted average". </span>
      </p>
      <p>
        <span class="head4">Parameters: </span>
        <span class="bodytext">alfacut, cixname, cixtype, synonyms, usealfa, xsWhere-andor-option, xsWhere-option</span>
      </p>
      <p>
        <span class="para">alfacut</span>
      </p>
      <p>
        <span class="explanation">The minimal acceptable value of the compatability index (CiX) needed for the event to be considered as a match for the query. The default is 0.2.</span>
      </p>
      <p>
        <span class="para">cixname</span>
      </p>
      <p>
        <span class="explanation">The name of the field containing the Compatability Index (CIX). The default is "WhereCIX".</span>
      </p>
      <p>
        <span class="para">cixtype</span>
      </p>
      <p>
	      <span class="explanation">The function used to generate the CIX.  The choices are "average" and "weighted". The default is "average". </span>
      </p>
      <p>
        <span class="para">synonyms</span>
      </p>
      <p>
        <span class="explanation">The lookup file that contains the synonyms to be used as hedges. This is a csv file that lives in the lookups directory.</span>
      </p>
      <p>
        <span class="para">usealfa</span>
      </p>
      <p>
        <span class="explanation">If this is set to 'true', then any event whose Cix is below the alfacut will have the value in cixname (default is "WhereCIX") set to 0 instead of the CIX</span>
      </p>
      <p>
        <span class="para">xsWhere-andor-option</span>
      </p>
      <p>
        <span class="explanation">The connector between xsWhere-option.  This can be AND or OR. </span>
      </p>
      <p>
        <span class="para">xsWhere-option</span>
      </p>
      <p>
      <span class="explanation">The compatibility query. The query is structured as follows: field [FROM context] [IN container] [BY class] IS [hedge]* set. The field must be one of the fields in the event. The context, container, and class is optional.  If a context is not specified, the query uses a context of the same name as the field. If a container is not specified, the query uses a container of the same name as the context. A hedge can be one or more of the following: above, after, before, below, close extremely, generally, not, positively, slightly, somewhat, very, vicinity. The set is the name of a set in the context.  </span>
      </p>
<br /><br />
      <a class="btn btn-xtreme" href="command_reference"> <span class="icon-play"></span> Return to Command Reference </a> 
      <p><br /><br />
        <span class="head4">Learn more: </span>
        <span class="bodytext">
          <a href="http://www.scianta.com/learn" target="_blank">Scianta Analytics Learning Center</a>
        </span>
      </p><br /><br />
      <p>VERSION: 20150816.1<br />
      Custom application development for Splunk by <a href="http://www.concanon.com/#services"
          target="_blank"> Concanon LLC.</a><br />
	Some portions of Extreme Search for Splunk are patented under US Patent 9,087,090.<br />
Copyright 2015 Scianta Analytics LLC. All Rights Reserved.</p>
    </html>
  </row>
</dashboard>
