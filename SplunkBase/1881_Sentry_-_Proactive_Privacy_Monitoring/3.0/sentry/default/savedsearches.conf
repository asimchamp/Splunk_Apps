#####################################################################################
# Enrich/Auxiliary and/or general summarization
#####################################################################################

[Enrich: Access Audit Customer is Employee]
action.email = 1
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 15 18 * * *
description = Enriched Cube.
dispatch.earliest_time = -1d@d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = equal to
search = index=sentry emp_first_name!="-" \
| lookup cust_is_emp cust_id \
| where isnotnull(ce_user_id) \
| stats count by _time, access_time, access_instant, process_id, metric_id, metric_name, metric_type, csn, \
workstation_id, user_id, emp_last_name, emp_first_name, emp_middle_name, emp_birthdate, emp_ssn_last4, emp_addr_line1, \
emp_addr_line2, emp_city, emp_state, emp_zip, emp_phone, emp_org, emp_type, emp_job_title, emp_facility, emp_hr_dept, \
emp_dept, emp_mailstop, mgr_last_name, mgr_first_name, cust_id, cust_first_name, cust_last_name, cust_addr_line1, \
cust_addr_line2, cust_city, cust_state, cust_zip, cust_ssn_last4, cust_pat_id, ce_user_id, ce_job_title, ce_dept, \
ce_hr_dept, ce_facility, ce_mailstop, ce_type, ce_org, ce_mgr_first_name, ce_mgr_last_name \
| collect index=sentry_summary marker="cube=access_audit_ce"


[Stat: Non-Employee]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 00 19 * * *
description = stats by user_id emp_type emp_org emp_dept
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_type!="EMP" \
| bucket _time span=1d \
| stats count by _time user_id emp_type emp_org emp_dept \
| collect index=sentry_summary marker="stat=nonemp"
disabled = 1


#####################################################################################
# Relation: Personal
#####################################################################################

[Report: Employee Viewing Last Name]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 50 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_last_name!="-"\
| where emp_last_name=cust_last_name \
| lookup common_last_name last_name AS cust_last_name OUTPUT adjust \
| lookup cust_is_emp cust_user_id AS user_id OUTPUT cust_id AS emp_cust_id\
| eval lnm = if(abs(emp_cust_id - cust_id) < 20000, 100, 0) \
| eval lnm = if(isnotnull(adjust), lnm + floor(adjust), lnm + 100) \
| `emp_demo` \
| `cust_demo` \
| `cmp_field("name")` \
| `cmp_field("addr")` \
| stats last(_time) AS _time last(access_time) AS initial_access count AS access_count by lnm app user_id cust_id emp_job_title emp_hr_dept emp_cust_addr emp_cust_name \
| sort -lnm -access_count \
| fields _time initial_access lnm app access_count user_id cust_id emp_job_title emp_hr_dept emp_cust_name emp_cust_addr \
| collect index=sentry_summary marker="report=emp_view_lastname"


[Report: Employee Viewing Self]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 10 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry \
| eval evs = if(emp_last_name!="-" AND emp_last_name=cust_last_name, 10, 0) \
| eval evs = if(emp_first_name!="-" AND emp_first_name=cust_first_name, evs + 10, evs) \
| eval evs = if(evs=20, evs+50, evs) \
| eval evs = if(emp_ssn_last4!="-" AND emp_ssn_last4=cust_ssn_last4, evs+20, evs) \
| where evs>20 \
| `emp_demo` \
| `cust_demo` \
| `cmp_field("name")` \
| `cmp_field("ssn_last4")` \
| `cmp_field("addr")` \
| table _time evs access_time app access_type metric_name user_id cust_id emp_job_title emp_hr_dept emp_cust_name emp_cust_ssn_last4 emp_cust_addr\
| collect index=sentry_summary marker="report=emp_view_self"


#####################################################################################
# Relation: Physical
#####################################################################################

[Report: Employee Viewing Address]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry \
| where emp_city = cust_city OR emp_zip = cust_zip \
| `cust_demo` \
| eval eva = if(emp_addr_line1!="-" AND match(cust_addr, emp_addr_line1), 30, 0) \
| eval eva = if(eva=30 AND emp_addr_line2="-", eva+20, eva) \
| eval eva = if(eva!=0 AND emp_addr_line2!="-" AND match(cust_addr, emp_addr_line2), eva+10, eva) \
| eval eva = if(eva!=0 AND emp_last_name!="-" AND emp_last_name=cust_last_name, eva+20, eva) \
| eval eva = if(eva!=0 AND emp_first_name!="-" AND emp_first_name=cust_first_name, eva+10, eva) \
| where eva > 0 \
| `emp_demo` \
| `cmp_field("name")` \
| `cmp_field("addr")` \
| stats count by _time eva access_time app access_type metric_name user_id cust_id emp_job_title emp_hr_dept emp_cust_addr emp_cust_name \
| collect index=sentry_summary marker="report=emp_view_addr"


#####################################################################################
# Relation: Organizational
#####################################################################################

[Report: Direct Report Viewing Manager]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 20 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_first_name!="-" \
| where cust_last_name = mgr_last_name AND cust_first_name = mgr_first_name \
| `emp_name` \
| `cust_name` \
| `mgr_name` \
| stats count by _time access_time app access_type metric_name user_id cust_id emp_hr_dept emp_job_title emp_name mgr_name cust_name \
| collect index=sentry_summary marker="report=direct_view_manager"

[Report: Manager Viewing Direct Report]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 15 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_first_name!="-"\
| lookup cust_is_emp cust_id \
| where isnotnull(cust_user_id) \
| eval mve = if(emp_last_name = cust_mgr_last_name AND emp_first_name = cust_mgr_first_name, 50, 0) \
| where mve > 0 \
| `emp_demo` \
| `cust_demo` \
| eval cust_mgr_name = cust_mgr_last_name + ", " + cust_mgr_first_name \
| stats count by _time mve access_time app access_type metric_name user_id cust_id emp_hr_dept emp_job_title emp_name cust_name cust_job_title cust_mgr_name \
| collect index=sentry_summary marker="report=manager_view_direct"


#####################################################################################
# Analytic: Commonality
#####################################################################################

[Report: Customer Walk Count]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 30 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_first_name!="-" \
| eval date = strftime(_time, "%Y-%m-%d") \
| stats last(_time) AS _time values(cust_id) AS cust_ids by app user_id date \
| where mvcount(cust_ids) > 4 \
| sort user_id \
| mvexpand cust_ids \
| delta cust_ids AS cust_delta \
| eval cust_delta = abs(cust_delta) \
| where cust_delta < 20 \
| stats last(_time) AS _time count AS walk_count by app user_id date \
| where walk_count > 4\
| collect index=sentry_summary marker="report=cust_walk_count"

[Report: Employee Viewing Employee]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 25 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_first_name!="-" \
| lookup cust_is_emp cust_id \
| where isnotnull(cust_user_id) \
| transaction cust_id maxpause=1d \
| where mvcount(user_id)=1 \
| search metric_name!="IP_NOTES" \
| eval access_count = eventcount \
| `emp_demo` \
| `cust_demo` \
| eval metric_ratio = ceil(access_count / mvcount(metric_name)) \
| eval eve=access_count \
| eval eve=if(emp_facility=cust_facility, eve + 20, eve) \
| eval eve=if(mgr_last_name=cust_mgr_last_name AND mgr_first_name=cust_mgr_first_name, eve + 50, eve) \
| eval eve=if(emp_mailstop=cust_mailstop, eve + 20, eve) \
| eval eve=if(emp_hr_dept=cust_hr_dept, eve + 40, eve) \
| eval eve=if(emp_dept=cust_dept, eve + 20, eve) \
| eval eve=if(emp_job_title=cust_job_title, eve + 20, eve) \
| eval eve=eve*metric_ratio \
| where eve > 50\
| `cmp_field("dept")`\
| `cmp_field("hr_dept")`\
| `cmp_field("job_title")`\
| `cmp_field("facility")`\
| `cmp_field("mailstop")`\
| eval emp_cust_mgr = mgr_last_name + ", " + mgr_first_name + " || " + cust_mgr_last_name + ", " + cust_mgr_first_name \
| eval access_start = mvindex(access_time, 0) \
| eval uniq_metrics = mvcount(metric_name) \
| table _time eve access_count uniq_metrics access_start app user_id cust_id emp_name cust_name emp_cust_job_title emp_cust_dept emp_cust_hr_dept emp_cust_facility emp_cust_mailstop emp_cust_mgr\
| collect index=sentry_summary marker="report=emp_view_emp"


#####################################################################################
# Analytic: Customer Demographics
#####################################################################################

[Report: Deceased Customer Access]
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 50 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry cust_death_date!="-" user_id!="ZZOTX" NOT (app=Centricity metric_name=UPDATE) | `cust_demo` | `emp_demo` | rex field=cust_birth_date ".+/.+/(?<birth_year>.+)" | rex field=cust_death_date ".+/.+/(?<death_year>.+)" | eval cust_age = death_year - birth_year | eval months_deceased = floor((_time - strptime(cust_death_date, "%d/%m/%Y")) / 2592000 ) | where months_deceased>0 | stats c AS access_count first(access_time) AS access_time values(metric_name) AS metric_name values(access_type) AS access_type by months_deceased,app,user_id,cust_id,emp_name,emp_job_title,emp_hr_dept,cust_name,cust_age,cust_birth_date,cust_death_date | table months_deceased,access_count,access_time,app,access_type,metric_name,user_id,cust_id,emp_name,emp_job_title,emp_hr_dept,cust_name,cust_age,cust_birth_date,cust_death_date | sort - months_deceased | collect index=sentry_summary marker="report=cust_demo_dod"


#####################################################################################
# Analytic: Non-Employee
#####################################################################################

[Report: Non-Employee Access]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 35 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_type!="EMP" emp_first_name!="-" \
| eval date = strftime(_time, "%Y-%m-%d") \
| `emp_demo` \
| stats last(_time) AS _time count AS access_count, values(app) AS apps values(access_type) AS access_types, dc(cust_id) AS cust_count by date user_id emp_name emp_type emp_org emp_job_title emp_dept \
| eval avg_access=floor(access_count / cust_count)\
| collect index=sentry_summary marker="report=nonemp_access"

[Report: Non-Employee Access No Demographics]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 40 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_type!="EMP" emp_first_name="-" emp_first_name!="ZZ*" emp_first_name!="1*"\
| eval date = strftime(_time, "%Y-%m-%d")  \
| stats last(_time) AS _time count AS access_count, values(access_type) AS access_types, values(app) AS apps, dc(cust_id) AS cust_count by date user_id \
| eval avg_access=floor(access_count / cust_count) \
| eval _time=strptime(date, "%Y-%m-%d")\
| collect index=sentry_summary marker="report=nonemp_nodemo"

[Report: Non-Employee Viewing Lastname]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
cron_schedule = 45 19 * * *
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
enableSched = 1
search = index=sentry emp_type!="EMP" emp_first_name!="-" \
| where emp_last_name=cust_last_name \
| `cust_demo` \
| `emp_demo` \
| table _time access_time app access_type metric_name user_id cust_id emp_name cust_name \
| collect index=sentry_summary marker="report=nonemp_view_lastname"


#####################################################################################
# Health Checks
#####################################################################################

[Health: Common Last Name Failed to Update]
action.email = 1
action.email.inline = 1
action.email.sendresults = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 1 * * *
enableSched = 1
quantity = 0
relation = greater than
search = | lsfilename "../lookups/common_last_name.csv" \
| eval file_age=run_time_epoch - log_mtime \
| where file_age > 86400 \
| table run_time_iso file_name log_size file_age

[Health: Common Last Name Lookup Undersized]
action.email = 1
action.email.inline = 1
action.email.sendresults = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 1 * * *
enableSched = 1
quantity = 0
relation = greater than
search = | lsfilename "../lookups/common_last_name.csv" \
| where log_size < 4000 \
| table run_time_iso file_name log_size


#####################################################################################
# Triage
#####################################################################################

[Triage: Backup]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 00 23 * * *
description = Backup of Triage lookup one for each day of the week in case something goes wrong and we need to recover previously triagged events.
enableSched = 1
search = |inputlookup triage | outputlookup [search index=_internal | head 1 | eval filename = "triage_backup_".date_wday.".csv" | fields filename | return $filename]

[Triage: Prune Old and Deleted]
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 4 * * *
enableSched = 1
search = |inputlookup triage \
| where isnotnull(update_time) AND \
  status!="Delete" AND \
  ((status="False Positive" AND update_time > relative_time(now(), "-60d@d")) OR \
   (status="Investigating" AND update_time > relative_time(now(), "-60d@d")) OR \
   (status="Incident" AND update_time > relative_time(now(), "-6mon@mon")))\
| outputlookup triage

