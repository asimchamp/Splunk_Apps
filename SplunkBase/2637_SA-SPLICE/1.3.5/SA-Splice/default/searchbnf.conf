[iocsearch-command]
syntax      = iocsearch map=<string> 
shortdesc   = search events for matching atomic indicators from ingested IOCs
description = iocsearch identify fields as specific types (ipv4-addr, url, domain, etc) to allows appropriate matching accross IOCs. \i\\
              "map"          - specify the fields mapping to use. \i\\

comment1 = Map the field cs_uri as an URL and the field c_ip as an IPv4.
example1 = ... | iocsearch map="cs_uri:url,c_ip:ipv4-addr" 

[iocstats-command]
syntax      = iocstats stat=<string>
#shortdesc   = 
description = retrieve simple statistics about IOCs stored in the Mongo DB.
comment1 = list the available statistics
example1 = | iocstats stat="list"
comment2 = get the number of IOCs stored in the MongoDB
example2 = | iocstats stat="number_of_iocs"

[iocfilter-command]
syntax      = iocfilter regex=<string> (ignorecase=<bool>)? (displaydisabled=<bool>)? (addTime=<bool>)?
shortdesc   = iocfilter regex="<PCRE Pattern>" [ignorecase=True|False] [displaydisabled=True|False] [addTime=True|False]
description = search the stored atomic indicators for pattern of your choice using PCRE regex.
comment1 = search for any atomic indicator having the word 'micro' in it.
example1 = | iocfilter regex="MICRO" ignorecase=True
comment2 = search for any atomic indicator have the pattern '2' followed by any digit then a '1' (201, 211, ..., 291).
example2 = | iocfilter regex="2\\d1" 

[iocexportcsv-command]
syntax      = iocexportcsv value_type=<string> alias=<string> directory=<string> filename=<string>
shortdesc   = iocexportcsv value_type="<type of atomic indicator to export>" alias="<header name>" directory="<path>" filename="<csv filename>"
description = export atomic indicators as CSV 
comment1 = export IPv4 indicators in the file '/tmp/myIpList.csv' and set 'ip' as header for the column containing the IP addresses.
example1 = | iocexportcsv value_type="ipv4-addr" alias="ip" directory="/tmp" filename="myIpList.csv"

[iocdisplay-command]
syntax      = iocdisplay (ioc_id|indicator_id|ioc_raw_id|indicator_raw_id)=<string>
shortdesc   = iocdisplay ioc_id="<comma separated list of object IDs>"
description = retrieve one or more IOCs based on the submitted IDs. Admit '*' to retrieve all IOCs.
comment1 = retrieve the IOCs associated with 2 indicators id.
example1 = | iocdisplay indicator_id="example:Address-7e3827ad-9019-494a-b8ae-2c24c3749442,example:Object-1980ce43-8e03-490b-863a-ea404d12242e"

[ioctoggle-command]
syntax      = ioctoggle (ioc_id|indicator_id|ioc_raw_id|indicator_raw_id)=<string>
shortdesc   = ioctoggle ioc_id="<comma separated list of object IDs>"
description = toggle the state of specified indicators (enabled->disabled, disabled->enabled). Admit the wildcard '*'
comment1 = change the state of 2 indicators referenced by their indicator_id
example1 = | iocdisplay indicator_id="example:Address-7e3827ad-9019-494a-b8ae-2c24c3749442,example:Object-1980ce43-8e03-490b-863a-ea404d12242e"

