[Top 20 - Current Popular Products]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | sort 0 -PopularityRank | table Id, Title, PopularityRank | head 20

[Products Sorted by Gravity - Most Recent Data]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | sort 0 -Gravity | dedup Id | table Id, Gravity

[Gravity Distribution Curve]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | sort 0 -Gravity | dedup Id | table Id, Gravity

[Top Gravity Values - Most Recent Data]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | eval round_grav=round(Gravity) | table Gravity,round_grav | top 20 round_grav

[Top Gravity Values - Pie Chart]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | eval round_grav=round(Gravity) | table Gravity,round_grav | top 20 round_grav

[Top 20 Products By Gravity]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | sort 0 -Gravity | dedup Id | table Id, Gravity, Title, ActivateDate | head 20

[Gravity by Product Id - Multi-Series]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | sort 0 -Gravity | dedup Id | streamstats count as Seq_Num | table Id, Gravity, Seq_Num

[Top 10 Gravity Gainers]
action.email.reportServerEnabled = 0
alert.track = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | eval mday=strftime(_time,"%d") | dedup Id mday | stats first(Gravity) as GravF last(Gravity) as GravL by Id | eval GravityChange=GravL-GravF | sort 0 -GravityChange | table Id,GravityChange | head 10

[Top 10 Gravity Losers]
action.email.reportServerEnabled = 0
alert.track = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | eval mday=strftime(_time,"%d") | dedup Id mday | stats first(Gravity) as GravF last(Gravity) as GravL by Id | eval GravityChange=GravL-GravF | sort 0 GravityChange | table Id,GravityChange | head 10

[Top 20 Most Popular Categories]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats dc(Id) As Product_Count by CategoryName | sort 0 -Product_Count | head 20

[Top 20 Most Popular Categories - Column Chart]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats dc(Id) As Product_Count by CategoryName | sort 0 -Product_Count | head 20

[Top 10 Categories with Highest Median Gravity]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats median(Gravity) AS MEDIAN_Gravity dc(Id) AS Id_Count by CategoryName | table CategoryName, MEDIAN_Gravity, Id_Count | sort 0 -Median_Gravity | head 10

[Top 10 Categories with Highest Median Gravity - Pie Chart]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
description = Pie Chart
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats median(Gravity) AS MEDIAN_Gravity dc(Id) AS Id_Count by CategoryName | table CategoryName, MEDIAN_Gravity, Id_Count | sort 0 -Median_Gravity | head 10

[Top 10 Categories with Highest Avg Gravity]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(Gravity) AS AVG_Gravity dc(Id) AS Id_Count by CategoryName | table CategoryName, AVG_Gravity, Id_Count | sort 0 -AVG_Gravity | head 10

[Top 10 Categories with Highest Avg Gravity - Pie Chart]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
description = Pie Chart
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(Gravity) AS AVG_Gravity dc(Id) AS Id_Count by CategoryName | table CategoryName, AVG_Gravity, Id_Count | sort 0 -AVG_Gravity | head 10

[All Categories Ranked by Avg Gravity]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(Gravity) AS AVG_Gravity dc(Id) AS Id_Count by CategoryName | table CategoryName, AVG_Gravity, Id_Count | sort 0 -AVG_Gravity

[All Categories Ranked by Median Gravity]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats median(Gravity) AS MEDIAN_Gravity dc(Id) AS Id_Count by CategoryName | table CategoryName, MEDIAN_Gravity, Id_Count | sort 0 -Median_Gravity

[Top 10 Categories with Highest Avg Gravity - At Least 10 Products]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(Gravity) AS AVG_Gravity dc(Id) AS Id_Count by CategoryName | where Id_Count > 10 | table CategoryName, AVG_Gravity, Id_Count | sort 0 -AVG_Gravity | head 10

[Top 10 Categories with Highest Avg Gravity - At Least 10 Products - Pie]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(Gravity) AS AVG_Gravity dc(Id) AS Id_Count by CategoryName | where Id_Count > 10 | table CategoryName, AVG_Gravity, Id_Count | sort 0 -AVG_Gravity | head 10

[Top 10 Categories with Highest Median Gravity - At Least 10 Products]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats median(Gravity) AS Median_Gravity dc(Id) AS Id_Count by CategoryName | where Id_Count > 10 | table CategoryName, Median_Gravity, Id_Count | sort 0 -Median_Gravity | head 10

[Top 10 Categories with Highest median Gravity - At Least 10 Products - Pie]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats median(Gravity) AS Median_Gravity dc(Id) AS Id_Count by CategoryName | where Id_Count > 10 | table CategoryName, Median_Gravity, Id_Count | sort 0 -Median_Gravity | head 10

[Median Gravity for All Products]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats stdev(Gravity)

[Avg Gravity for All Products]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(Gravity)

[Sparkline Gravity Trends - All Products]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | eval mday=strftime(_time,"%d") | dedup Id mday | stats sparkline(avg(Gravity),1d) As GravityTrend by Id

[Single Product Gravity Trend]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = report_builder_display
request.ui_dispatch_view = report_builder_display
search = index=cbfeed * Id=USTRIP | eval mday=strftime(_time,"%d") | dedup Id mday | timechart avg(Gravity) by Id

[Gravity Trends All Products - Sparkline]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | eval mday=strftime(_time,"%d") | dedup Id mday | stats sparkline(avg(Gravity),1d) As GravityTrend by Id

[Number of Days in Index]
action.email.reportServerEnabled = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | stats dc(_time)

[Top 20 - Most Recent Products]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | eval ActivateDate_epoch=strptime(ActivateDate,"%Y-%m-%d") | sort 0 -ActivateDate_epoch | table Id, ActivateDate, Title, CategoryName, Gravity, PopularityRank | dedup Id | head 20

[Top 10 Charts]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(Gravity) AS AVG_Gravity dc(Id) AS Id_Count by CategoryName | table CategoryName, AVG_Gravity, Id_Count | sort 0 -AVG_Gravity | head 10

[Number of Products Indexed]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | stats dc(Id) AS Product_Count

[Products with Repeat Billing]
action.email.reportServerEnabled = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * HasRecurringProducts=true | stats dc(Id) AS Product_Count

[Number of Products with Gravity >100]
action.email.reportServerEnabled = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * Gravity>100 | stats dc(Id) AS HighGravityProducts

[temp]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed

[Single Product Popularity Trend]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * Id=USTRIP | eval mday=strftime(_time,"%d") | dedup Id mday | timechart avg(PopularityRank) by Id

[Top 10 Categories by Product Count]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats dc(Id) As Product_Count by CategoryName | sort 0 -Product_Count | head 10

[Get Product Description]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | search Id=USTRIP | dedup Id | table Description

[Get Product Stats]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | search Id=USTRIP | dedup Id | table PercentPerSale, PercentPerRebill, AverageEarningsPerSale, InitialEarningsPerSale, TotalRebillAmt,Referred,Commission

[Get Product ActivateDate]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | search Id=USTRIP | dedup Id | table ActivateDate

[Top 10 Categories with Highest Average Earnings Per Sale]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(AverageEarningsPerSale) AS AVG_Earnings_Per_Sale dc(Id) AS Product_Count by CategoryName | table CategoryName, AVG_Earnings_Per_Sale, Product_Count | sort 0 -AVG_Earnings_Per_Sale | head 10

[Top 10 Categories with Highest Average Rebill Rate]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | stats avg(TotalRebillAmt) AS AVG_Total_Rebill dc(Id) AS Product_Count by CategoryName | table CategoryName, AVG_Total_Rebill, Product_Count | sort 0 -AVG_Total_Rebill | head 10

[Popularity Trends All Products - Sparkline]
action.email.inline = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = flashtimeline
search = index=cbfeed * | eval mday=strftime(_time,"%d") | dedup Id mday | stats sparkline(avg(PopularityRank),1d) As Popularity by Id

[Top 10 Products Ranked by Gravity]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = cbfeed_flashtimeline
request.ui_dispatch_view = cbfeed_flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | dedup Id | sort 0 - Gravity | table Id, Gravity, AverageEarningsPerSale | head 10

[Product Analysis]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = cbfeed_flashtimeline
request.ui_dispatch_view = cbfeed_flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | dedup Id | sort 0 - Gravity | table Id, Gravity, AverageEarningsPerSale | head 10

[Top 10 Products Ranked by Highest Avg Earnings Per Sale]
action.email.inline = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
dispatch.earliest_time = 0
displayview = cbfeed_flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | dedup Id | sort 0 - AverageEarningsPerSale | table Id, Title, CategoryName, AverageEarningsPerSale | head 10

[Top 10 Products Ranked by Highest Renewals]
action.email.reportServerEnabled = 0
alert.track = 0
dispatch.earliest_time = 0
displayview = cbfeed_flashtimeline
request.ui_dispatch_view = cbfeed_flashtimeline
search = index=cbfeed * | streamstats dc(_time) as distinct_times | head (distinct_times == 1) | dedup Id | search HasRecurringProducts=true | sort 0 - TotalRebillAmt | table Id, Title, CategoryName, TotalRebillAmt

[Number of Distinct Products By Day]
action.email.reportServerEnabled = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
auto_summarize.timespan = 1m
dispatch.earliest_time = 0
displayview = cbfeed_flashtimeline
request.ui_dispatch_view = cbfeed_flashtimeline
search = index=cbfeed * | timechart dc(Id) As Number_Of_Products
