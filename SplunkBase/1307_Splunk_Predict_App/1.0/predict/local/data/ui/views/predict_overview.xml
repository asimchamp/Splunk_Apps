<dashboard>
 <label>Predict Overview</label>
<row>
 <html>

    <h1>Predict App</h1>
     <h2>Intro</h2>

     Now you can predict, and fill-in, the value of missing fields in
     your data, using training sets that have values.  For example,
     from users that fill out their gender, you can predict the gender
     of users that have not, perhaps based on first names, or other
     features; from events that list a host name, you can predict the
     host name for events that are missing it.

     You can also use the predicted value again the actual value to determine if values are unexpected.

  <br></br>
    <ul>
      <li>What is the gender or age of twitter users?</li>
      <li>What is the expected web browser given the time of day?</li>
      <li>Why did a user unsubscribe from a mailing list even if he didn't tell you?</li>
    </ul>
  
  <h2>App Details</h2>
  This app includes:
    <ul>
	<li><b>train</b> to train the model to predict a field value</li>
	<li><b>guess</b> to fill in missing field values</li>
	<li><b>reset</b> to delete a trained model</li>
	<li><b>test</b> to test the accuracy of predicted values</li>
    </ul>
    For details on the parameters for each of these commands, typeahead will provide all the defaults.  Make sure to click More on the typeahead instructions.
    <br/><br/>
    <h3>Examples</h3>
    For example, to learn gender from names, you might say train it with:
    <ul>
         <code>  gender=* | fields name, gender | train name2gender from gender</code>
    </ul>
    If you don't limit the fields to "name" and "gender" it will use
    all fields to predict gender. If you have an inkling of what
    fields can predict other fields, limit things, otherwise, don't
    bother and it will figure it out.
    <br/><br/>
    You can have it predict "gender" for events that don't have a gender field specified.
    <ul>
         <code>  * | guess name2gender into gender</code>
    </ul>
    <br/><br/>
    Another example, predict the sourcetype from the _raw text of events.  First train a model:
    <ul>
      <code>index=_internal | train getsrctype from sourcetype</code>
    </ul>
    Then use that model to guess sourcetypes and compare it to the real sourcetype value to measure accuracy:
    <ul>
      index=_internal | rename sourcetype as real_sourcetype | fields real_sourcetype | guess getsrctype into sourcetype | top sourcetype,real_sourcetype
    </ul>
    In test sets, this model predicted correctly 99.95%+ of the events.


    <h2>Method</h2>

      Currently this app builds a Naive Bayes model to predict values,
      which treats each field=value as an independent attribute.
      Future versions will have more sophisticated models with better prediction.
  
  </html>    
</row>
</dashboard>
