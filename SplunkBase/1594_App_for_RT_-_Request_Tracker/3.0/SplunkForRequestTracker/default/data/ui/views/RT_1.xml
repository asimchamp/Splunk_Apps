<form>
  <label>RealTime Reports I</label>
  <fieldset autoRun="true" submitButton="true">
    <input type="dropdown" token="Owner" searchWhenChanged="true">
      <label>Owner</label>
      <default>%</default>
      <!-- Define the default value -->
      <choice value="%">All</choice>
      <!-- Define the choices with a populating search -->
      <populatingSearch fieldForValue="Owner" fieldForLabel="Owner">index="*" sourcetype="rt" earliest=-15m@m | search Field="Status-real"  | dedup Owner| fields Owner</populatingSearch>
    </input>
    <input type="dropdown" token="Queue" searchWhenChanged="true">
      <label>Queue</label>
      <default>%</default>
      <!-- Define the default value -->
      <choice value="%">All</choice>
      <!-- Define the choices with a populating search -->
      <populatingSearch fieldForValue="Queue" fieldForLabel="Queue">index="*" sourcetype="rt" earliest=-15m@m | search Field="Status-real"  | dedup Queue| fields Queue</populatingSearch>
    </input>
  </fieldset>
  <row>
    <chart>
      <title>Tickets Opened by User</title>
      <searchString>index="*" sourcetype="rt"  earliest=-15m@m |  search  Field="Status-real" |eval Prop=if(like("$Owner$",""),"%","$Owner$") | dedup TicketID |   where like(Owner,Prop)  | eval Client=if(like("$Queue$",""),"%","$Queue$") |  where like(Queue,Client)|  chart count(TicketID) as "# Tickets" by Owner,NewValue</searchString>
      <earliestTime>$earliest$</earliestTime>
      <latestTime>$latest$</latestTime>
      <option name="charting.axisTitleX.visibility">visible</option>
      <option name="charting.axisTitleY.visibility">visible</option>
      <option name="charting.axisX.scale">linear</option>
      <option name="charting.axisY.scale">linear</option>
      <option name="charting.chart">bar</option>
      <option name="charting.chart.nullValueMode">gaps</option>
      <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
      <option name="charting.chart.stackMode">stacked</option>
      <option name="charting.chart.style">shiny</option>
      <option name="charting.drilldown">all</option>
      <option name="charting.layout.splitSeries">0</option>
      <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
      <option name="charting.legend.placement">bottom</option>
      <option name="charting.axisTitleX.text">Owner</option>
      <option name="charting.axisTitleY.text"># Tickets</option>
    </chart>
    <chart>
      <title>Tickets Opened by Queue</title>
      <searchString>index="*" sourcetype="rt"  earliest=-15m@m |   search  Field="Status-real" |eval Prop=if(like("$Owner$",""),"%","$Owner$") |  where like(Owner,Prop)  | dedup TicketID| eval Client=if(like("$Queue$",""),"%","$Queue$") |  where like(Queue,Client)|  rename Queue as Cliente |chart count(TicketID) as Numero_Tickets by Cliente,NewValue</searchString>
      <earliestTime>$earliest$</earliestTime>
      <latestTime>$latest$</latestTime>
      <option name="charting.axisTitleX.visibility">visible</option>
      <option name="charting.axisTitleY.visibility">visible</option>
      <option name="charting.axisX.scale">linear</option>
      <option name="charting.axisY.scale">linear</option>
      <option name="charting.chart">bar</option>
      <option name="charting.chart.nullValueMode">gaps</option>
      <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
      <option name="charting.chart.stackMode">stacked</option>
      <option name="charting.chart.style">shiny</option>
      <option name="charting.drilldown">all</option>
      <option name="charting.layout.splitSeries">0</option>
      <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
      <option name="charting.legend.placement">bottom</option>
      <option name="charting.axisTitleX.text">Queue</option>
      <option name="charting.axisTitleY.text"># Tickets</option>
    </chart>
  </row>
  <row>
    <table>
      <title>Tickets by User</title>
      <searchString>index="*" sourcetype="rt"  earliest=-15m@m |  search  Field="Status-real" |eval Prop=if(like("$Owner$",""),"%","$Owner$") | dedup TicketID |   where like(Owner,Prop)  | eval Client=if(like("$Queue$",""),"%","$Queue$") |  where like(Queue,Client)|   chart count(TicketID) as Numero_Tickets by Owner,NewValue</searchString>
    </table>
    <table>
      <title>Tickets by Queue</title>
      <searchString>index="*" sourcetype="rt" earliest=-15m@m |   search  Field="Status-real" |eval Prop=if(like("$Owner$",""),"%","$Owner$") |  where like(Owner,Prop)  | dedup TicketID| eval Client=if(like("$Queue$",""),"%","$Queue$") |  where like(Queue,Client) | eval Tiempo=now()-strptime(DateCreated,"%Y-%m-%d %H:%M:%S")  | chart  eval(sum(Tiempo)/count(TicketID)) as seconds, count(TicketID) as "# Tickets" by Queue | sort -num(seconds) |  eval my_days=floor(seconds/86400) | eval my_hours=floor(seconds / 3600 - my_days * 24) | eval my_minutes = floor(seconds / 60 - my_hours * 60 - my_days *  1440) | eval my_seconds = floor(seconds - my_days * 86400 - my_hours * 3600 - my_minutes * 60) | strcat my_days "d " my_hours "h " my_minutes "m " my_seconds "s" Avg_Time | rename "Avg_Time" as "Avg Time" | table Queue,"# Tickets","Avg Time"</searchString>
      <earliestTime>$earliest$</earliestTime>
      <latestTime>$latest$</latestTime>
      <option name="wrap">true</option>
      <option name="rowNumbers">false</option>
      <option name="dataOverlayMode">none</option>
      <option name="drilldown">row</option>
      <option name="count">10</option>
    </table>
  </row>
</form>
