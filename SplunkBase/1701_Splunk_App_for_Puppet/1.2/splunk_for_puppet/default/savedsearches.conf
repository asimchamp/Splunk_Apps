[collect_puppet_agent]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = * * * * *
dispatch.earliest_time = @d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = index=* "puppet-agent" "Retrieving plugin" | eval Status="OK" | table host,Status | outputlookup collect_agents.csv

[collect_report_2daysago]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -2d
dispatch.latest_time = -1d
enableSched = 1
quantity = 0
relation = greater than
search = index="*" puppet-agent Finished catalog run in | dedup host | rex field=_raw "(?<date>\w+\s+\d+\s\d+\:\d+\:\d+)" | append [search index="*" puppet-agent (daemon.notice OR daemon.info) main changed | eval applied=sourcetype] | append [search index="*" puppet-agent daemon.error (main) OR (Could not request certificate) OR (Could not retrieve catalog NOT skipping) OR ("Could not retrieve local facts") | eval failed=sourcetype] | append [search puppet-agent (daemon.notice OR daemon.info) main "refresh of service" | eval restarted=sourcetype] | append [search index="*" puppet-agent daemon.warning main "Skipping because of failed dependencies" | eval skipped=sourcetype] | chart list(date) as "Last update", count(applied) as "Applied", count(failed) as "Failed", count(restarted) as "Restarted", count(skipped) as "Skipped" by host | fillnull value=0 Skipped, Restarted, Failed, Applied | rename host as Client | outputlookup puppet_report_2daysago.csv

[collect_report_3daysago]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -3d
dispatch.latest_time = -2d
enableSched = 1
quantity = 0
relation = greater than
search = index="*" puppet-agent Finished catalog run in | dedup host | rex field=_raw "(?<date>\w+\s+\d+\s\d+\:\d+\:\d+)" | append [search index="*" puppet-agent (daemon.notice OR daemon.info) main changed | eval applied=sourcetype] | append [search index="*" puppet-agent daemon.error (main) OR (Could not request certificate) OR (Could not retrieve catalog NOT skipping) OR ("Could not retrieve local facts") | eval failed=sourcetype] | append [search puppet-agent (daemon.notice OR daemon.info) main "refresh of service" | eval restarted=sourcetype] | append [search index="*" puppet-agent daemon.warning main "Skipping because of failed dependencies" | eval skipped=sourcetype] | chart list(date) as "Last update", count(applied) as "Applied", count(failed) as "Failed", count(restarted) as "Restarted", count(skipped) as "Skipped" by host | fillnull value=0 Skipped, Restarted, Failed, Applied | rename host as Client | outputlookup puppet_report_3daysago.csv

[collect_report_4daysago]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -4d
dispatch.latest_time = -3d
enableSched = 1
quantity = 0
relation = greater than
search = index="*" puppet-agent Finished catalog run in | dedup host | rex field=_raw "(?<date>\w+\s+\d+\s\d+\:\d+\:\d+)" | append [search index="*" puppet-agent (daemon.notice OR daemon.info) main changed | eval applied=sourcetype] | append [search index="*" puppet-agent daemon.error (main) OR (Could not request certificate) OR (Could not retrieve catalog NOT skipping) OR ("Could not retrieve local facts") | eval failed=sourcetype] | append [search puppet-agent (daemon.notice OR daemon.info) main "refresh of service" | eval restarted=sourcetype] | append [search index="*" puppet-agent daemon.warning main "Skipping because of failed dependencies" | eval skipped=sourcetype] | chart list(date) as "Last update", count(applied) as "Applied", count(failed) as "Failed", count(restarted) as "Restarted", count(skipped) as "Skipped" by host | fillnull value=0 Skipped, Restarted, Failed, Applied | rename host as Client | outputlookup puppet_report_4daysago.csv

[collect_report_5daysago]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -5d
dispatch.latest_time = -4d
enableSched = 1
quantity = 0
relation = greater than
search = index="*" puppet-agent Finished catalog run in | dedup host | rex field=_raw "(?<date>\w+\s+\d+\s\d+\:\d+\:\d+)" | append [search index="*" puppet-agent (daemon.notice OR daemon.info) main changed | eval applied=sourcetype] | append [search index="*" puppet-agent daemon.error (main) OR (Could not request certificate) OR (Could not retrieve catalog NOT skipping) OR ("Could not retrieve local facts") | eval failed=sourcetype] | append [search puppet-agent (daemon.notice OR daemon.info) main "refresh of service" | eval restarted=sourcetype] | append [search index="*" puppet-agent daemon.warning main "Skipping because of failed dependencies" | eval skipped=sourcetype] | chart list(date) as "Last update", count(applied) as "Applied", count(failed) as "Failed", count(restarted) as "Restarted", count(skipped) as "Skipped" by host | fillnull value=0 Skipped, Restarted, Failed, Applied | rename host as Client | outputlookup puppet_report_5daysago.csv

[collect_report_6daysago]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -6d
dispatch.latest_time = -5d
enableSched = 1
quantity = 0
relation = greater than
search = index="*" puppet-agent Finished catalog run in | dedup host | rex field=_raw "(?<date>\w+\s+\d+\s\d+\:\d+\:\d+)" | append [search index="*" puppet-agent (daemon.notice OR daemon.info) main changed | eval applied=sourcetype] | append [search index="*" puppet-agent daemon.error (main) OR (Could not request certificate) OR (Could not retrieve catalog NOT skipping) OR ("Could not retrieve local facts") | eval failed=sourcetype] | append [search puppet-agent (daemon.notice OR daemon.info) main "refresh of service" | eval restarted=sourcetype] | append [search index="*" puppet-agent daemon.warning main "Skipping because of failed dependencies" | eval skipped=sourcetype] | chart list(date) as "Last update", count(applied) as "Applied", count(failed) as "Failed", count(restarted) as "Restarted", count(skipped) as "Skipped" by host | fillnull value=0 Skipped, Restarted, Failed, Applied | rename host as Client | outputlookup puppet_report_6daysago.csv

[collect_report_7daysago]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -7d
dispatch.latest_time = -6d
enableSched = 1
quantity = 0
relation = greater than
search = index="*" puppet-agent Finished catalog run in | dedup host | rex field=_raw "(?<date>\w+\s+\d+\s\d+\:\d+\:\d+)" | append [search index="*" puppet-agent (daemon.notice OR daemon.info) main changed | eval applied=sourcetype] | append [search index="*" puppet-agent daemon.error (main) OR (Could not request certificate) OR (Could not retrieve catalog NOT skipping) OR ("Could not retrieve local facts") | eval failed=sourcetype] | append [search puppet-agent (daemon.notice OR daemon.info) main "refresh of service" | eval restarted=sourcetype] | append [search index="*" puppet-agent daemon.warning main "Skipping because of failed dependencies" | eval skipped=sourcetype] | chart list(date) as "Last update", count(applied) as "Applied", count(failed) as "Failed", count(restarted) as "Restarted", count(skipped) as "Skipped" by host | fillnull value=0 Skipped, Restarted, Failed, Applied | rename host as Client | outputlookup puppet_report_7daysago.csv

[collect_report_yesterday]
action.email.inline = 1
alert.severity = 1
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = 0 0 * * *
dispatch.earliest_time = -1d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = splunk_for_puppet
request.ui_dispatch_view = search
search = index="*" puppet-agent Finished catalog run in | dedup host | rex field=_raw "(?<date>\w+\s+\d+\s\d+\:\d+\:\d+)" | append [search index="*" puppet-agent (daemon.notice OR daemon.info) main changed | eval applied=sourcetype] | append [search index="*" puppet-agent daemon.error (main) OR (Could not request certificate) OR (Could not retrieve catalog NOT skipping) OR ("Could not retrieve local facts") | eval failed=sourcetype] | append [search puppet-agent (daemon.notice OR daemon.info) main "refresh of service" | eval restarted=sourcetype] | append [search index="*" puppet-agent daemon.warning main "Skipping because of failed dependencies" | eval skipped=sourcetype] | chart list(date) as "Last update", count(applied) as "Applied", count(failed) as "Failed", count(restarted) as "Restarted", count(skipped) as "Skipped" by host | fillnull value=0 Skipped, Restarted, Failed, Applied | rename host as Client | outputlookup puppet_report_yesterday.csv

[collect_agents]
disabled = 0
