[interfacelist]
action.email.inline = 1
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 0 * * *
description = List interfaces that we know about
dispatch.earliest_time = -7d
dispatch.latest_time = now
search = sourcetype="ifcount*" | stats count by if | rex field=if "(?<if_num>\d+)" | sort if_num | table if
vsid = *:dkrkqgni

[Alert-Switch Memory Usage Percent]
action.email.reportServerEnabled = 0
alert.digest_mode = False
alert.suppress = 1
alert.suppress.fields = switchname
alert.suppress.period = 1d
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = */15 * * * *
description = Memory used above 80%
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
display.general.type = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = sourcetype="arista_switch_inventory" AristaSwitchCapacity | stats avg(memused) as avg_memused, sparkline(avg(memused), 1m) as mem_used_history by switchname memtotal | where avg_memused>85

[Alert-Switch CPU Usage Percent]
action.email.reportServerEnabled = 0
alert.digest_mode = False
alert.expires = 24h
alert.suppress = 1
alert.suppress.fields = switchname
alert.suppress.period = 1d
alert.track = 1
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = */15 * * * *
description = CPU used exceeds 85%
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
display.general.type = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = sourcetype="arista_switch_inventory" AristaSwitchCapacity | eval cpu_load=100-cpu_idle | stats latest(cpu_load) as cpu_load, latest(cpu_user) as cpu_user, latest(cpu_system) as cpu_system, latest(cpu_idle) as cpu_idle, sparkline(max(eval(rtrim(cpu_load,"%")))) as cpu_load_history by switchname | where cpu_load>85

[Summary-AristaIfCounters]
action.summary_index = 1
action.summary_index._name = arista
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = 0 * * * *
description = Summarize traffic counts by switchname
dispatch.earliest_time = -1h
dispatch.latest_time = now
enableSched = 1
realtime_schedule = 0
search = sourcetype="arista_switch_ifcounter" | eval outErrors=outErrors*-1 | eval outDiscards=outDiscards*-1 | sitimechart sum(inMulticastPkts), sum(outMulticastPkts), sum(inUcastPkts), sum(outUcastPkts), sum(inOctets), sum(outOctets), sum(inDiscards), sum(outDiscards), sum(inErrors), sum(outErrors), sum(outBroadcastPkts) by switchname

[Alert-PowerSupplyStatus]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = False
alert.severity = 4
alert.suppress = 1
alert.suppress.period = 1d
alert.suppress.fields = switchname
alert.track = 1
auto_summarize.dispatch.earliest_time = -1d@h
counttype = number of events
cron_schedule = */15 * * * *
description = Alerts when power supply status is no Ok.
dispatch.earliest_time = -15m@m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","switchname"]
display.general.type = statistics
display.page.search.mode = verbose
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = sourcetype="arista_switch_inventory" operstate!=Ok | stats sparkline(max(inputPower),70s) as inputPowerHist, sparkline(max(outputPower),70s) as outputPowerHist by switchname slot operstate make model serialnum capacity inputPower outputPower

[Recently_Fired_Alerts]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","switchname"]
display.general.type = statistics
display.page.search.mode = verbose
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_audit action=alert_fired | eval ttl=expiration-now() | search ttl>0 | convert ctime(trigger_time) | table trigger_time ss_name severity | rename ss_name as description

