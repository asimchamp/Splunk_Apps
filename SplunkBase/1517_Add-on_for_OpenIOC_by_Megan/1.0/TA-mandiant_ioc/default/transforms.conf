#matches up key/value pair in the XML
#allow multiples for nested fields
[iocHID]
REGEX= \<([^\>]+)\>([^\<]+)\<\/
FORMAT=$1::$2
MV_ADD=true

#need to specifically pull out source so it doesn't conflict
#with internal source field
[iocEventLog1]
REGEX= \<source\>([^\<]+)\<\/
FORMAT=evtlog_source::$1

#need to specifically pull out index so it doesn't conflict
#with internal index field
[iocEventLog2]
REGEX= \<index\>([^\<]+)\<\/
FORMAT=evtlog_index::$1

[iocEventLog3]
REGEX= \<log\>([^\<]+)\<\/
FORMAT=log::$1

[iocEventLog4]
REGEX= \<type\>([^\<]+)\<\/
FORMAT=type::$1

[iocEventLog5]
REGEX= \<categoryNum\>([^\<]+)\<\/
FORMAT=categoryNum::$1

[iocEventLog6]
REGEX= \<genTime\>([^\<]+)\<\/
FORMAT=genTime::$1

[iocEventLog7]
REGEX= \<writeTime\>([^\<]+)\<\/
FORMAT=writeTime::$1

[iocEventLog8]
REGEX= \<reserved\>([^\<]+)\<\/
FORMAT=reserved::$1

[iocEventLog9]
REGEX= \<machine\>([^\<]+)\<\/
FORMAT=machine::$1

[iocEventLog10]
REGEX= \<category\>([^\<]+)\<\/
FORMAT=category::$1

[iocEventLog11]
REGEX= \<message\>([^\<]+)\<\/
FORMAT=message::$1

[iocEventLog12]
REGEX= \<string\>([^\<]+)\<\/
FORMAT=unformattedmessage::$1
MV_ADD=true

#deal with possible multiple IPv4 addresses in entry
[iocIP]
REGEX = \<IPv4Address\>([^\s]+)\<
FIELDS = IPv4Address::$1
MV_ADD = true

#throw away the beginning XML tag
[xmlbeginNULL]
#REGEX = ^(\<\?xml.*[\n\r].*xsd\"\>)
REGEX = ^(\<\?xml version\=)
DEST_KEY = queue
FORMAT = nullQueue

#throw away the end XML tag
[xmlendNULL]
REGEX = (\/itemList\>)
DEST_KEY = queue
FORMAT = nullQueue

